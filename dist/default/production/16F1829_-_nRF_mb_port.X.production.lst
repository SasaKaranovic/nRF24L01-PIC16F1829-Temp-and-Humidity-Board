

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Dec 17 13:12:40 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,delta=2
    73                           	psect	swtext1,local,class=CONST,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0294                     	;# 
   195  0295                     	;# 
   196  0295                     	;# 
   197  0296                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  029B                     	;# 
   203  029C                     	;# 
   204  029D                     	;# 
   205  029E                     	;# 
   206  0311                     	;# 
   207  0311                     	;# 
   208  0312                     	;# 
   209  0313                     	;# 
   210  0318                     	;# 
   211  0318                     	;# 
   212  0319                     	;# 
   213  031A                     	;# 
   214  038C                     	;# 
   215  038D                     	;# 
   216  038E                     	;# 
   217  0391                     	;# 
   218  0392                     	;# 
   219  0393                     	;# 
   220  0394                     	;# 
   221  0395                     	;# 
   222  0396                     	;# 
   223  039A                     	;# 
   224  039C                     	;# 
   225  039D                     	;# 
   226  039E                     	;# 
   227  039F                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  041C                     	;# 
   232  041D                     	;# 
   233  041E                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  011E                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  018E                     	;# 
   312  0191                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019D                     	;# 
   327  019E                     	;# 
   328  019F                     	;# 
   329  020C                     	;# 
   330  020D                     	;# 
   331  020E                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0219                     	;# 
   348  021A                     	;# 
   349  021B                     	;# 
   350  021C                     	;# 
   351  021D                     	;# 
   352  021E                     	;# 
   353  021F                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0294                     	;# 
   359  0295                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029D                     	;# 
   369  029E                     	;# 
   370  0311                     	;# 
   371  0311                     	;# 
   372  0312                     	;# 
   373  0313                     	;# 
   374  0318                     	;# 
   375  0318                     	;# 
   376  0319                     	;# 
   377  031A                     	;# 
   378  038C                     	;# 
   379  038D                     	;# 
   380  038E                     	;# 
   381  0391                     	;# 
   382  0392                     	;# 
   383  0393                     	;# 
   384  0394                     	;# 
   385  0395                     	;# 
   386  0396                     	;# 
   387  039A                     	;# 
   388  039C                     	;# 
   389  039D                     	;# 
   390  039E                     	;# 
   391  039F                     	;# 
   392  0415                     	;# 
   393  0416                     	;# 
   394  0417                     	;# 
   395  041C                     	;# 
   396  041D                     	;# 
   397  041E                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  000E                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  0111                     	;# 
   461  0112                     	;# 
   462  0113                     	;# 
   463  0114                     	;# 
   464  0115                     	;# 
   465  0116                     	;# 
   466  0117                     	;# 
   467  0118                     	;# 
   468  0119                     	;# 
   469  011A                     	;# 
   470  011B                     	;# 
   471  011D                     	;# 
   472  011E                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  018E                     	;# 
   476  0191                     	;# 
   477  0191                     	;# 
   478  0192                     	;# 
   479  0193                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0194                     	;# 
   483  0195                     	;# 
   484  0196                     	;# 
   485  0199                     	;# 
   486  019A                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  020D                     	;# 
   495  020E                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0216                     	;# 
   509  0217                     	;# 
   510  0217                     	;# 
   511  0219                     	;# 
   512  021A                     	;# 
   513  021B                     	;# 
   514  021C                     	;# 
   515  021D                     	;# 
   516  021E                     	;# 
   517  021F                     	;# 
   518  0291                     	;# 
   519  0291                     	;# 
   520  0292                     	;# 
   521  0293                     	;# 
   522  0294                     	;# 
   523  0295                     	;# 
   524  0295                     	;# 
   525  0296                     	;# 
   526  0298                     	;# 
   527  0298                     	;# 
   528  0299                     	;# 
   529  029A                     	;# 
   530  029B                     	;# 
   531  029C                     	;# 
   532  029D                     	;# 
   533  029E                     	;# 
   534  0311                     	;# 
   535  0311                     	;# 
   536  0312                     	;# 
   537  0313                     	;# 
   538  0318                     	;# 
   539  0318                     	;# 
   540  0319                     	;# 
   541  031A                     	;# 
   542  038C                     	;# 
   543  038D                     	;# 
   544  038E                     	;# 
   545  0391                     	;# 
   546  0392                     	;# 
   547  0393                     	;# 
   548  0394                     	;# 
   549  0395                     	;# 
   550  0396                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0094                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0113                     	;# 
   627  0114                     	;# 
   628  0115                     	;# 
   629  0116                     	;# 
   630  0117                     	;# 
   631  0118                     	;# 
   632  0119                     	;# 
   633  011A                     	;# 
   634  011B                     	;# 
   635  011D                     	;# 
   636  011E                     	;# 
   637  018C                     	;# 
   638  018D                     	;# 
   639  018E                     	;# 
   640  0191                     	;# 
   641  0191                     	;# 
   642  0192                     	;# 
   643  0193                     	;# 
   644  0193                     	;# 
   645  0193                     	;# 
   646  0194                     	;# 
   647  0195                     	;# 
   648  0196                     	;# 
   649  0199                     	;# 
   650  019A                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019C                     	;# 
   654  019D                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020D                     	;# 
   659  020E                     	;# 
   660  0211                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0219                     	;# 
   676  021A                     	;# 
   677  021B                     	;# 
   678  021C                     	;# 
   679  021D                     	;# 
   680  021E                     	;# 
   681  021F                     	;# 
   682  0291                     	;# 
   683  0291                     	;# 
   684  0292                     	;# 
   685  0293                     	;# 
   686  0294                     	;# 
   687  0295                     	;# 
   688  0295                     	;# 
   689  0296                     	;# 
   690  0298                     	;# 
   691  0298                     	;# 
   692  0299                     	;# 
   693  029A                     	;# 
   694  029B                     	;# 
   695  029C                     	;# 
   696  029D                     	;# 
   697  029E                     	;# 
   698  0311                     	;# 
   699  0311                     	;# 
   700  0312                     	;# 
   701  0313                     	;# 
   702  0318                     	;# 
   703  0318                     	;# 
   704  0319                     	;# 
   705  031A                     	;# 
   706  038C                     	;# 
   707  038D                     	;# 
   708  038E                     	;# 
   709  0391                     	;# 
   710  0392                     	;# 
   711  0393                     	;# 
   712  0394                     	;# 
   713  0395                     	;# 
   714  0396                     	;# 
   715  039A                     	;# 
   716  039C                     	;# 
   717  039D                     	;# 
   718  039E                     	;# 
   719  039F                     	;# 
   720  0415                     	;# 
   721  0416                     	;# 
   722  0417                     	;# 
   723  041C                     	;# 
   724  041D                     	;# 
   725  041E                     	;# 
   726  0FE4                     	;# 
   727  0FE5                     	;# 
   728  0FE6                     	;# 
   729  0FE7                     	;# 
   730  0FE8                     	;# 
   731  0FE9                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  000D                     	;# 
   751  000E                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0015                     	;# 
   757  0016                     	;# 
   758  0016                     	;# 
   759  0017                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  001B                     	;# 
   764  001C                     	;# 
   765  001E                     	;# 
   766  001F                     	;# 
   767  008C                     	;# 
   768  008D                     	;# 
   769  008E                     	;# 
   770  0091                     	;# 
   771  0092                     	;# 
   772  0093                     	;# 
   773  0094                     	;# 
   774  0095                     	;# 
   775  0096                     	;# 
   776  0097                     	;# 
   777  0098                     	;# 
   778  0099                     	;# 
   779  009A                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0113                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  011A                     	;# 
   798  011B                     	;# 
   799  011D                     	;# 
   800  011E                     	;# 
   801  018C                     	;# 
   802  018D                     	;# 
   803  018E                     	;# 
   804  0191                     	;# 
   805  0191                     	;# 
   806  0192                     	;# 
   807  0193                     	;# 
   808  0193                     	;# 
   809  0193                     	;# 
   810  0194                     	;# 
   811  0195                     	;# 
   812  0196                     	;# 
   813  0199                     	;# 
   814  019A                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019E                     	;# 
   820  019F                     	;# 
   821  020C                     	;# 
   822  020D                     	;# 
   823  020E                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0219                     	;# 
   840  021A                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021D                     	;# 
   844  021E                     	;# 
   845  021F                     	;# 
   846  0291                     	;# 
   847  0291                     	;# 
   848  0292                     	;# 
   849  0293                     	;# 
   850  0294                     	;# 
   851  0295                     	;# 
   852  0295                     	;# 
   853  0296                     	;# 
   854  0298                     	;# 
   855  0298                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029B                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  029E                     	;# 
   862  0311                     	;# 
   863  0311                     	;# 
   864  0312                     	;# 
   865  0313                     	;# 
   866  0318                     	;# 
   867  0318                     	;# 
   868  0319                     	;# 
   869  031A                     	;# 
   870  038C                     	;# 
   871  038D                     	;# 
   872  038E                     	;# 
   873  0391                     	;# 
   874  0392                     	;# 
   875  0393                     	;# 
   876  0394                     	;# 
   877  0395                     	;# 
   878  0396                     	;# 
   879  039A                     	;# 
   880  039C                     	;# 
   881  039D                     	;# 
   882  039E                     	;# 
   883  039F                     	;# 
   884  0415                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  041C                     	;# 
   888  041D                     	;# 
   889  041E                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000D                     	;# 
   915  000E                     	;# 
   916  0011                     	;# 
   917  0012                     	;# 
   918  0013                     	;# 
   919  0014                     	;# 
   920  0015                     	;# 
   921  0016                     	;# 
   922  0016                     	;# 
   923  0017                     	;# 
   924  0018                     	;# 
   925  0019                     	;# 
   926  001A                     	;# 
   927  001B                     	;# 
   928  001C                     	;# 
   929  001E                     	;# 
   930  001F                     	;# 
   931  008C                     	;# 
   932  008D                     	;# 
   933  008E                     	;# 
   934  0091                     	;# 
   935  0092                     	;# 
   936  0093                     	;# 
   937  0094                     	;# 
   938  0095                     	;# 
   939  0096                     	;# 
   940  0097                     	;# 
   941  0098                     	;# 
   942  0099                     	;# 
   943  009A                     	;# 
   944  009B                     	;# 
   945  009B                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009E                     	;# 
   949  010C                     	;# 
   950  010D                     	;# 
   951  010E                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  018C                     	;# 
   966  018D                     	;# 
   967  018E                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0199                     	;# 
   978  019A                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019C                     	;# 
   982  019D                     	;# 
   983  019E                     	;# 
   984  019F                     	;# 
   985  020C                     	;# 
   986  020D                     	;# 
   987  020E                     	;# 
   988  0211                     	;# 
   989  0211                     	;# 
   990  0212                     	;# 
   991  0212                     	;# 
   992  0213                     	;# 
   993  0213                     	;# 
   994  0214                     	;# 
   995  0214                     	;# 
   996  0215                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0216                     	;# 
  1000  0216                     	;# 
  1001  0217                     	;# 
  1002  0217                     	;# 
  1003  0219                     	;# 
  1004  021A                     	;# 
  1005  021B                     	;# 
  1006  021C                     	;# 
  1007  021D                     	;# 
  1008  021E                     	;# 
  1009  021F                     	;# 
  1010  0291                     	;# 
  1011  0291                     	;# 
  1012  0292                     	;# 
  1013  0293                     	;# 
  1014  0294                     	;# 
  1015  0295                     	;# 
  1016  0295                     	;# 
  1017  0296                     	;# 
  1018  0298                     	;# 
  1019  0298                     	;# 
  1020  0299                     	;# 
  1021  029A                     	;# 
  1022  029B                     	;# 
  1023  029C                     	;# 
  1024  029D                     	;# 
  1025  029E                     	;# 
  1026  0311                     	;# 
  1027  0311                     	;# 
  1028  0312                     	;# 
  1029  0313                     	;# 
  1030  0318                     	;# 
  1031  0318                     	;# 
  1032  0319                     	;# 
  1033  031A                     	;# 
  1034  038C                     	;# 
  1035  038D                     	;# 
  1036  038E                     	;# 
  1037  0391                     	;# 
  1038  0392                     	;# 
  1039  0393                     	;# 
  1040  0394                     	;# 
  1041  0395                     	;# 
  1042  0396                     	;# 
  1043  039A                     	;# 
  1044  039C                     	;# 
  1045  039D                     	;# 
  1046  039E                     	;# 
  1047  039F                     	;# 
  1048  0415                     	;# 
  1049  0416                     	;# 
  1050  0417                     	;# 
  1051  041C                     	;# 
  1052  041D                     	;# 
  1053  041E                     	;# 
  1054  0FE4                     	;# 
  1055  0FE5                     	;# 
  1056  0FE6                     	;# 
  1057  0FE7                     	;# 
  1058  0FE8                     	;# 
  1059  0FE9                     	;# 
  1060  0FEA                     	;# 
  1061  0FEB                     	;# 
  1062  0FED                     	;# 
  1063  0FEE                     	;# 
  1064  0FEF                     	;# 
  1065  0000                     	;# 
  1066  0001                     	;# 
  1067  0002                     	;# 
  1068  0003                     	;# 
  1069  0004                     	;# 
  1070  0005                     	;# 
  1071  0006                     	;# 
  1072  0007                     	;# 
  1073  0008                     	;# 
  1074  0009                     	;# 
  1075  000A                     	;# 
  1076  000B                     	;# 
  1077  000C                     	;# 
  1078  000D                     	;# 
  1079  000E                     	;# 
  1080  0011                     	;# 
  1081  0012                     	;# 
  1082  0013                     	;# 
  1083  0014                     	;# 
  1084  0015                     	;# 
  1085  0016                     	;# 
  1086  0016                     	;# 
  1087  0017                     	;# 
  1088  0018                     	;# 
  1089  0019                     	;# 
  1090  001A                     	;# 
  1091  001B                     	;# 
  1092  001C                     	;# 
  1093  001E                     	;# 
  1094  001F                     	;# 
  1095  008C                     	;# 
  1096  008D                     	;# 
  1097  008E                     	;# 
  1098  0091                     	;# 
  1099  0092                     	;# 
  1100  0093                     	;# 
  1101  0094                     	;# 
  1102  0095                     	;# 
  1103  0096                     	;# 
  1104  0097                     	;# 
  1105  0098                     	;# 
  1106  0099                     	;# 
  1107  009A                     	;# 
  1108  009B                     	;# 
  1109  009B                     	;# 
  1110  009C                     	;# 
  1111  009D                     	;# 
  1112  009E                     	;# 
  1113  010C                     	;# 
  1114  010D                     	;# 
  1115  010E                     	;# 
  1116  0111                     	;# 
  1117  0112                     	;# 
  1118  0113                     	;# 
  1119  0114                     	;# 
  1120  0115                     	;# 
  1121  0116                     	;# 
  1122  0117                     	;# 
  1123  0118                     	;# 
  1124  0119                     	;# 
  1125  011A                     	;# 
  1126  011B                     	;# 
  1127  011D                     	;# 
  1128  011E                     	;# 
  1129  018C                     	;# 
  1130  018D                     	;# 
  1131  018E                     	;# 
  1132  0191                     	;# 
  1133  0191                     	;# 
  1134  0192                     	;# 
  1135  0193                     	;# 
  1136  0193                     	;# 
  1137  0193                     	;# 
  1138  0194                     	;# 
  1139  0195                     	;# 
  1140  0196                     	;# 
  1141  0199                     	;# 
  1142  019A                     	;# 
  1143  019B                     	;# 
  1144  019B                     	;# 
  1145  019C                     	;# 
  1146  019D                     	;# 
  1147  019E                     	;# 
  1148  019F                     	;# 
  1149  020C                     	;# 
  1150  020D                     	;# 
  1151  020E                     	;# 
  1152  0211                     	;# 
  1153  0211                     	;# 
  1154  0212                     	;# 
  1155  0212                     	;# 
  1156  0213                     	;# 
  1157  0213                     	;# 
  1158  0214                     	;# 
  1159  0214                     	;# 
  1160  0215                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0216                     	;# 
  1164  0216                     	;# 
  1165  0217                     	;# 
  1166  0217                     	;# 
  1167  0219                     	;# 
  1168  021A                     	;# 
  1169  021B                     	;# 
  1170  021C                     	;# 
  1171  021D                     	;# 
  1172  021E                     	;# 
  1173  021F                     	;# 
  1174  0291                     	;# 
  1175  0291                     	;# 
  1176  0292                     	;# 
  1177  0293                     	;# 
  1178  0294                     	;# 
  1179  0295                     	;# 
  1180  0295                     	;# 
  1181  0296                     	;# 
  1182  0298                     	;# 
  1183  0298                     	;# 
  1184  0299                     	;# 
  1185  029A                     	;# 
  1186  029B                     	;# 
  1187  029C                     	;# 
  1188  029D                     	;# 
  1189  029E                     	;# 
  1190  0311                     	;# 
  1191  0311                     	;# 
  1192  0312                     	;# 
  1193  0313                     	;# 
  1194  0318                     	;# 
  1195  0318                     	;# 
  1196  0319                     	;# 
  1197  031A                     	;# 
  1198  038C                     	;# 
  1199  038D                     	;# 
  1200  038E                     	;# 
  1201  0391                     	;# 
  1202  0392                     	;# 
  1203  0393                     	;# 
  1204  0394                     	;# 
  1205  0395                     	;# 
  1206  0396                     	;# 
  1207  039A                     	;# 
  1208  039C                     	;# 
  1209  039D                     	;# 
  1210  039E                     	;# 
  1211  039F                     	;# 
  1212  0415                     	;# 
  1213  0416                     	;# 
  1214  0417                     	;# 
  1215  041C                     	;# 
  1216  041D                     	;# 
  1217  041E                     	;# 
  1218  0FE4                     	;# 
  1219  0FE5                     	;# 
  1220  0FE6                     	;# 
  1221  0FE7                     	;# 
  1222  0FE8                     	;# 
  1223  0FE9                     	;# 
  1224  0FEA                     	;# 
  1225  0FEB                     	;# 
  1226  0FED                     	;# 
  1227  0FEE                     	;# 
  1228  0FEF                     	;# 
  1229  0000                     	;# 
  1230  0001                     	;# 
  1231  0002                     	;# 
  1232  0003                     	;# 
  1233  0004                     	;# 
  1234  0005                     	;# 
  1235  0006                     	;# 
  1236  0007                     	;# 
  1237  0008                     	;# 
  1238  0009                     	;# 
  1239  000A                     	;# 
  1240  000B                     	;# 
  1241  000C                     	;# 
  1242  000D                     	;# 
  1243  000E                     	;# 
  1244  0011                     	;# 
  1245  0012                     	;# 
  1246  0013                     	;# 
  1247  0014                     	;# 
  1248  0015                     	;# 
  1249  0016                     	;# 
  1250  0016                     	;# 
  1251  0017                     	;# 
  1252  0018                     	;# 
  1253  0019                     	;# 
  1254  001A                     	;# 
  1255  001B                     	;# 
  1256  001C                     	;# 
  1257  001E                     	;# 
  1258  001F                     	;# 
  1259  008C                     	;# 
  1260  008D                     	;# 
  1261  008E                     	;# 
  1262  0091                     	;# 
  1263  0092                     	;# 
  1264  0093                     	;# 
  1265  0094                     	;# 
  1266  0095                     	;# 
  1267  0096                     	;# 
  1268  0097                     	;# 
  1269  0098                     	;# 
  1270  0099                     	;# 
  1271  009A                     	;# 
  1272  009B                     	;# 
  1273  009B                     	;# 
  1274  009C                     	;# 
  1275  009D                     	;# 
  1276  009E                     	;# 
  1277  010C                     	;# 
  1278  010D                     	;# 
  1279  010E                     	;# 
  1280  0111                     	;# 
  1281  0112                     	;# 
  1282  0113                     	;# 
  1283  0114                     	;# 
  1284  0115                     	;# 
  1285  0116                     	;# 
  1286  0117                     	;# 
  1287  0118                     	;# 
  1288  0119                     	;# 
  1289  011A                     	;# 
  1290  011B                     	;# 
  1291  011D                     	;# 
  1292  011E                     	;# 
  1293  018C                     	;# 
  1294  018D                     	;# 
  1295  018E                     	;# 
  1296  0191                     	;# 
  1297  0191                     	;# 
  1298  0192                     	;# 
  1299  0193                     	;# 
  1300  0193                     	;# 
  1301  0193                     	;# 
  1302  0194                     	;# 
  1303  0195                     	;# 
  1304  0196                     	;# 
  1305  0199                     	;# 
  1306  019A                     	;# 
  1307  019B                     	;# 
  1308  019B                     	;# 
  1309  019C                     	;# 
  1310  019D                     	;# 
  1311  019E                     	;# 
  1312  019F                     	;# 
  1313  020C                     	;# 
  1314  020D                     	;# 
  1315  020E                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0216                     	;# 
  1328  0216                     	;# 
  1329  0217                     	;# 
  1330  0217                     	;# 
  1331  0219                     	;# 
  1332  021A                     	;# 
  1333  021B                     	;# 
  1334  021C                     	;# 
  1335  021D                     	;# 
  1336  021E                     	;# 
  1337  021F                     	;# 
  1338  0291                     	;# 
  1339  0291                     	;# 
  1340  0292                     	;# 
  1341  0293                     	;# 
  1342  0294                     	;# 
  1343  0295                     	;# 
  1344  0295                     	;# 
  1345  0296                     	;# 
  1346  0298                     	;# 
  1347  0298                     	;# 
  1348  0299                     	;# 
  1349  029A                     	;# 
  1350  029B                     	;# 
  1351  029C                     	;# 
  1352  029D                     	;# 
  1353  029E                     	;# 
  1354  0311                     	;# 
  1355  0311                     	;# 
  1356  0312                     	;# 
  1357  0313                     	;# 
  1358  0318                     	;# 
  1359  0318                     	;# 
  1360  0319                     	;# 
  1361  031A                     	;# 
  1362  038C                     	;# 
  1363  038D                     	;# 
  1364  038E                     	;# 
  1365  0391                     	;# 
  1366  0392                     	;# 
  1367  0393                     	;# 
  1368  0394                     	;# 
  1369  0395                     	;# 
  1370  0396                     	;# 
  1371  039A                     	;# 
  1372  039C                     	;# 
  1373  039D                     	;# 
  1374  039E                     	;# 
  1375  039F                     	;# 
  1376  0415                     	;# 
  1377  0416                     	;# 
  1378  0417                     	;# 
  1379  041C                     	;# 
  1380  041D                     	;# 
  1381  041E                     	;# 
  1382  0FE4                     	;# 
  1383  0FE5                     	;# 
  1384  0FE6                     	;# 
  1385  0FE7                     	;# 
  1386  0FE8                     	;# 
  1387  0FE9                     	;# 
  1388  0FEA                     	;# 
  1389  0FEB                     	;# 
  1390  0FED                     	;# 
  1391  0FEE                     	;# 
  1392  0FEF                     	;# 
  1393                           
  1394                           	psect	idataBANK1
  1395  1FDE                     __pidataBANK1:	
  1396                           
  1397                           ;initializer for main@F3477
  1398  1FDE  34E1               	retlw	225
  1399  1FDF  34F0               	retlw	240
  1400  1FE0  34F0               	retlw	240
  1401  1FE1  34F0               	retlw	240
  1402  1FE2  34F0               	retlw	240
  1403                           
  1404                           ;initializer for main@F3479
  1405  1FE3  3431               	retlw	49
  1406  1FE4  3476               	retlw	118
  1407  1FE5  3472               	retlw	114
  1408  1FE6  3465               	retlw	101
  1409  1FE7  3473               	retlw	115
  1410                           
  1411                           	psect	stringtext
  1412  0800                     __pstringtext:	
  1413  0800                     _octpowers:	
  1414  0800  3401               	retlw	1
  1415  0801  3400               	retlw	0
  1416  0802  3408               	retlw	8
  1417  0803  3400               	retlw	0
  1418  0804  3440               	retlw	64
  1419  0805  3400               	retlw	0
  1420  0806  3400               	retlw	0
  1421  0807  3402               	retlw	2
  1422  0808  3400               	retlw	0
  1423  0809  3410               	retlw	16
  1424  080A  3400               	retlw	0
  1425  080B  3480               	retlw	128
  1426  080C                     __end_of_octpowers:	
  1427  080C                     _dpowers:	
  1428  080C  3401               	retlw	1
  1429  080D  3400               	retlw	0
  1430  080E  340A               	retlw	10
  1431  080F  3400               	retlw	0
  1432  0810  3464               	retlw	100
  1433  0811  3400               	retlw	0
  1434  0812  34E8               	retlw	232
  1435  0813  3403               	retlw	3
  1436  0814  3410               	retlw	16
  1437  0815  3427               	retlw	39
  1438  0816                     __end_of_dpowers:	
  1439  0816                     _hexpowers:	
  1440  0816  3401               	retlw	1
  1441  0817  3400               	retlw	0
  1442  0818  3410               	retlw	16
  1443  0819  3400               	retlw	0
  1444  081A  3400               	retlw	0
  1445  081B  3401               	retlw	1
  1446  081C  3400               	retlw	0
  1447  081D  3410               	retlw	16
  1448  081E                     __end_of_hexpowers:	
  1449  081E                     _rf24_pa_dbm_e_str_P:	
  1450  081E  3487               	retlw	low (_rf24_pa_dbm_e_str_0| (0+32768))
  1451  081F  3488               	retlw	high (_rf24_pa_dbm_e_str_0| (0+32768))
  1452  0820  348E               	retlw	low (_rf24_pa_dbm_e_str_1| (0+32768))
  1453  0821  3488               	retlw	high (_rf24_pa_dbm_e_str_1| (0+32768))
  1454  0822  3495               	retlw	low (_rf24_pa_dbm_e_str_2| (0+32768))
  1455  0823  3488               	retlw	high (_rf24_pa_dbm_e_str_2| (0+32768))
  1456  0824  3478               	retlw	low (_rf24_pa_dbm_e_str_3| (0+32768))
  1457  0825  3488               	retlw	high (_rf24_pa_dbm_e_str_3| (0+32768))
  1458  0826                     __end_of_rf24_pa_dbm_e_str_P:	
  1459  0826                     _child_payload_size:	
  1460  0826  3411               	retlw	17
  1461  0827  3412               	retlw	18
  1462  0828  3413               	retlw	19
  1463  0829  3414               	retlw	20
  1464  082A  3415               	retlw	21
  1465  082B  3416               	retlw	22
  1466  082C                     __end_of_child_payload_size:	
  1467  082C                     _child_pipe:	
  1468  082C  340A               	retlw	10
  1469  082D  340B               	retlw	11
  1470  082E  340C               	retlw	12
  1471  082F  340D               	retlw	13
  1472  0830  340E               	retlw	14
  1473  0831  340F               	retlw	15
  1474  0832                     __end_of_child_pipe:	
  1475  0832                     _child_pipe_enable:	
  1476  0832  3400               	retlw	0
  1477  0833  3401               	retlw	1
  1478  0834  3402               	retlw	2
  1479  0835  3403               	retlw	3
  1480  0836  3404               	retlw	4
  1481  0837  3405               	retlw	5
  1482  0838                     __end_of_child_pipe_enable:	
  1483  0838                     _rf24_crclength_e_str_P:	
  1484  0838  3456               	retlw	low (_rf24_crclength_e_str_0| (0+32768))
  1485  0839  3488               	retlw	high (_rf24_crclength_e_str_0| (0+32768))
  1486  083A  3480               	retlw	low (_rf24_crclength_e_str_1| (0+32768))
  1487  083B  3488               	retlw	high (_rf24_crclength_e_str_1| (0+32768))
  1488  083C  3468               	retlw	low (_rf24_crclength_e_str_2| (0+32768))
  1489  083D  3488               	retlw	high (_rf24_crclength_e_str_2| (0+32768))
  1490  083E                     __end_of_rf24_crclength_e_str_P:	
  1491  083E                     _rf24_datarate_e_str_P:	
  1492  083E  349C               	retlw	low (_rf24_datarate_e_str_0| (0+32768))
  1493  083F  3488               	retlw	high (_rf24_datarate_e_str_0| (0+32768))
  1494  0840  34A2               	retlw	low (_rf24_datarate_e_str_1| (0+32768))
  1495  0841  3488               	retlw	high (_rf24_datarate_e_str_1| (0+32768))
  1496  0842  3470               	retlw	low (_rf24_datarate_e_str_2| (0+32768))
  1497  0843  3488               	retlw	high (_rf24_datarate_e_str_2| (0+32768))
  1498  0844                     __end_of_rf24_datarate_e_str_P:	
  1499  0844                     _rf24_model_e_str_P:	
  1500  0844  345F               	retlw	low (_rf24_model_e_str_0| (0+32768))
  1501  0845  3488               	retlw	high (_rf24_model_e_str_0| (0+32768))
  1502  0846  344C               	retlw	low (_rf24_model_e_str_1| (0+32768))
  1503  0847  3488               	retlw	high (_rf24_model_e_str_1| (0+32768))
  1504  0848                     __end_of_rf24_model_e_str_P:	
  1505  0848                     nrf_openWritingPipe@max_payload_size:	
  1506  0848  3420               	retlw	32
  1507  0849                     __end_ofnrf_openWritingPipe@max_payload_size:	
  1508  0849                     nrf_setChannel@max_channel:	
  1509  0849  347F               	retlw	127
  1510  084A                     __end_ofnrf_setChannel@max_channel:	
  1511  084A                     nrf_setPayloadSize@max_payload_size:	
  1512  084A  3420               	retlw	32
  1513  084B                     __end_ofnrf_setPayloadSize@max_payload_size:	
  1514  084B                     nrf_writeAckPayload@max_payload_size:	
  1515  084B  3420               	retlw	32
  1516  084C                     __end_ofnrf_writeAckPayload@max_payload_size:	
  1517  084C                     _rf24_model_e_str_1:	
  1518  084C  346E               	retlw	110
  1519  084D  3452               	retlw	82
  1520  084E  3446               	retlw	70
  1521  084F  3432               	retlw	50
  1522  0850  3434               	retlw	52
  1523  0851  344C               	retlw	76
  1524  0852  3430               	retlw	48
  1525  0853  3431               	retlw	49
  1526  0854  342B               	retlw	43
  1527  0855  3400               	retlw	0
  1528  0856                     __end_of_rf24_model_e_str_1:	
  1529  0856                     _rf24_crclength_e_str_0:	
  1530  0856  3444               	retlw	68
  1531  0857  3469               	retlw	105
  1532  0858  3473               	retlw	115
  1533  0859  3461               	retlw	97
  1534  085A  3462               	retlw	98
  1535  085B  346C               	retlw	108
  1536  085C  3465               	retlw	101
  1537  085D  3464               	retlw	100
  1538  085E  3400               	retlw	0
  1539  085F                     __end_of_rf24_crclength_e_str_0:	
  1540  085F                     _rf24_model_e_str_0:	
  1541  085F  346E               	retlw	110
  1542  0860  3452               	retlw	82
  1543  0861  3446               	retlw	70
  1544  0862  3432               	retlw	50
  1545  0863  3434               	retlw	52
  1546  0864  344C               	retlw	76
  1547  0865  3430               	retlw	48
  1548  0866  3431               	retlw	49
  1549  0867  3400               	retlw	0
  1550  0868                     __end_of_rf24_model_e_str_0:	
  1551  0868                     _rf24_crclength_e_str_2:	
  1552  0868  3431               	retlw	49
  1553  0869  3436               	retlw	54
  1554  086A  3420               	retlw	32
  1555  086B  3462               	retlw	98
  1556  086C  3469               	retlw	105
  1557  086D  3474               	retlw	116
  1558  086E  3473               	retlw	115
  1559  086F  3400               	retlw	0
  1560  0870                     __end_of_rf24_crclength_e_str_2:	
  1561  0870                     _rf24_datarate_e_str_2:	
  1562  0870  3432               	retlw	50
  1563  0871  3435               	retlw	53
  1564  0872  3430               	retlw	48
  1565  0873  344B               	retlw	75
  1566  0874  3442               	retlw	66
  1567  0875  3450               	retlw	80
  1568  0876  3453               	retlw	83
  1569  0877  3400               	retlw	0
  1570  0878                     __end_of_rf24_datarate_e_str_2:	
  1571  0878                     _rf24_pa_dbm_e_str_3:	
  1572  0878  3450               	retlw	80
  1573  0879  3441               	retlw	65
  1574  087A  345F               	retlw	95
  1575  087B  3448               	retlw	72
  1576  087C  3449               	retlw	73
  1577  087D  3447               	retlw	71
  1578  087E  3448               	retlw	72
  1579  087F  3400               	retlw	0
  1580  0880                     __end_of_rf24_pa_dbm_e_str_3:	
  1581  0880                     _rf24_crclength_e_str_1:	
  1582  0880  3438               	retlw	56
  1583  0881  3420               	retlw	32
  1584  0882  3462               	retlw	98
  1585  0883  3469               	retlw	105
  1586  0884  3474               	retlw	116
  1587  0885  3473               	retlw	115
  1588  0886  3400               	retlw	0
  1589  0887                     __end_of_rf24_crclength_e_str_1:	
  1590  0887                     _rf24_pa_dbm_e_str_0:	
  1591  0887  3450               	retlw	80
  1592  0888  3441               	retlw	65
  1593  0889  345F               	retlw	95
  1594  088A  344D               	retlw	77
  1595  088B  3449               	retlw	73
  1596  088C  344E               	retlw	78
  1597  088D  3400               	retlw	0
  1598  088E                     __end_of_rf24_pa_dbm_e_str_0:	
  1599  088E                     _rf24_pa_dbm_e_str_1:	
  1600  088E  3450               	retlw	80
  1601  088F  3441               	retlw	65
  1602  0890  345F               	retlw	95
  1603  0891  344C               	retlw	76
  1604  0892  344F               	retlw	79
  1605  0893  3457               	retlw	87
  1606  0894  3400               	retlw	0
  1607  0895                     __end_of_rf24_pa_dbm_e_str_1:	
  1608  0895                     _rf24_pa_dbm_e_str_2:	
  1609  0895  344C               	retlw	76
  1610  0896  3441               	retlw	65
  1611  0897  345F               	retlw	95
  1612  0898  344D               	retlw	77
  1613  0899  3445               	retlw	69
  1614  089A  3444               	retlw	68
  1615  089B  3400               	retlw	0
  1616  089C                     __end_of_rf24_pa_dbm_e_str_2:	
  1617  089C                     _rf24_datarate_e_str_0:	
  1618  089C  3431               	retlw	49
  1619  089D  344D               	retlw	77
  1620  089E  3442               	retlw	66
  1621  089F  3450               	retlw	80
  1622  08A0  3453               	retlw	83
  1623  08A1  3400               	retlw	0
  1624  08A2                     __end_of_rf24_datarate_e_str_0:	
  1625  08A2                     _rf24_datarate_e_str_1:	
  1626  08A2  3432               	retlw	50
  1627  08A3  344D               	retlw	77
  1628  08A4  3442               	retlw	66
  1629  08A5  3450               	retlw	80
  1630  08A6  3453               	retlw	83
  1631  08A7  3400               	retlw	0
  1632  08A8                     __end_of_rf24_datarate_e_str_1:	
  1633  000B                     _INTCONbits	set	11
  1634  0011                     _PIR1bits	set	17
  1635  0012                     _PIR2bits	set	18
  1636  0014                     _PIR4bits	set	20
  1637  0018                     _T1CONbits	set	24
  1638  0095                     _OPTION_REGbits	set	149
  1639  0099                     _OSCCONbits	set	153
  1640  009A                     _OSCSTATbits	set	154
  1641  0091                     _PIE1bits	set	145
  1642  008D                     _TRISBbits	set	141
  1643  008E                     _TRISCbits	set	142
  1644  011D                     _APFCON0bits	set	285
  1645  010D                     _LATBbits	set	269
  1646  010E                     _LATCbits	set	270
  1647  018D                     _ANSELB	set	397
  1648  018D                     _ANSELBbits	set	397
  1649  018E                     _ANSELCbits	set	398
  1650  019F                     _BAUDCONbits	set	415
  1651  019D                     _RCSTAbits	set	413
  1652  019C                     _SPBRGH	set	412
  1653  019B                     _SPBRGL	set	411
  1654  019A                     _TXREG	set	410
  1655  019E                     _TXSTAbits	set	414
  1656  0211                     _SSP1BUF	set	529
  1657  0215                     _SSP1CON1bits	set	533
  1658  0214                     _SSP1STATbits	set	532
  1659  021A                     _SSP2ADD	set	538
  1660  0219                     _SSP2BUF	set	537
  1661  021D                     _SSP2CON1	set	541
  1662  021E                     _SSP2CON2bits	set	542
  1663  021F                     _SSP2CON3	set	543
  1664  021C                     _SSP2STAT	set	540
  1665  021C                     _SSP2STATbits	set	540
  1666  020D                     _WPUB	set	525
  1667  08A8                     STR_1:	
  1668  08A8  3453               	retlw	83	;'S'
  1669  08A9  3454               	retlw	84	;'T'
  1670  08AA  3441               	retlw	65	;'A'
  1671  08AB  3454               	retlw	84	;'T'
  1672  08AC  3455               	retlw	85	;'U'
  1673  08AD  3453               	retlw	83	;'S'
  1674  08AE  343D               	retlw	61	;'='
  1675  08AF  3420               	retlw	32	;' '
  1676  08B0  3430               	retlw	48	;'0'
  1677  08B1  3478               	retlw	120	;'x'
  1678  08B2  3425               	retlw	37	;'%'
  1679  08B3  3430               	retlw	48	;'0'
  1680  08B4  3432               	retlw	50	;'2'
  1681  08B5  3478               	retlw	120	;'x'
  1682  08B6  3420               	retlw	32	;' '
  1683  08B7  340D               	retlw	13
  1684  08B8  340A               	retlw	10
  1685  08B9  3452               	retlw	82	;'R'
  1686  08BA  3458               	retlw	88	;'X'
  1687  08BB  345F               	retlw	95	;'_'
  1688  08BC  3444               	retlw	68	;'D'
  1689  08BD  3452               	retlw	82	;'R'
  1690  08BE  343D               	retlw	61	;'='
  1691  08BF  3425               	retlw	37	;'%'
  1692  08C0  3478               	retlw	120	;'x'
  1693  08C1  3420               	retlw	32	;' '
  1694  08C2  340D               	retlw	13
  1695  08C3  340A               	retlw	10
  1696  08C4  3454               	retlw	84	;'T'
  1697  08C5  3458               	retlw	88	;'X'
  1698  08C6  345F               	retlw	95	;'_'
  1699  08C7  3444               	retlw	68	;'D'
  1700  08C8  3453               	retlw	83	;'S'
  1701  08C9  343D               	retlw	61	;'='
  1702  08CA  3425               	retlw	37	;'%'
  1703  08CB  3478               	retlw	120	;'x'
  1704  08CC  3420               	retlw	32	;' '
  1705  08CD  340D               	retlw	13
  1706  08CE  340A               	retlw	10
  1707  08CF  344D               	retlw	77	;'M'
  1708  08D0  3441               	retlw	65	;'A'
  1709  08D1  3458               	retlw	88	;'X'
  1710  08D2  345F               	retlw	95	;'_'
  1711  08D3  3452               	retlw	82	;'R'
  1712  08D4  3454               	retlw	84	;'T'
  1713  08D5  343D               	retlw	61	;'='
  1714  08D6  3425               	retlw	37	;'%'
  1715  08D7  3478               	retlw	120	;'x'
  1716  08D8  3420               	retlw	32	;' '
  1717  08D9  340D               	retlw	13
  1718  08DA  340A               	retlw	10
  1719  08DB  3452               	retlw	82	;'R'
  1720  08DC  3458               	retlw	88	;'X'
  1721  08DD  345F               	retlw	95	;'_'
  1722  08DE  3450               	retlw	80	;'P'
  1723  08DF  345F               	retlw	95	;'_'
  1724  08E0  344E               	retlw	78	;'N'
  1725  08E1  344F               	retlw	79	;'O'
  1726  08E2  343D               	retlw	61	;'='
  1727  08E3  3425               	retlw	37	;'%'
  1728  08E4  3478               	retlw	120	;'x'
  1729  08E5  3420               	retlw	32	;' '
  1730  08E6  340D               	retlw	13
  1731  08E7  340A               	retlw	10
  1732  08E8  3454               	retlw	84	;'T'
  1733  08E9  3458               	retlw	88	;'X'
  1734  08EA  345F               	retlw	95	;'_'
  1735  08EB  3446               	retlw	70	;'F'
  1736  08EC  3455               	retlw	85	;'U'
  1737  08ED  344C               	retlw	76	;'L'
  1738  08EE  344C               	retlw	76	;'L'
  1739  08EF  343D               	retlw	61	;'='
  1740  08F0  3425               	retlw	37	;'%'
  1741  08F1  3478               	retlw	120	;'x'
  1742  08F2  340D               	retlw	13
  1743  08F3  340A               	retlw	10
  1744  08F4  340D               	retlw	13
  1745  08F5  340A               	retlw	10
  1746  08F6  3400               	retlw	0
  1747  08F7                     STR_2:	
  1748  08F7  344F               	retlw	79	;'O'
  1749  08F8  3442               	retlw	66	;'B'
  1750  08F9  3453               	retlw	83	;'S'
  1751  08FA  3445               	retlw	69	;'E'
  1752  08FB  3452               	retlw	82	;'R'
  1753  08FC  3456               	retlw	86	;'V'
  1754  08FD  3445               	retlw	69	;'E'
  1755  08FE  345F               	retlw	95	;'_'
  1756  08FF  3454               	retlw	84	;'T'
  1757  0900  3458               	retlw	88	;'X'
  1758  0901  343D               	retlw	61	;'='
  1759  0902  3425               	retlw	37	;'%'
  1760  0903  3430               	retlw	48	;'0'
  1761  0904  3432               	retlw	50	;'2'
  1762  0905  3478               	retlw	120	;'x'
  1763  0906  343A               	retlw	58	;':'
  1764  0907  3420               	retlw	32	;' '
  1765  0908  3450               	retlw	80	;'P'
  1766  0909  344F               	retlw	79	;'O'
  1767  090A  344C               	retlw	76	;'L'
  1768  090B  3453               	retlw	83	;'S'
  1769  090C  345F               	retlw	95	;'_'
  1770  090D  3443               	retlw	67	;'C'
  1771  090E  344E               	retlw	78	;'N'
  1772  090F  3454               	retlw	84	;'T'
  1773  0910  343D               	retlw	61	;'='
  1774  0911  3425               	retlw	37	;'%'
  1775  0912  3478               	retlw	120	;'x'
  1776  0913  3420               	retlw	32	;' '
  1777  0914  3441               	retlw	65	;'A'
  1778  0915  3452               	retlw	82	;'R'
  1779  0916  3443               	retlw	67	;'C'
  1780  0917  345F               	retlw	95	;'_'
  1781  0918  3443               	retlw	67	;'C'
  1782  0919  344E               	retlw	78	;'N'
  1783  091A  3454               	retlw	84	;'T'
  1784  091B  343D               	retlw	61	;'='
  1785  091C  3425               	retlw	37	;'%'
  1786  091D  3478               	retlw	120	;'x'
  1787  091E  340D               	retlw	13
  1788  091F  340A               	retlw	10
  1789  0920  3400               	retlw	0
  1790  0921                     STR_36:	
  1791  0921  3446               	retlw	70	;'F'
  1792  0922  3469               	retlw	105	;'i'
  1793  0923  3472               	retlw	114	;'r'
  1794  0924  346D               	retlw	109	;'m'
  1795  0925  3477               	retlw	119	;'w'
  1796  0926  3461               	retlw	97	;'a'
  1797  0927  3472               	retlw	114	;'r'
  1798  0928  3465               	retlw	101	;'e'
  1799  0929  3420               	retlw	32	;' '
  1800  092A  3476               	retlw	118	;'v'
  1801  092B  3465               	retlw	101	;'e'
  1802  092C  3472               	retlw	114	;'r'
  1803  092D  3473               	retlw	115	;'s'
  1804  092E  3469               	retlw	105	;'i'
  1805  092F  346F               	retlw	111	;'o'
  1806  0930  346E               	retlw	110	;'n'
  1807  0931  343A               	retlw	58	;':'
  1808  0932  3420               	retlw	32	;' '
  1809  0933  3431               	retlw	49	;'1'
  1810  0934  342E               	retlw	46	;'.'
  1811  0935  3432               	retlw	50	;'2'
  1812  0936  340D               	retlw	13
  1813  0937  340A               	retlw	10
  1814  0938  3400               	retlw	0
  1815  0939                     STR_39:	
  1816  0939  3425               	retlw	37	;'%'
  1817  093A  3430               	retlw	48	;'0'
  1818  093B  3432               	retlw	50	;'2'
  1819  093C  3458               	retlw	88	;'X'
  1820  093D  343A               	retlw	58	;':'
  1821  093E  3454               	retlw	84	;'T'
  1822  093F  3448               	retlw	72	;'H'
  1823  0940  343A               	retlw	58	;':'
  1824  0941  3425               	retlw	37	;'%'
  1825  0942  3464               	retlw	100	;'d'
  1826  0943  342E               	retlw	46	;'.'
  1827  0944  3425               	retlw	37	;'%'
  1828  0945  3430               	retlw	48	;'0'
  1829  0946  3432               	retlw	50	;'2'
  1830  0947  3464               	retlw	100	;'d'
  1831  0948  343A               	retlw	58	;':'
  1832  0949  3425               	retlw	37	;'%'
  1833  094A  3464               	retlw	100	;'d'
  1834  094B  342E               	retlw	46	;'.'
  1835  094C  3425               	retlw	37	;'%'
  1836  094D  3430               	retlw	48	;'0'
  1837  094E  3432               	retlw	50	;'2'
  1838  094F  3464               	retlw	100	;'d'
  1839  0950  3400               	retlw	0
  1840  0951                     STR_33:	
  1841  0951  3444               	retlw	68	;'D'
  1842  0952  3465               	retlw	101	;'e'
  1843  0953  3476               	retlw	118	;'v'
  1844  0954  3469               	retlw	105	;'i'
  1845  0955  3463               	retlw	99	;'c'
  1846  0956  3465               	retlw	101	;'e'
  1847  0957  3420               	retlw	32	;' '
  1848  0958  3469               	retlw	105	;'i'
  1849  0959  346E               	retlw	110	;'n'
  1850  095A  3469               	retlw	105	;'i'
  1851  095B  3474               	retlw	116	;'t'
  1852  095C  3469               	retlw	105	;'i'
  1853  095D  3461               	retlw	97	;'a'
  1854  095E  346C               	retlw	108	;'l'
  1855  095F  3469               	retlw	105	;'i'
  1856  0960  347A               	retlw	122	;'z'
  1857  0961  3465               	retlw	101	;'e'
  1858  0962  3464               	retlw	100	;'d'
  1859  0963  342E               	retlw	46	;'.'
  1860  0964  340D               	retlw	13
  1861  0965  340A               	retlw	10
  1862  0966  3400               	retlw	0
  1863  0967                     STR_38:	
  1864  0967  3450               	retlw	80	;'P'
  1865  0968  3472               	retlw	114	;'r'
  1866  0969  3469               	retlw	105	;'i'
  1867  096A  346E               	retlw	110	;'n'
  1868  096B  3474               	retlw	116	;'t'
  1869  096C  3466               	retlw	102	;'f'
  1870  096D  3420               	retlw	32	;' '
  1871  096E  3469               	retlw	105	;'i'
  1872  096F  3473               	retlw	115	;'s'
  1873  0970  3420               	retlw	32	;' '
  1874  0971  3477               	retlw	119	;'w'
  1875  0972  346F               	retlw	111	;'o'
  1876  0973  3472               	retlw	114	;'r'
  1877  0974  346B               	retlw	107	;'k'
  1878  0975  3469               	retlw	105	;'i'
  1879  0976  346E               	retlw	110	;'n'
  1880  0977  3467               	retlw	103	;'g'
  1881  0978  340D               	retlw	13
  1882  0979  340A               	retlw	10
  1883  097A  3400               	retlw	0
  1884  097B                     STR_34:	
  1885  097B  342D               	retlw	45	;'-'
  1886  097C  342D               	retlw	45	;'-'
  1887  097D  342D               	retlw	45	;'-'
  1888  097E  342D               	retlw	45	;'-'
  1889  097F  342D               	retlw	45	;'-'
  1890  0980  342D               	retlw	45	;'-'
  1891  0981  342D               	retlw	45	;'-'
  1892  0982  342D               	retlw	45	;'-'
  1893  0983  342D               	retlw	45	;'-'
  1894  0984  342D               	retlw	45	;'-'
  1895  0985  342D               	retlw	45	;'-'
  1896  0986  342D               	retlw	45	;'-'
  1897  0987  342D               	retlw	45	;'-'
  1898  0988  342D               	retlw	45	;'-'
  1899  0989  342D               	retlw	45	;'-'
  1900  098A  342D               	retlw	45	;'-'
  1901  098B  340D               	retlw	13
  1902  098C  340A               	retlw	10
  1903  098D  3400               	retlw	0
  1904  098E                     STR_40:	
  1905  098E  3453               	retlw	83	;'S'
  1906  098F  3465               	retlw	101	;'e'
  1907  0990  346E               	retlw	110	;'n'
  1908  0991  3464               	retlw	100	;'d'
  1909  0992  3469               	retlw	105	;'i'
  1910  0993  346E               	retlw	110	;'n'
  1911  0994  3467               	retlw	103	;'g'
  1912  0995  3420               	retlw	32	;' '
  1913  0996  3464               	retlw	100	;'d'
  1914  0997  3461               	retlw	97	;'a'
  1915  0998  3474               	retlw	116	;'t'
  1916  0999  3461               	retlw	97	;'a'
  1917  099A  343A               	retlw	58	;':'
  1918  099B  3420               	retlw	32	;' '
  1919  099C  3425               	retlw	37	;'%'
  1920  099D  3473               	retlw	115	;'s'
  1921  099E  340D               	retlw	13
  1922  099F  340A               	retlw	10
  1923  09A0  3400               	retlw	0
  1924  09A1                     STR_41:	
  1925  09A1  3453               	retlw	83	;'S'
  1926  09A2  3465               	retlw	101	;'e'
  1927  09A3  346E               	retlw	110	;'n'
  1928  09A4  3464               	retlw	100	;'d'
  1929  09A5  3420               	retlw	32	;' '
  1930  09A6  3473               	retlw	115	;'s'
  1931  09A7  3475               	retlw	117	;'u'
  1932  09A8  3463               	retlw	99	;'c'
  1933  09A9  3463               	retlw	99	;'c'
  1934  09AA  3465               	retlw	101	;'e'
  1935  09AB  3473               	retlw	115	;'s'
  1936  09AC  3473               	retlw	115	;'s'
  1937  09AD  3466               	retlw	102	;'f'
  1938  09AE  3475               	retlw	117	;'u'
  1939  09AF  346C               	retlw	108	;'l'
  1940  09B0  340A               	retlw	10
  1941  09B1  340D               	retlw	13
  1942  09B2  3400               	retlw	0
  1943  09B3                     STR_52:	
  1944  09B3  3430               	retlw	48	;'0'
  1945  09B4  3431               	retlw	49	;'1'
  1946  09B5  3432               	retlw	50	;'2'
  1947  09B6  3433               	retlw	51	;'3'
  1948  09B7  3434               	retlw	52	;'4'
  1949  09B8  3435               	retlw	53	;'5'
  1950  09B9  3436               	retlw	54	;'6'
  1951  09BA  3437               	retlw	55	;'7'
  1952  09BB  3438               	retlw	56	;'8'
  1953  09BC  3439               	retlw	57	;'9'
  1954  09BD  3461               	retlw	97	;'a'
  1955  09BE  3462               	retlw	98	;'b'
  1956  09BF  3463               	retlw	99	;'c'
  1957  09C0  3464               	retlw	100	;'d'
  1958  09C1  3465               	retlw	101	;'e'
  1959  09C2  3466               	retlw	102	;'f'
  1960  09C3  3400               	retlw	0
  1961  09C4                     STR_44:	
  1962  09C4  3430               	retlw	48	;'0'
  1963  09C5  3431               	retlw	49	;'1'
  1964  09C6  3432               	retlw	50	;'2'
  1965  09C7  3433               	retlw	51	;'3'
  1966  09C8  3434               	retlw	52	;'4'
  1967  09C9  3435               	retlw	53	;'5'
  1968  09CA  3436               	retlw	54	;'6'
  1969  09CB  3437               	retlw	55	;'7'
  1970  09CC  3438               	retlw	56	;'8'
  1971  09CD  3439               	retlw	57	;'9'
  1972  09CE  3441               	retlw	65	;'A'
  1973  09CF  3442               	retlw	66	;'B'
  1974  09D0  3443               	retlw	67	;'C'
  1975  09D1  3444               	retlw	68	;'D'
  1976  09D2  3445               	retlw	69	;'E'
  1977  09D3  3446               	retlw	70	;'F'
  1978  09D4  3400               	retlw	0
  1979  09D5                     STR_24:	
  1980  09D5  340D               	retlw	13
  1981  09D6  340A               	retlw	10
  1982  09D7  3443               	retlw	67	;'C'
  1983  09D8  3452               	retlw	82	;'R'
  1984  09D9  3443               	retlw	67	;'C'
  1985  09DA  3420               	retlw	32	;' '
  1986  09DB  344C               	retlw	76	;'L'
  1987  09DC  3465               	retlw	101	;'e'
  1988  09DD  346E               	retlw	110	;'n'
  1989  09DE  3467               	retlw	103	;'g'
  1990  09DF  3474               	retlw	116	;'t'
  1991  09E0  3468               	retlw	104	;'h'
  1992  09E1  3409               	retlw	9
  1993  09E2  3420               	retlw	32	;' '
  1994  09E3  343D               	retlw	61	;'='
  1995  09E4  3420               	retlw	32	;' '
  1996  09E5  3400               	retlw	0
  1997  09E6                     STR_28:	
  1998  09E6  340D               	retlw	13
  1999  09E7  340A               	retlw	10
  2000  09E8  3450               	retlw	80	;'P'
  2001  09E9  3441               	retlw	65	;'A'
  2002  09EA  3420               	retlw	32	;' '
  2003  09EB  3450               	retlw	80	;'P'
  2004  09EC  346F               	retlw	111	;'o'
  2005  09ED  3477               	retlw	119	;'w'
  2006  09EE  3465               	retlw	101	;'e'
  2007  09EF  3472               	retlw	114	;'r'
  2008  09F0  3409               	retlw	9
  2009  09F1  3409               	retlw	9
  2010  09F2  3420               	retlw	32	;' '
  2011  09F3  343D               	retlw	61	;'='
  2012  09F4  3420               	retlw	32	;' '
  2013  09F5  3400               	retlw	0
  2014  09F6                     STR_35:	
  2015  09F6  3453               	retlw	83	;'S'
  2016  09F7  3465               	retlw	101	;'e'
  2017  09F8  346E               	retlw	110	;'n'
  2018  09F9  3473               	retlw	115	;'s'
  2019  09FA  346F               	retlw	111	;'o'
  2020  09FB  3472               	retlw	114	;'r'
  2021  09FC  3420               	retlw	32	;' '
  2022  09FD  3442               	retlw	66	;'B'
  2023  09FE  346F               	retlw	111	;'o'
  2024  09FF  3461               	retlw	97	;'a'
  2025  0A00  3472               	retlw	114	;'r'
  2026  0A01  3464               	retlw	100	;'d'
  2027  0A02  340D               	retlw	13
  2028  0A03  340A               	retlw	10
  2029  0A04  3400               	retlw	0
  2030  0A05                     STR_42:	
  2031  0A05  3453               	retlw	83	;'S'
  2032  0A06  3465               	retlw	101	;'e'
  2033  0A07  346E               	retlw	110	;'n'
  2034  0A08  3464               	retlw	100	;'d'
  2035  0A09  3420               	retlw	32	;' '
  2036  0A0A  3466               	retlw	102	;'f'
  2037  0A0B  3461               	retlw	97	;'a'
  2038  0A0C  3469               	retlw	105	;'i'
  2039  0A0D  346C               	retlw	108	;'l'
  2040  0A0E  3465               	retlw	101	;'e'
  2041  0A0F  3464               	retlw	100	;'d'
  2042  0A10  340A               	retlw	10
  2043  0A11  340D               	retlw	13
  2044  0A12  3400               	retlw	0
  2045  0A13                     STR_20:	
  2046  0A13  3444               	retlw	68	;'D'
  2047  0A14  3461               	retlw	97	;'a'
  2048  0A15  3474               	retlw	116	;'t'
  2049  0A16  3461               	retlw	97	;'a'
  2050  0A17  3420               	retlw	32	;' '
  2051  0A18  3452               	retlw	82	;'R'
  2052  0A19  3461               	retlw	97	;'a'
  2053  0A1A  3474               	retlw	116	;'t'
  2054  0A1B  3465               	retlw	101	;'e'
  2055  0A1C  3409               	retlw	9
  2056  0A1D  3420               	retlw	32	;' '
  2057  0A1E  343D               	retlw	61	;'='
  2058  0A1F  3420               	retlw	32	;' '
  2059  0A20  3400               	retlw	0
  2060  0A21                     STR_19:	
  2061  0A21  3444               	retlw	68	;'D'
  2062  0A22  3459               	retlw	89	;'Y'
  2063  0A23  344E               	retlw	78	;'N'
  2064  0A24  3450               	retlw	80	;'P'
  2065  0A25  3444               	retlw	68	;'D'
  2066  0A26  342F               	retlw	47	;'/'
  2067  0A27  3446               	retlw	70	;'F'
  2068  0A28  3445               	retlw	69	;'E'
  2069  0A29  3441               	retlw	65	;'A'
  2070  0A2A  3454               	retlw	84	;'T'
  2071  0A2B  3455               	retlw	85	;'U'
  2072  0A2C  3452               	retlw	82	;'R'
  2073  0A2D  3445               	retlw	69	;'E'
  2074  0A2E  3400               	retlw	0
  2075  0A2F                     STR_10:	
  2076  0A2F  3452               	retlw	82	;'R'
  2077  0A30  3458               	retlw	88	;'X'
  2078  0A31  345F               	retlw	95	;'_'
  2079  0A32  3441               	retlw	65	;'A'
  2080  0A33  3444               	retlw	68	;'D'
  2081  0A34  3444               	retlw	68	;'D'
  2082  0A35  3452               	retlw	82	;'R'
  2083  0A36  345F               	retlw	95	;'_'
  2084  0A37  3450               	retlw	80	;'P'
  2085  0A38  3430               	retlw	48	;'0'
  2086  0A39  342D               	retlw	45	;'-'
  2087  0A3A  3431               	retlw	49	;'1'
  2088  0A3B  3400               	retlw	0
  2089  0A3C                     STR_11:	
  2090  0A3C  3452               	retlw	82	;'R'
  2091  0A3D  3458               	retlw	88	;'X'
  2092  0A3E  345F               	retlw	95	;'_'
  2093  0A3F  3441               	retlw	65	;'A'
  2094  0A40  3444               	retlw	68	;'D'
  2095  0A41  3444               	retlw	68	;'D'
  2096  0A42  3452               	retlw	82	;'R'
  2097  0A43  345F               	retlw	95	;'_'
  2098  0A44  3450               	retlw	80	;'P'
  2099  0A45  3432               	retlw	50	;'2'
  2100  0A46  342D               	retlw	45	;'-'
  2101  0A47  3435               	retlw	53	;'5'
  2102  0A48  3400               	retlw	0
  2103  0A49                     STR_43:	
  2104  0A49  3455               	retlw	85	;'U'
  2105  0A4A  3441               	retlw	65	;'A'
  2106  0A4B  3452               	retlw	82	;'R'
  2107  0A4C  3454               	retlw	84	;'T'
  2108  0A4D  3420               	retlw	32	;' '
  2109  0A4E  3449               	retlw	73	;'I'
  2110  0A4F  3453               	retlw	83	;'S'
  2111  0A50  3420               	retlw	32	;' '
  2112  0A51  344F               	retlw	79	;'O'
  2113  0A52  344E               	retlw	78	;'N'
  2114  0A53  340A               	retlw	10
  2115  0A54  3400               	retlw	0
  2116  0A55                     STR_13:	
  2117  0A55  3452               	retlw	82	;'R'
  2118  0A56  3458               	retlw	88	;'X'
  2119  0A57  345F               	retlw	95	;'_'
  2120  0A58  3450               	retlw	80	;'P'
  2121  0A59  3457               	retlw	87	;'W'
  2122  0A5A  345F               	retlw	95	;'_'
  2123  0A5B  3450               	retlw	80	;'P'
  2124  0A5C  3430               	retlw	48	;'0'
  2125  0A5D  342D               	retlw	45	;'-'
  2126  0A5E  3436               	retlw	54	;'6'
  2127  0A5F  3400               	retlw	0
  2128  0A60                     STR_32:	
  2129  0A60  3450               	retlw	80	;'P'
  2130  0A61  3441               	retlw	65	;'A'
  2131  0A62  345F               	retlw	95	;'_'
  2132  0A63  3448               	retlw	72	;'H'
  2133  0A64  3449               	retlw	73	;'I'
  2134  0A65  3447               	retlw	71	;'G'
  2135  0A66  3448               	retlw	72	;'H'
  2136  0A67  340D               	retlw	13
  2137  0A68  340A               	retlw	10
  2138  0A69  3400               	retlw	0
  2139  0A6A                     STR_15:	
  2140  0A6A  3445               	retlw	69	;'E'
  2141  0A6B  344E               	retlw	78	;'N'
  2142  0A6C  345F               	retlw	95	;'_'
  2143  0A6D  3452               	retlw	82	;'R'
  2144  0A6E  3458               	retlw	88	;'X'
  2145  0A6F  3441               	retlw	65	;'A'
  2146  0A70  3444               	retlw	68	;'D'
  2147  0A71  3444               	retlw	68	;'D'
  2148  0A72  3452               	retlw	82	;'R'
  2149  0A73  3400               	retlw	0
  2150  0A74                     STR_31:	
  2151  0A74  3450               	retlw	80	;'P'
  2152  0A75  3441               	retlw	65	;'A'
  2153  0A76  345F               	retlw	95	;'_'
  2154  0A77  344D               	retlw	77	;'M'
  2155  0A78  3445               	retlw	69	;'E'
  2156  0A79  3444               	retlw	68	;'D'
  2157  0A7A  340D               	retlw	13
  2158  0A7B  340A               	retlw	10
  2159  0A7C  3400               	retlw	0
  2160  0A7D                     STR_29:	
  2161  0A7D  3450               	retlw	80	;'P'
  2162  0A7E  3441               	retlw	65	;'A'
  2163  0A7F  345F               	retlw	95	;'_'
  2164  0A80  344D               	retlw	77	;'M'
  2165  0A81  3449               	retlw	73	;'I'
  2166  0A82  344E               	retlw	78	;'N'
  2167  0A83  340D               	retlw	13
  2168  0A84  340A               	retlw	10
  2169  0A85  3400               	retlw	0
  2170  0A86                     STR_30:	
  2171  0A86  3450               	retlw	80	;'P'
  2172  0A87  3441               	retlw	65	;'A'
  2173  0A88  345F               	retlw	95	;'_'
  2174  0A89  344C               	retlw	76	;'L'
  2175  0A8A  344F               	retlw	79	;'O'
  2176  0A8B  3457               	retlw	87	;'W'
  2177  0A8C  340D               	retlw	13
  2178  0A8D  340A               	retlw	10
  2179  0A8E  3400               	retlw	0
  2180  0A8F                     STR_17:	
  2181  0A8F  3452               	retlw	82	;'R'
  2182  0A90  3446               	retlw	70	;'F'
  2183  0A91  345F               	retlw	95	;'_'
  2184  0A92  3453               	retlw	83	;'S'
  2185  0A93  3445               	retlw	69	;'E'
  2186  0A94  3454               	retlw	84	;'T'
  2187  0A95  3455               	retlw	85	;'U'
  2188  0A96  3450               	retlw	80	;'P'
  2189  0A97  3400               	retlw	0
  2190  0A98                     STR_25:	
  2191  0A98  3444               	retlw	68	;'D'
  2192  0A99  3469               	retlw	105	;'i'
  2193  0A9A  3473               	retlw	115	;'s'
  2194  0A9B  3461               	retlw	97	;'a'
  2195  0A9C  3462               	retlw	98	;'b'
  2196  0A9D  346C               	retlw	108	;'l'
  2197  0A9E  3465               	retlw	101	;'e'
  2198  0A9F  3464               	retlw	100	;'d'
  2199  0AA0  3400               	retlw	0
  2200  0AA1                     STR_3:	
  2201  0AA1  3425               	retlw	37	;'%'
  2202  0AA2  3473               	retlw	115	;'s'
  2203  0AA3  3409               	retlw	9
  2204  0AA4  3425               	retlw	37	;'%'
  2205  0AA5  3463               	retlw	99	;'c'
  2206  0AA6  3420               	retlw	32	;' '
  2207  0AA7  343D               	retlw	61	;'='
  2208  0AA8  3400               	retlw	0
  2209  0AA9                     STR_12:	
  2210  0AA9  3454               	retlw	84	;'T'
  2211  0AAA  3458               	retlw	88	;'X'
  2212  0AAB  345F               	retlw	95	;'_'
  2213  0AAC  3441               	retlw	65	;'A'
  2214  0AAD  3444               	retlw	68	;'D'
  2215  0AAE  3444               	retlw	68	;'D'
  2216  0AAF  3452               	retlw	82	;'R'
  2217  0AB0  3400               	retlw	0
  2218  0AB1                     STR_23:	
  2219  0AB1  3432               	retlw	50	;'2'
  2220  0AB2  3435               	retlw	53	;'5'
  2221  0AB3  3430               	retlw	48	;'0'
  2222  0AB4  344B               	retlw	75	;'K'
  2223  0AB5  3442               	retlw	66	;'B'
  2224  0AB6  3450               	retlw	80	;'P'
  2225  0AB7  3453               	retlw	83	;'S'
  2226  0AB8  3400               	retlw	0
  2227  0AB9                     STR_27:	
  2228  0AB9  3431               	retlw	49	;'1'
  2229  0ABA  3436               	retlw	54	;'6'
  2230  0ABB  3420               	retlw	32	;' '
  2231  0ABC  3462               	retlw	98	;'b'
  2232  0ABD  3469               	retlw	105	;'i'
  2233  0ABE  3474               	retlw	116	;'t'
  2234  0ABF  3473               	retlw	115	;'s'
  2235  0AC0  3400               	retlw	0
  2236  0AC1                     STR_4:	
  2237  0AC1  3420               	retlw	32	;' '
  2238  0AC2  3430               	retlw	48	;'0'
  2239  0AC3  3478               	retlw	120	;'x'
  2240  0AC4  3425               	retlw	37	;'%'
  2241  0AC5  3430               	retlw	48	;'0'
  2242  0AC6  3432               	retlw	50	;'2'
  2243  0AC7  3478               	retlw	120	;'x'
  2244  0AC8  3400               	retlw	0
  2245  0AC9                     STR_50:	
  2246  0AC9  3428               	retlw	40	;'('
  2247  0ACA  346E               	retlw	110	;'n'
  2248  0ACB  3475               	retlw	117	;'u'
  2249  0ACC  346C               	retlw	108	;'l'
  2250  0ACD  346C               	retlw	108	;'l'
  2251  0ACE  3429               	retlw	41	;')'
  2252  0ACF  3400               	retlw	0
  2253  0AD0                     STR_18:	
  2254  0AD0  3443               	retlw	67	;'C'
  2255  0AD1  344F               	retlw	79	;'O'
  2256  0AD2  344E               	retlw	78	;'N'
  2257  0AD3  3446               	retlw	70	;'F'
  2258  0AD4  3449               	retlw	73	;'I'
  2259  0AD5  3447               	retlw	71	;'G'
  2260  0AD6  3400               	retlw	0
  2261  0AD7                     STR_26:	
  2262  0AD7  3438               	retlw	56	;'8'
  2263  0AD8  3420               	retlw	32	;' '
  2264  0AD9  3462               	retlw	98	;'b'
  2265  0ADA  3469               	retlw	105	;'i'
  2266  0ADB  3474               	retlw	116	;'t'
  2267  0ADC  3473               	retlw	115	;'s'
  2268  0ADD  3400               	retlw	0
  2269  0ADE                     STR_14:	
  2270  0ADE  3445               	retlw	69	;'E'
  2271  0ADF  344E               	retlw	78	;'N'
  2272  0AE0  345F               	retlw	95	;'_'
  2273  0AE1  3441               	retlw	65	;'A'
  2274  0AE2  3441               	retlw	65	;'A'
  2275  0AE3  3400               	retlw	0
  2276  0AE4                     STR_16:	
  2277  0AE4  3452               	retlw	82	;'R'
  2278  0AE5  3446               	retlw	70	;'F'
  2279  0AE6  345F               	retlw	95	;'_'
  2280  0AE7  3443               	retlw	67	;'C'
  2281  0AE8  3448               	retlw	72	;'H'
  2282  0AE9  3400               	retlw	0
  2283  0AEA                     STR_21:	
  2284  0AEA  3431               	retlw	49	;'1'
  2285  0AEB  344D               	retlw	77	;'M'
  2286  0AEC  3442               	retlw	66	;'B'
  2287  0AED  3450               	retlw	80	;'P'
  2288  0AEE  3453               	retlw	83	;'S'
  2289  0AEF  3400               	retlw	0
  2290  0AF0                     STR_22:	
  2291  0AF0  3432               	retlw	50	;'2'
  2292  0AF1  344D               	retlw	77	;'M'
  2293  0AF2  3442               	retlw	66	;'B'
  2294  0AF3  3450               	retlw	80	;'P'
  2295  0AF4  3453               	retlw	83	;'S'
  2296  0AF5  3400               	retlw	0
  2297  0AF6                     STR_7:	
  2298  0AF6  3420               	retlw	32	;' '
  2299  0AF7  3430               	retlw	48	;'0'
  2300  0AF8  3478               	retlw	120	;'x'
  2301  0AF9  3400               	retlw	0
  2302  08F4                     
  2303                           ; #config settings
  2304  0000                     
  2305                           	psect	cinit
  2306  07E2                     start_initialization:	
  2307  07E2                     __initialization:	
  2308                           
  2309                           ; Initialize objects allocated to BANK1
  2310  07E2  30DE               	movlw	low __pidataBANK1
  2311  07E3  0084               	movwf	4
  2312  07E4  309F               	movlw	(high __pidataBANK1)| (0+128)
  2313  07E5  0085               	movwf	5
  2314  07E6  30C8               	movlw	low __pdataBANK1
  2315  07E7  0086               	movwf	6
  2316  07E8  3000               	movlw	high __pdataBANK1
  2317  07E9  0087               	movwf	7
  2318  07EA  300A               	movlw	10
  2319  07EB  319F  27C0  3187   	fcall	init_ram
  2320                           
  2321                           ; Clear objects allocated to BANK1
  2322  07EE  30A0               	movlw	low __pbssBANK1
  2323  07EF  0084               	movwf	4
  2324  07F0  3000               	movlw	high __pbssBANK1
  2325  07F1  0085               	movwf	5
  2326  07F2  3014               	movlw	20
  2327  07F3  319F  27BA  3187   	fcall	clear_ram0
  2328                           
  2329                           ; Clear objects allocated to BANK2
  2330  07F6  3020               	movlw	low __pbssBANK2
  2331  07F7  0084               	movwf	4
  2332  07F8  3001               	movlw	high __pbssBANK2
  2333  07F9  0085               	movwf	5
  2334  07FA  3040               	movlw	64
  2335  07FB  319F  27BA         	fcall	clear_ram0
  2336  07FD                     end_of_initialization:	
  2337                           ;End of C runtime variable initialization code
  2338                           
  2339  07FD                     __end_of__initialization:	
  2340  07FD  0020               	movlb	0
  2341  07FE  318E  2E2B         	ljmp	_main	;jump to C main() function
  2342                           
  2343                           	psect	bssBANK1
  2344  00A0                     __pbssBANK1:	
  2345  00A0                     si7021_ReadHumidity@F3471:	
  2346  00A0                     	ds	2
  2347  00A2                     si7021_ReadTemperature@F3477:	
  2348  00A2                     	ds	2
  2349  00A4                     _I2C1_STATE:	
  2350  00A4                     	ds	1
  2351  00A5                     _ack_payload_length:	
  2352  00A5                     	ds	1
  2353  00A6                     _dynamic_payloads_enabled:	
  2354  00A6                     	ds	1
  2355  00A7                     _p_variant:	
  2356  00A7                     	ds	1
  2357  00A8                     _payload_size:	
  2358  00A8                     	ds	1
  2359  00A9                     _si7021_humidDec:	
  2360  00A9                     	ds	1
  2361  00AA                     _si7021_humidNum:	
  2362  00AA                     	ds	1
  2363  00AB                     _si7021_tempDec:	
  2364  00AB                     	ds	1
  2365  00AC                     _si7021_tempNum:	
  2366  00AC                     	ds	1
  2367  00AD                     _wide_band:	
  2368  00AD                     	ds	1
  2369  00AE                     _pipe0_reading_address:	
  2370  00AE                     	ds	5
  2371  00B3                     _ack_payload_available:	
  2372  00B3                     	ds	1
  2373                           
  2374                           	psect	dataBANK1
  2375  00C8                     __pdataBANK1:	
  2376  00C8                     main@F3477:	
  2377  00C8                     	ds	5
  2378  00CD                     main@F3479:	
  2379  00CD                     	ds	5
  2380                           
  2381                           	psect	bssBANK2
  2382  0120                     __pbssBANK2:	
  2383  0120                     _receivePayload:	
  2384  0120                     	ds	32
  2385  0140                     _sendPayload:	
  2386  0140                     	ds	32
  2387                           
  2388                           	psect	inittext
  2389  1FC0                     init_ram:	
  2390  1FC0  00FE               	movwf	126
  2391  1FC1                     initloop:	
  2392  1FC1  0012               	moviw fsr0++
  2393  1FC2  001E               	movwi fsr1++
  2394  1FC3  0BFE               	decfsz	126,f
  2395  1FC4  2FC1               	goto	initloop
  2396  1FC5  3400               	retlw	0
  2397                           
  2398                           	psect	clrtext
  2399  1FBA                     clear_ram0:	
  2400                           ;	Called with FSR0 containing the base address, and
  2401                           ;	WREG with the size to clear
  2402                           
  2403  1FBA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2404  1FBB                     clrloop0:	
  2405  1FBB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2406  1FBC  3101               	addfsr 0,1
  2407  1FBD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2408  1FBE  2FBB               	goto	clrloop0	;have we reached the end yet?
  2409  1FBF  3400               	retlw	0	;all done for this memory range, return
  2410                           
  2411                           	psect	cstackBANK1
  2412  00B4                     __pcstackBANK1:	
  2413  00B4                     ??_main:	
  2414                           
  2415                           ; 1 bytes @ 0x0
  2416  00B4                     	ds	8
  2417  00BC                     main@nRF_pipe_writing:	
  2418                           
  2419                           ; 5 bytes @ 0x8
  2420  00BC                     	ds	5
  2421  00C1                     main@nRF_pipe_reading:	
  2422                           
  2423                           ; 5 bytes @ 0xD
  2424  00C1                     	ds	5
  2425  00C6                     main@len:	
  2426                           
  2427                           ; 1 bytes @ 0x12
  2428  00C6                     	ds	1
  2429  00C7                     main@i:	
  2430                           
  2431                           ; 1 bytes @ 0x13
  2432  00C7                     	ds	1
  2433                           
  2434                           	psect	cstackCOMMON
  2435  0070                     __pcstackCOMMON:	
  2436  0070                     ?_isdigit:	
  2437  0070                     ?_spi_fast_shift:	
  2438                           ; 1 bit 
  2439                           
  2440  0070                     ??_spi_fast_shift:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_nrf_setPALevel:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ?_nrf_setDataRate:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ?_nrf_setCRCLength:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_nrf_getDynamicPayloadSize:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_Device_SetUp:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ??_Device_SetUp:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_Device_Initialize:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_Timer1_Setup:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ??_Timer1_Setup:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_spi_init:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     ??_spi_init:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     ?_StatusLED:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ??_StatusLED:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0070                     ?_i2c_init:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0070                     ??_i2c_init:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0070                     ?_sb_readTemperature:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0070                     ?_sb_readHumidity:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0070                     ??_isdigit:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0070                     ?_nrf_csn:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0070                     ?_nrf_ce:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0070                     ?_nrf_read_register:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0070                     ?_nrf_flush_rx:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0070                     ?_nrf_flush_tx:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0070                     ?_nrf_get_status:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     ?_nrf_setChannel:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0070                     ?_nrf_begin:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0070                     ?_nrf_startListening:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0070                     ?_nrf_stopListening:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0070                     ?_nrf_powerDown:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0070                     ?_nrf_powerUp:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0070                     ?_nrf_available:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0070                     ?_nrf_openWritingPipe:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0070                     ?_nrf_toggle_features:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0070                     ?_nrf_enableDynamicPayloads:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0070                     ?_nrf_setAutoAck_all:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0070                     ?_main:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  0070                     ?_putch:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  0070                     ?_I2C1_ReadFrame:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557  0070                     ?_I2C1_WriteByte:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560  0070                     ?___bmul:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563  0070                     ?___wmul:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566  0070                     ?___lwdiv:	
  2567                           ; 2 bytes @ 0x0
  2568                           
  2569  0070                     ?___ftpack:	
  2570                           ; 2 bytes @ 0x0
  2571                           
  2572  0070                     ?___aldiv:	
  2573                           ; 3 bytes @ 0x0
  2574                           
  2575  0070                     putch@data:	
  2576                           ; 4 bytes @ 0x0
  2577                           
  2578  0070                     StatusLED@status:	
  2579                           ; 1 bytes @ 0x0
  2580                           
  2581  0070                     I2C1_ReadFrame@i2c1ReadPointer:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584  0070                     I2C1_WriteByte@i2c1Data:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587  0070                     spi_fast_shift@data:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590  0070                     ___bmul@multiplicand:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593  0070                     _isdigit$1659:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596  0070                     nrf_csn@mode:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599  0070                     nrf_ce@level:	
  2600                           ; 2 bytes @ 0x0
  2601                           
  2602  0070                     ___wmul@multiplier:	
  2603                           ; 2 bytes @ 0x0
  2604                           
  2605  0070                     ___lwdiv@divisor:	
  2606                           ; 2 bytes @ 0x0
  2607                           
  2608  0070                     ___ftpack@arg:	
  2609                           ; 2 bytes @ 0x0
  2610                           
  2611  0070                     ___aldiv@divisor:	
  2612                           ; 3 bytes @ 0x0
  2613                           
  2614                           
  2615                           ; 4 bytes @ 0x0
  2616  0070                     	ds	1
  2617  0071                     ?_UART_Debug:	
  2618  0071                     ??_putch:	
  2619                           ; 1 bytes @ 0x1
  2620                           
  2621  0071                     ??_I2C1_WriteByte:	
  2622                           ; 1 bytes @ 0x1
  2623                           
  2624  0071                     ??___bmul:	
  2625                           ; 1 bytes @ 0x1
  2626                           
  2627  0071                     I2C1_ReadFrame@i2c1FrameLength:	
  2628                           ; 1 bytes @ 0x1
  2629                           
  2630  0071                     I2C1_WriteByte@i2c1SlaveAddress:	
  2631                           ; 1 bytes @ 0x1
  2632                           
  2633  0071                     isdigit@c:	
  2634                           ; 1 bytes @ 0x1
  2635                           
  2636  0071                     UART_Debug@str:	
  2637                           ; 1 bytes @ 0x1
  2638                           
  2639                           
  2640                           ; 2 bytes @ 0x1
  2641  0071                     	ds	1
  2642  0072                     ??_nrf_getDynamicPayloadSize:	
  2643  0072                     ??_nrf_csn:	
  2644                           ; 1 bytes @ 0x2
  2645                           
  2646  0072                     ??_nrf_ce:	
  2647                           ; 1 bytes @ 0x2
  2648                           
  2649  0072                     ?_nrf_read_register_len:	
  2650                           ; 1 bytes @ 0x2
  2651                           
  2652  0072                     ??_nrf_read_register:	
  2653                           ; 1 bytes @ 0x2
  2654                           
  2655  0072                     ?_nrf_write_register_len:	
  2656                           ; 1 bytes @ 0x2
  2657                           
  2658  0072                     ?_nrf_write_payload:	
  2659                           ; 1 bytes @ 0x2
  2660                           
  2661  0072                     ?_nrf_read_payload:	
  2662                           ; 1 bytes @ 0x2
  2663                           
  2664  0072                     ??_nrf_flush_rx:	
  2665                           ; 1 bytes @ 0x2
  2666                           
  2667  0072                     ??_nrf_flush_tx:	
  2668                           ; 1 bytes @ 0x2
  2669                           
  2670  0072                     ??_nrf_get_status:	
  2671                           ; 1 bytes @ 0x2
  2672                           
  2673  0072                     ??_nrf_toggle_features:	
  2674                           ; 1 bytes @ 0x2
  2675                           
  2676  0072                     ??_I2C1_ReadFrame:	
  2677                           ; 1 bytes @ 0x2
  2678                           
  2679  0072                     nrf_read_register_len@buf:	
  2680                           ; 1 bytes @ 0x2
  2681                           
  2682  0072                     nrf_write_register_len@buf:	
  2683                           ; 1 bytes @ 0x2
  2684                           
  2685  0072                     nrf_write_payload@len:	
  2686                           ; 1 bytes @ 0x2
  2687                           
  2688  0072                     nrf_read_payload@len:	
  2689                           ; 1 bytes @ 0x2
  2690                           
  2691  0072                     ___bmul@product:	
  2692                           ; 1 bytes @ 0x2
  2693                           
  2694  0072                     ___wmul@multiplicand:	
  2695                           ; 1 bytes @ 0x2
  2696                           
  2697  0072                     ___lwdiv@dividend:	
  2698                           ; 2 bytes @ 0x2
  2699                           
  2700                           
  2701                           ; 2 bytes @ 0x2
  2702  0072                     	ds	1
  2703  0073                     ??_UART_Debug:	
  2704  0073                     ??_nrf_write_payload:	
  2705                           ; 1 bytes @ 0x3
  2706                           
  2707  0073                     ??_nrf_read_payload:	
  2708                           ; 1 bytes @ 0x3
  2709                           
  2710  0073                     nrf_read_register_len@len:	
  2711                           ; 1 bytes @ 0x3
  2712                           
  2713  0073                     nrf_read_register@reg:	
  2714                           ; 1 bytes @ 0x3
  2715                           
  2716  0073                     nrf_write_register_len@len:	
  2717                           ; 1 bytes @ 0x3
  2718                           
  2719  0073                     nrf_flush_rx@status:	
  2720                           ; 1 bytes @ 0x3
  2721                           
  2722  0073                     nrf_flush_tx@status:	
  2723                           ; 1 bytes @ 0x3
  2724                           
  2725  0073                     nrf_get_status@status:	
  2726                           ; 1 bytes @ 0x3
  2727                           
  2728  0073                     nrf_getDynamicPayloadSize@result:	
  2729                           ; 1 bytes @ 0x3
  2730                           
  2731  0073                     I2C1_ReadFrame@i2c1SlaveAddress:	
  2732                           ; 1 bytes @ 0x3
  2733                           
  2734  0073                     ___bmul@multiplier:	
  2735                           ; 1 bytes @ 0x3
  2736                           
  2737  0073                     ___ftpack@exp:	
  2738                           ; 1 bytes @ 0x3
  2739                           
  2740                           
  2741                           ; 1 bytes @ 0x3
  2742  0073                     	ds	1
  2743  0074                     ??_nrf_read_register_len:	
  2744  0074                     ??_nrf_write_register_len:	
  2745                           ; 1 bytes @ 0x4
  2746                           
  2747  0074                     ??_nrf_stopListening:	
  2748                           ; 1 bytes @ 0x4
  2749                           
  2750  0074                     ??___wmul:	
  2751                           ; 1 bytes @ 0x4
  2752                           
  2753  0074                     ??___lwdiv:	
  2754                           ; 1 bytes @ 0x4
  2755                           
  2756  0074                     nrf_read_register@result:	
  2757                           ; 1 bytes @ 0x4
  2758                           
  2759  0074                     ___ftpack@sign:	
  2760                           ; 1 bytes @ 0x4
  2761                           
  2762  0074                     ___wmul@product:	
  2763                           ; 1 bytes @ 0x4
  2764                           
  2765  0074                     ___aldiv@dividend:	
  2766                           ; 2 bytes @ 0x4
  2767                           
  2768                           
  2769                           ; 4 bytes @ 0x4
  2770  0074                     	ds	1
  2771  0075                     ??___ftpack:	
  2772  0075                     ?_nrf_write_register:	
  2773                           ; 1 bytes @ 0x5
  2774                           
  2775  0075                     nrf_read_register_len@reg:	
  2776                           ; 1 bytes @ 0x5
  2777                           
  2778  0075                     nrf_write_register_len@status:	
  2779                           ; 1 bytes @ 0x5
  2780                           
  2781  0075                     nrf_write_register@value:	
  2782                           ; 1 bytes @ 0x5
  2783                           
  2784  0075                     nrf_write_payload@status:	
  2785                           ; 1 bytes @ 0x5
  2786                           
  2787  0075                     nrf_read_payload@status:	
  2788                           ; 1 bytes @ 0x5
  2789                           
  2790  0075                     ___lwdiv@quotient:	
  2791                           ; 1 bytes @ 0x5
  2792                           
  2793                           
  2794                           ; 2 bytes @ 0x5
  2795  0075                     	ds	1
  2796  0076                     ??_nrf_write_register:	
  2797  0076                     nrf_read_register_len@status:	
  2798                           ; 1 bytes @ 0x6
  2799                           
  2800  0076                     nrf_write_register_len@reg:	
  2801                           ; 1 bytes @ 0x6
  2802                           
  2803  0076                     nrf_write_payload@buf:	
  2804                           ; 1 bytes @ 0x6
  2805                           
  2806  0076                     _nrf_read_payload$199:	
  2807                           ; 1 bytes @ 0x6
  2808                           
  2809                           
  2810                           ; 2 bytes @ 0x6
  2811  0076                     	ds	1
  2812  0077                     nrf_write_register@reg:	
  2813  0077                     ___lwdiv@counter:	
  2814                           ; 1 bytes @ 0x7
  2815                           
  2816  0077                     _nrf_write_payload$190:	
  2817                           ; 1 bytes @ 0x7
  2818                           
  2819                           
  2820                           ; 2 bytes @ 0x7
  2821  0077                     	ds	1
  2822  0078                     ??___aldiv:	
  2823  0078                     ?___lwmod:	
  2824                           ; 1 bytes @ 0x8
  2825                           
  2826  0078                     ?___lwtoft:	
  2827                           ; 2 bytes @ 0x8
  2828                           
  2829  0078                     nrf_write_register@status:	
  2830                           ; 3 bytes @ 0x8
  2831                           
  2832  0078                     _nrf_read_payload$201:	
  2833                           ; 1 bytes @ 0x8
  2834                           
  2835  0078                     ___lwmod@divisor:	
  2836                           ; 2 bytes @ 0x8
  2837                           
  2838  0078                     ___lwtoft@c:	
  2839                           ; 2 bytes @ 0x8
  2840                           
  2841                           
  2842                           ; 2 bytes @ 0x8
  2843  0078                     	ds	1
  2844  0079                     ??_nrf_setPALevel:	
  2845  0079                     ??_nrf_setDataRate:	
  2846                           ; 1 bytes @ 0x9
  2847                           
  2848  0079                     ??_nrf_setCRCLength:	
  2849                           ; 1 bytes @ 0x9
  2850                           
  2851  0079                     ?_nrf_whatHappened:	
  2852                           ; 1 bytes @ 0x9
  2853                           
  2854  0079                     ??_nrf_setChannel:	
  2855                           ; 1 bytes @ 0x9
  2856                           
  2857  0079                     ??_nrf_startListening:	
  2858                           ; 1 bytes @ 0x9
  2859                           
  2860  0079                     ??_nrf_powerDown:	
  2861                           ; 1 bytes @ 0x9
  2862                           
  2863  0079                     ??_nrf_powerUp:	
  2864                           ; 1 bytes @ 0x9
  2865                           
  2866  0079                     ??_nrf_available:	
  2867                           ; 1 bytes @ 0x9
  2868                           
  2869  0079                     ??_nrf_openWritingPipe:	
  2870                           ; 1 bytes @ 0x9
  2871                           
  2872  0079                     ?_nrf_openReadingPipe:	
  2873                           ; 1 bytes @ 0x9
  2874                           
  2875  0079                     ??_nrf_enableDynamicPayloads:	
  2876                           ; 1 bytes @ 0x9
  2877                           
  2878  0079                     ??_nrf_setAutoAck_all:	
  2879                           ; 1 bytes @ 0x9
  2880                           
  2881  0079                     ?_nrf_setRetries:	
  2882                           ; 1 bytes @ 0x9
  2883                           
  2884  0079                     ??_UARTSetup:	
  2885                           ; 1 bytes @ 0x9
  2886                           
  2887  0079                     nrf_whatHappened@tx_fail:	
  2888                           ; 1 bytes @ 0x9
  2889                           
  2890  0079                     nrf_openReadingPipe@address:	
  2891                           ; 1 bytes @ 0x9
  2892                           
  2893  0079                     nrf_setRetries@count:	
  2894                           ; 1 bytes @ 0x9
  2895                           
  2896  0079                     _nrf_write_payload$192:	
  2897                           ; 1 bytes @ 0x9
  2898                           
  2899                           
  2900                           ; 2 bytes @ 0x9
  2901  0079                     	ds	1
  2902  007A                     ??_nrf_openReadingPipe:	
  2903  007A                     ??_nrf_setRetries:	
  2904                           ; 1 bytes @ 0xA
  2905                           
  2906  007A                     nrf_read_payload@blank_len:	
  2907                           ; 1 bytes @ 0xA
  2908                           
  2909  007A                     nrf_available@result:	
  2910                           ; 1 bytes @ 0xA
  2911                           
  2912  007A                     nrf_whatHappened@rx_ready:	
  2913                           ; 1 bytes @ 0xA
  2914                           
  2915  007A                     nrf_setAutoAck_all@enable:	
  2916                           ; 1 bytes @ 0xA
  2917                           
  2918  007A                     nrf_setPALevel@setup:	
  2919                           ; 1 bytes @ 0xA
  2920                           
  2921  007A                     nrf_setDataRate@result:	
  2922                           ; 1 bytes @ 0xA
  2923                           
  2924  007A                     nrf_setCRCLength@length:	
  2925                           ; 1 bytes @ 0xA
  2926                           
  2927  007A                     ___lwmod@dividend:	
  2928                           ; 1 bytes @ 0xA
  2929                           
  2930                           
  2931                           ; 2 bytes @ 0xA
  2932  007A                     	ds	1
  2933  007B                     ??_nrf_whatHappened:	
  2934  007B                     ??_Device_Initialize:	
  2935                           ; 1 bytes @ 0xB
  2936                           
  2937  007B                     ??___lwtoft:	
  2938                           ; 1 bytes @ 0xB
  2939                           
  2940  007B                     nrf_write_payload@blank_len:	
  2941                           ; 1 bytes @ 0xB
  2942                           
  2943  007B                     nrf_read_payload@buf:	
  2944                           ; 1 bytes @ 0xB
  2945                           
  2946  007B                     nrf_available@pipe_num:	
  2947                           ; 1 bytes @ 0xB
  2948                           
  2949  007B                     nrf_setPALevel@level:	
  2950                           ; 1 bytes @ 0xB
  2951                           
  2952  007B                     nrf_setDataRate@speed:	
  2953                           ; 1 bytes @ 0xB
  2954                           
  2955  007B                     nrf_setCRCLength@config:	
  2956                           ; 1 bytes @ 0xB
  2957                           
  2958  007B                     _nrf_setChannel$242:	
  2959                           ; 1 bytes @ 0xB
  2960                           
  2961  007B                     _nrf_openWritingPipe$347:	
  2962                           ; 2 bytes @ 0xB
  2963                           
  2964                           
  2965                           ; 2 bytes @ 0xB
  2966  007B                     	ds	1
  2967  007C                     ??___lwmod:	
  2968  007C                     nrf_write_payload@i:	
  2969                           ; 1 bytes @ 0xC
  2970                           
  2971  007C                     nrf_read_payload@i:	
  2972                           ; 1 bytes @ 0xC
  2973                           
  2974  007C                     nrf_available@status:	
  2975                           ; 1 bytes @ 0xC
  2976                           
  2977  007C                     nrf_openReadingPipe@child:	
  2978                           ; 1 bytes @ 0xC
  2979                           
  2980  007C                     nrf_setDataRate@setup:	
  2981                           ; 1 bytes @ 0xC
  2982                           
  2983                           
  2984                           ; 1 bytes @ 0xC
  2985  007C                     	ds	1
  2986  007D                     nrf_write_payload@data_len:	
  2987  007D                     nrf_read_payload@data_len:	
  2988                           ; 1 bytes @ 0xD
  2989                           
  2990  007D                     nrf_setChannel@channel:	
  2991                           ; 1 bytes @ 0xD
  2992                           
  2993  007D                     nrf_openWritingPipe@address:	
  2994                           ; 1 bytes @ 0xD
  2995                           
  2996  007D                     nrf_setRetries@delay:	
  2997                           ; 1 bytes @ 0xD
  2998                           
  2999  007D                     ___lwmod@counter:	
  3000                           ; 1 bytes @ 0xD
  3001                           
  3002                           
  3003                           ; 1 bytes @ 0xD
  3004  007D                     	ds	1
  3005                           
  3006                           	psect	cstackBANK0
  3007  0020                     __pcstackBANK0:	
  3008  0020                     ?_nrf_startWrite:	
  3009  0020                     ??_nrf_begin:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0020                     ?_nrf_read:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0020                     ?__doprnt:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0020                     ?___ftmul:	
  3019                           ; 2 bytes @ 0x0
  3020                           
  3021  0020                     nrf_startWrite@len:	
  3022                           ; 3 bytes @ 0x0
  3023                           
  3024  0020                     nrf_read@len:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027  0020                     nrf_whatHappened@tx_ok:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0020                     ___aldiv@counter:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0020                     __doprnt@f:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0020                     ___ftmul@f1:	
  3037                           ; 2 bytes @ 0x0
  3038                           
  3039                           
  3040                           ; 3 bytes @ 0x0
  3041  0020                     	ds	1
  3042  0021                     ??_nrf_startWrite:	
  3043  0021                     ??_nrf_read:	
  3044                           ; 1 bytes @ 0x1
  3045                           
  3046  0021                     nrf_whatHappened@status:	
  3047                           ; 1 bytes @ 0x1
  3048                           
  3049  0021                     ___aldiv@sign:	
  3050                           ; 1 bytes @ 0x1
  3051                           
  3052                           
  3053                           ; 1 bytes @ 0x1
  3054  0021                     	ds	1
  3055  0022                     nrf_startWrite@buf:	
  3056  0022                     nrf_read@buf:	
  3057                           ; 1 bytes @ 0x2
  3058                           
  3059  0022                     __doprnt@ap:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0022                     ___aldiv@quotient:	
  3063                           ; 1 bytes @ 0x2
  3064                           
  3065                           
  3066                           ; 4 bytes @ 0x2
  3067  0022                     	ds	1
  3068  0023                     ?_nrf_write:	
  3069  0023                     ??__doprnt:	
  3070                           ; 1 bytes @ 0x3
  3071                           
  3072  0023                     nrf_write@len:	
  3073                           ; 1 bytes @ 0x3
  3074                           
  3075  0023                     ___ftmul@f2:	
  3076                           ; 1 bytes @ 0x3
  3077                           
  3078                           
  3079                           ; 3 bytes @ 0x3
  3080  0023                     	ds	1
  3081  0024                     ??_nrf_write:	
  3082                           
  3083                           ; 1 bytes @ 0x4
  3084  0024                     	ds	2
  3085  0026                     ?_UARTSetup:	
  3086  0026                     ??___ftmul:	
  3087                           ; 1 bytes @ 0x6
  3088                           
  3089  0026                     UARTSetup@baudrate:	
  3090                           ; 1 bytes @ 0x6
  3091                           
  3092                           
  3093                           ; 2 bytes @ 0x6
  3094  0026                     	ds	1
  3095  0027                     __doprnt$1464:	
  3096                           
  3097                           ; 2 bytes @ 0x7
  3098  0027                     	ds	1
  3099  0028                     nrf_write@timeout:	
  3100  0028                     _UARTSetup$2069:	
  3101                           ; 4 bytes @ 0x8
  3102                           
  3103                           
  3104                           ; 4 bytes @ 0x8
  3105  0028                     	ds	1
  3106  0029                     __doprnt$1465:	
  3107                           
  3108                           ; 2 bytes @ 0x9
  3109  0029                     	ds	1
  3110  002A                     ___ftmul@exp:	
  3111                           
  3112                           ; 1 bytes @ 0xA
  3113  002A                     	ds	1
  3114  002B                     __doprnt$1466:	
  3115  002B                     ___ftmul@f3_as_product:	
  3116                           ; 2 bytes @ 0xB
  3117                           
  3118                           
  3119                           ; 3 bytes @ 0xB
  3120  002B                     	ds	1
  3121  002C                     nrf_write@status:	
  3122  002C                     UARTSetup@baud:	
  3123                           ; 1 bytes @ 0xC
  3124                           
  3125                           
  3126                           ; 2 bytes @ 0xC
  3127  002C                     	ds	1
  3128  002D                     nrf_write@buf:	
  3129  002D                     __doprnt$1467:	
  3130                           ; 1 bytes @ 0xD
  3131                           
  3132                           
  3133                           ; 2 bytes @ 0xD
  3134  002D                     	ds	1
  3135  002E                     nrf_write@result:	
  3136  002E                     ___ftmul@cntr:	
  3137                           ; 1 bytes @ 0xE
  3138                           
  3139                           
  3140                           ; 1 bytes @ 0xE
  3141  002E                     	ds	1
  3142  002F                     nrf_write@observe_tx:	
  3143  002F                     ___ftmul@sign:	
  3144                           ; 1 bytes @ 0xF
  3145                           
  3146  002F                     __doprnt$1473:	
  3147                           ; 1 bytes @ 0xF
  3148                           
  3149                           
  3150                           ; 2 bytes @ 0xF
  3151  002F                     	ds	1
  3152  0030                     ?___ftdiv:	
  3153  0030                     nrf_write@tx_fail:	
  3154                           ; 3 bytes @ 0x10
  3155                           
  3156  0030                     ___ftdiv@f2:	
  3157                           ; 1 bytes @ 0x10
  3158                           
  3159                           
  3160                           ; 3 bytes @ 0x10
  3161  0030                     	ds	1
  3162  0031                     nrf_write@tx_ok:	
  3163  0031                     __doprnt@idx:	
  3164                           ; 1 bytes @ 0x11
  3165                           
  3166                           
  3167                           ; 1 bytes @ 0x11
  3168  0031                     	ds	1
  3169  0032                     __doprnt@cp:	
  3170                           
  3171                           ; 2 bytes @ 0x12
  3172  0032                     	ds	1
  3173  0033                     ___ftdiv@f1:	
  3174                           
  3175                           ; 3 bytes @ 0x13
  3176  0033                     	ds	1
  3177  0034                     __doprnt@len:	
  3178                           
  3179                           ; 2 bytes @ 0x14
  3180  0034                     	ds	2
  3181  0036                     ??___ftdiv:	
  3182  0036                     __doprnt@val:	
  3183                           ; 1 bytes @ 0x16
  3184                           
  3185                           
  3186                           ; 2 bytes @ 0x16
  3187  0036                     	ds	2
  3188  0038                     __doprnt@prec:	
  3189                           
  3190                           ; 1 bytes @ 0x18
  3191  0038                     	ds	1
  3192  0039                     __doprnt@width:	
  3193                           
  3194                           ; 2 bytes @ 0x19
  3195  0039                     	ds	1
  3196  003A                     ___ftdiv@cntr:	
  3197                           
  3198                           ; 1 bytes @ 0x1A
  3199  003A                     	ds	1
  3200  003B                     __doprnt@c:	
  3201  003B                     ___ftdiv@f3:	
  3202                           ; 1 bytes @ 0x1B
  3203                           
  3204                           
  3205                           ; 3 bytes @ 0x1B
  3206  003B                     	ds	1
  3207  003C                     __doprnt@flag:	
  3208                           
  3209                           ; 2 bytes @ 0x1C
  3210  003C                     	ds	2
  3211  003E                     __doprnt@pb:	
  3212  003E                     ___ftdiv@exp:	
  3213                           ; 1 bytes @ 0x1E
  3214                           
  3215                           
  3216                           ; 1 bytes @ 0x1E
  3217  003E                     	ds	1
  3218  003F                     ?_printf:	
  3219  003F                     ?_sprintf:	
  3220                           ; 2 bytes @ 0x1F
  3221                           
  3222  003F                     ___ftdiv@sign:	
  3223                           ; 2 bytes @ 0x1F
  3224                           
  3225  003F                     printf@f:	
  3226                           ; 1 bytes @ 0x1F
  3227                           
  3228  003F                     sprintf@f:	
  3229                           ; 2 bytes @ 0x1F
  3230                           
  3231                           
  3232                           ; 2 bytes @ 0x1F
  3233  003F                     	ds	1
  3234  0040                     ?___ftadd:	
  3235  0040                     ___ftadd@f1:	
  3236                           ; 3 bytes @ 0x20
  3237                           
  3238                           
  3239                           ; 3 bytes @ 0x20
  3240  0040                     	ds	3
  3241  0043                     ___ftadd@f2:	
  3242                           
  3243                           ; 3 bytes @ 0x23
  3244  0043                     	ds	3
  3245  0046                     ??___ftadd:	
  3246                           
  3247                           ; 1 bytes @ 0x26
  3248  0046                     	ds	4
  3249  004A                     ___ftadd@sign:	
  3250                           
  3251                           ; 1 bytes @ 0x2A
  3252  004A                     	ds	1
  3253  004B                     ??_sprintf:	
  3254  004B                     ___ftadd@exp2:	
  3255                           ; 1 bytes @ 0x2B
  3256                           
  3257                           
  3258                           ; 1 bytes @ 0x2B
  3259  004B                     	ds	1
  3260  004C                     ___ftadd@exp1:	
  3261  004C                     sprintf@wh:	
  3262                           ; 1 bytes @ 0x2C
  3263                           
  3264                           
  3265                           ; 1 bytes @ 0x2C
  3266  004C                     	ds	1
  3267  004D                     ??_printf:	
  3268  004D                     ?_si7021_ReadHumidity:	
  3269                           ; 1 bytes @ 0x2D
  3270                           
  3271  004D                     ?_si7021_ReadTemperature:	
  3272                           ; 3 bytes @ 0x2D
  3273                           
  3274  004D                     sprintf@ap:	
  3275                           ; 3 bytes @ 0x2D
  3276                           
  3277                           
  3278                           ; 1 bytes @ 0x2D
  3279  004D                     	ds	1
  3280  004E                     printf@ap:	
  3281  004E                     sprintf@pb:	
  3282                           ; 1 bytes @ 0x2E
  3283                           
  3284                           
  3285                           ; 3 bytes @ 0x2E
  3286  004E                     	ds	1
  3287  004F                     printf@pb:	
  3288                           
  3289                           ; 3 bytes @ 0x2F
  3290  004F                     	ds	1
  3291  0050                     ??_si7021_ReadHumidity:	
  3292  0050                     ??_si7021_ReadTemperature:	
  3293                           ; 1 bytes @ 0x30
  3294                           
  3295                           
  3296                           ; 1 bytes @ 0x30
  3297  0050                     	ds	5
  3298  0055                     si7021_ReadHumidity@result:	
  3299  0055                     si7021_ReadTemperature@result:	
  3300                           ; 3 bytes @ 0x35
  3301                           
  3302                           
  3303                           ; 3 bytes @ 0x35
  3304  0055                     	ds	3
  3305  0058                     si7021_ReadHumidity@rawHumidity:	
  3306  0058                     si7021_ReadTemperature@rawTemp:	
  3307                           ; 2 bytes @ 0x38
  3308                           
  3309                           
  3310                           ; 2 bytes @ 0x38
  3311  0058                     	ds	2
  3312  005A                     si7021_ReadHumidity@readData:	
  3313  005A                     si7021_ReadTemperature@readData:	
  3314                           ; 2 bytes @ 0x3A
  3315                           
  3316                           
  3317                           ; 2 bytes @ 0x3A
  3318  005A                     	ds	2
  3319  005C                     ?___fttol:	
  3320  005C                     ___fttol@f1:	
  3321                           ; 4 bytes @ 0x3C
  3322                           
  3323                           
  3324                           ; 3 bytes @ 0x3C
  3325  005C                     	ds	4
  3326  0060                     ??___fttol:	
  3327                           
  3328                           ; 1 bytes @ 0x40
  3329  0060                     	ds	4
  3330  0064                     ___fttol@sign1:	
  3331                           
  3332                           ; 1 bytes @ 0x44
  3333  0064                     	ds	1
  3334  0065                     ___fttol@lval:	
  3335                           
  3336                           ; 4 bytes @ 0x45
  3337  0065                     	ds	4
  3338  0069                     ___fttol@exp1:	
  3339                           
  3340                           ; 1 bytes @ 0x49
  3341  0069                     	ds	1
  3342  006A                     ??_sb_readTemperature:	
  3343  006A                     ??_sb_readHumidity:	
  3344                           ; 1 bytes @ 0x4A
  3345                           
  3346                           
  3347                           ; 1 bytes @ 0x4A
  3348  006A                     	ds	1
  3349  006B                     _sb_readTemperature$2070:	
  3350  006B                     _sb_readHumidity$2071:	
  3351                           ; 3 bytes @ 0x4B
  3352                           
  3353                           
  3354                           ; 3 bytes @ 0x4B
  3355  006B                     	ds	3
  3356  006E                     sb_readTemperature@temp:	
  3357  006E                     sb_readHumidity@humid:	
  3358                           ; 2 bytes @ 0x4E
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x4E
  3362  006E                     	ds	2
  3363                           
  3364                           	psect	maintext
  3365  0E2B                     __pmaintext:	
  3366 ;;
  3367 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  3368 ;;
  3369 ;; *************** function _main *****************
  3370 ;; Defined at:
  3371 ;;		line 3 in file "main.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  len             1   18[BANK1 ] unsigned char 
  3376 ;;  nRF_pipe_rea    5   13[BANK1 ] unsigned char [5]
  3377 ;;  nRF_pipe_wri    5    8[BANK1 ] unsigned char [5]
  3378 ;;  i               1   19[BANK1 ] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : B1F/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;Total ram usage:       20 bytes
  3393 ;; Hardware stack levels required when called:    4
  3394 ;; This function calls:
  3395 ;;		_Device_Initialize
  3396 ;;		_Device_SetUp
  3397 ;;		_StatusLED
  3398 ;;		_Timer1_Setup
  3399 ;;		_UART_Debug
  3400 ;;		_i2c_init
  3401 ;;		_nrf_available
  3402 ;;		_nrf_begin
  3403 ;;		_nrf_enableDynamicPayloads
  3404 ;;		_nrf_getDynamicPayloadSize
  3405 ;;		_nrf_openReadingPipe
  3406 ;;		_nrf_openWritingPipe
  3407 ;;		_nrf_powerUp
  3408 ;;		_nrf_read
  3409 ;;		_nrf_setAutoAck_all
  3410 ;;		_nrf_setCRCLength
  3411 ;;		_nrf_setChannel
  3412 ;;		_nrf_setDataRate
  3413 ;;		_nrf_setPALevel
  3414 ;;		_nrf_setRetries
  3415 ;;		_nrf_startListening
  3416 ;;		_nrf_stopListening
  3417 ;;		_nrf_write
  3418 ;;		_printf
  3419 ;;		_sb_readHumidity
  3420 ;;		_sb_readTemperature
  3421 ;;		_spi_init
  3422 ;;		_sprintf
  3423 ;; This function is called by:
  3424 ;;		Startup code after reset
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _main
  3430  0E2B                     _main:	
  3431                           
  3432                           ;main.c: 4: Device_SetUp();
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3436  0E2B  3192  223A  318E   	fcall	_Device_SetUp
  3437                           
  3438                           ;main.c: 5: Device_Initialize();
  3439  0E2E  3193  233B  318E   	fcall	_Device_Initialize
  3440                           
  3441                           ;main.c: 6: Timer1_Setup();
  3442  0E31  319F  27D4  318E   	fcall	_Timer1_Setup
  3443                           
  3444                           ;main.c: 7: spi_init();
  3445  0E34  3191  2113  318E   	fcall	_spi_init
  3446                           
  3447                           ;main.c: 8: _delay((unsigned long)((1000)*(32000000/4000.0)));
  3448  0E37  3029               	movlw	41
  3449  0E38  0021               	movlb	1	; select bank1
  3450  0E39  00B6               	movwf	(??_main^(0+128)+2)
  3451  0E3A  3096               	movlw	150
  3452  0E3B  00B5               	movwf	(??_main^(0+128)+1)
  3453  0E3C  30A6               	movlw	166
  3454  0E3D  00B4               	movwf	??_main^(0+128)
  3455  0E3E                     u6317:	
  3456  0E3E  0BB4               	decfsz	??_main^(0+128),f
  3457  0E3F  2E3E               	goto	u6317
  3458  0E40  0BB5               	decfsz	(??_main^(0+128)+1),f
  3459  0E41  2E3E               	goto	u6317
  3460  0E42  0BB6               	decfsz	(??_main^(0+128)+2),f
  3461  0E43  2E3E               	goto	u6317
  3462                           
  3463                           ;main.c: 9: UART_Debug("Device initialized.\r\n");
  3464  0E44  3051               	movlw	low (STR_33| (0+32768))
  3465  0E45  00F1               	movwf	UART_Debug@str
  3466  0E46  3089               	movlw	high (STR_33| (0+32768))
  3467  0E47  00F2               	movwf	UART_Debug@str+1
  3468  0E48  3190  20E5  318E   	fcall	_UART_Debug
  3469                           
  3470                           ;main.c: 10: StatusLED(4);
  3471  0E4B  3004               	movlw	4
  3472  0E4C  3191  21EE  318E   	fcall	_StatusLED
  3473                           
  3474                           ;main.c: 11: _delay((unsigned long)((500)*(32000000/4000.0)));
  3475  0E4F  3015               	movlw	21
  3476  0E50  0021               	movlb	1	; select bank1
  3477  0E51  00B6               	movwf	(??_main^(0+128)+2)
  3478  0E52  304B               	movlw	75
  3479  0E53  00B5               	movwf	(??_main^(0+128)+1)
  3480  0E54  30D1               	movlw	209
  3481  0E55  00B4               	movwf	??_main^(0+128)
  3482  0E56                     u6327:	
  3483  0E56  0BB4               	decfsz	??_main^(0+128),f
  3484  0E57  2E56               	goto	u6327
  3485  0E58  0BB5               	decfsz	(??_main^(0+128)+1),f
  3486  0E59  2E56               	goto	u6327
  3487  0E5A  0BB6               	decfsz	(??_main^(0+128)+2),f
  3488  0E5B  2E56               	goto	u6327
  3489  0E5C  0000               	nop
  3490                           
  3491                           ;main.c: 12: StatusLED(0);
  3492  0E5D  3000               	movlw	0
  3493  0E5E  3191  21EE  318E   	fcall	_StatusLED
  3494                           
  3495                           ;main.c: 13: _delay((unsigned long)((500)*(32000000/4000.0)));
  3496  0E61  3015               	movlw	21
  3497  0E62  0021               	movlb	1	; select bank1
  3498  0E63  00B6               	movwf	(??_main^(0+128)+2)
  3499  0E64  304B               	movlw	75
  3500  0E65  00B5               	movwf	(??_main^(0+128)+1)
  3501  0E66  30D1               	movlw	209
  3502  0E67  00B4               	movwf	??_main^(0+128)
  3503  0E68                     u6337:	
  3504  0E68  0BB4               	decfsz	??_main^(0+128),f
  3505  0E69  2E68               	goto	u6337
  3506  0E6A  0BB5               	decfsz	(??_main^(0+128)+1),f
  3507  0E6B  2E68               	goto	u6337
  3508  0E6C  0BB6               	decfsz	(??_main^(0+128)+2),f
  3509  0E6D  2E68               	goto	u6337
  3510  0E6E  0000               	nop
  3511                           
  3512                           ;main.c: 14: StatusLED(1);
  3513  0E6F  3001               	movlw	1
  3514  0E70  3191  21EE  318E   	fcall	_StatusLED
  3515                           
  3516                           ;main.c: 16: UART_Debug("----------------\r\n");
  3517  0E73  307B               	movlw	low (STR_34| (0+32768))
  3518  0E74  00F1               	movwf	UART_Debug@str
  3519  0E75  3089               	movlw	high (STR_34| (0+32768))
  3520  0E76  00F2               	movwf	UART_Debug@str+1
  3521  0E77  3190  20E5  318E   	fcall	_UART_Debug
  3522                           
  3523                           ;main.c: 17: UART_Debug("Sensor Board\r\n");
  3524  0E7A  30F6               	movlw	low (STR_35| (0+32768))
  3525  0E7B  00F1               	movwf	UART_Debug@str
  3526  0E7C  3089               	movlw	high (STR_35| (0+32768))
  3527  0E7D  00F2               	movwf	UART_Debug@str+1
  3528  0E7E  3190  20E5  318E   	fcall	_UART_Debug
  3529                           
  3530                           ;main.c: 18: UART_Debug("Firmware version: 1.2\r\n");
  3531  0E81  3021               	movlw	low (STR_36| (0+32768))
  3532  0E82  00F1               	movwf	UART_Debug@str
  3533  0E83  3089               	movlw	high (STR_36| (0+32768))
  3534  0E84  00F2               	movwf	UART_Debug@str+1
  3535  0E85  3190  20E5  318E   	fcall	_UART_Debug
  3536                           
  3537                           ;main.c: 19: UART_Debug("----------------\r\n");
  3538  0E88  307B               	movlw	low (STR_34| (0+32768))
  3539  0E89  00F1               	movwf	UART_Debug@str
  3540  0E8A  3089               	movlw	high (STR_34| (0+32768))
  3541  0E8B  00F2               	movwf	UART_Debug@str+1
  3542  0E8C  3190  20E5  318E   	fcall	_UART_Debug
  3543                           
  3544                           ;main.c: 20: _delay((unsigned long)((500)*(32000000/4000.0)));
  3545  0E8F  3015               	movlw	21
  3546  0E90  0021               	movlb	1	; select bank1
  3547  0E91  00B6               	movwf	(??_main^(0+128)+2)
  3548  0E92  304B               	movlw	75
  3549  0E93  00B5               	movwf	(??_main^(0+128)+1)
  3550  0E94  30D1               	movlw	209
  3551  0E95  00B4               	movwf	??_main^(0+128)
  3552  0E96                     u6347:	
  3553  0E96  0BB4               	decfsz	??_main^(0+128),f
  3554  0E97  2E96               	goto	u6347
  3555  0E98  0BB5               	decfsz	(??_main^(0+128)+1),f
  3556  0E99  2E96               	goto	u6347
  3557  0E9A  0BB6               	decfsz	(??_main^(0+128)+2),f
  3558  0E9B  2E96               	goto	u6347
  3559  0E9C  0000               	nop
  3560                           
  3561                           ;main.c: 21: StatusLED(4);
  3562  0E9D  3004               	movlw	4
  3563  0E9E  3191  21EE  318E   	fcall	_StatusLED
  3564                           
  3565                           ;main.c: 32: wide_band = 1;
  3566  0EA1  0021               	movlb	1	; select bank1
  3567  0EA2  01AD               	clrf	_wide_band^(0+128)
  3568  0EA3  0AAD               	incf	_wide_band^(0+128),f
  3569                           
  3570                           ;main.c: 33: p_variant = 0;
  3571  0EA4  01A7               	clrf	_p_variant^(0+128)
  3572                           
  3573                           ;main.c: 34: payload_size = 32;
  3574  0EA5  3020               	movlw	32
  3575  0EA6  00B4               	movwf	??_main^(0+128)
  3576  0EA7  0834               	movf	??_main^(0+128),w
  3577  0EA8  00A8               	movwf	_payload_size^(0+128)
  3578                           
  3579                           ;main.c: 35: ack_payload_available = 1;
  3580  0EA9  01B3               	clrf	_ack_payload_available^(0+128)
  3581  0EAA  0AB3               	incf	_ack_payload_available^(0+128),f
  3582                           
  3583                           ;main.c: 36: dynamic_payloads_enabled = 1;
  3584  0EAB  01A6               	clrf	_dynamic_payloads_enabled^(0+128)
  3585  0EAC  0AA6               	incf	_dynamic_payloads_enabled^(0+128),f
  3586                           
  3587                           ;main.c: 39: nrf_begin();
  3588  0EAD  3195  256B  318E   	fcall	_nrf_begin
  3589                           
  3590                           ;main.c: 40: nrf_enableDynamicPayloads();
  3591  0EB0  3193  236B  318E   	fcall	_nrf_enableDynamicPayloads
  3592                           
  3593                           ;main.c: 41: nrf_setAutoAck_all(1);
  3594  0EB3  3001               	movlw	1
  3595  0EB4  3190  2033  318E   	fcall	_nrf_setAutoAck_all
  3596                           
  3597                           ;main.c: 42: nrf_setDataRate(RF24_250KBPS);
  3598  0EB7  3002               	movlw	2
  3599  0EB8  3193  23CD  318E   	fcall	_nrf_setDataRate
  3600                           
  3601                           ;main.c: 43: nrf_setPALevel(RF24_PA_MAX);
  3602  0EBB  3003               	movlw	3
  3603  0EBC  3193  230D  318E   	fcall	_nrf_setPALevel
  3604                           
  3605                           ;main.c: 44: nrf_setChannel(70);
  3606  0EBF  3046               	movlw	70
  3607  0EC0  3191  21B2  318E   	fcall	_nrf_setChannel
  3608                           
  3609                           ;main.c: 45: nrf_setRetries(15,15);
  3610  0EC3  300F               	movlw	15
  3611  0EC4  0021               	movlb	1	; select bank1
  3612  0EC5  00B4               	movwf	??_main^(0+128)
  3613  0EC6  0834               	movf	??_main^(0+128),w
  3614  0EC7  00F9               	movwf	nrf_setRetries@count
  3615  0EC8  300F               	movlw	15
  3616  0EC9  3190  20BA  318E   	fcall	_nrf_setRetries
  3617                           
  3618                           ;main.c: 46: nrf_setCRCLength(RF24_CRC_8);
  3619  0ECC  3001               	movlw	1
  3620  0ECD  3191  2160  318E   	fcall	_nrf_setCRCLength
  3621                           
  3622                           ;main.c: 50: uint8_t nRF_pipe_writing[5] = {0xe1, 0xf0, 0xf0, 0xf0, 0xf0};
  3623  0ED0  30C8               	movlw	low main@F3477
  3624  0ED1  0086               	movwf	6
  3625  0ED2  3000               	movlw	high main@F3477
  3626  0ED3  0087               	movwf	7
  3627  0ED4  30BC               	movlw	low main@nRF_pipe_writing
  3628  0ED5  0084               	movwf	4
  3629  0ED6  3000               	movlw	high main@nRF_pipe_writing
  3630  0ED7  0085               	movwf	5
  3631  0ED8  3005               	movlw	5
  3632  0ED9  0021               	movlb	1	; select bank1
  3633  0EDA  00B4               	movwf	??_main^(0+128)
  3634  0EDB                     u6100:	
  3635  0EDB  0016               	moviw fsr1++
  3636  0EDC  001A               	movwi fsr0++
  3637  0EDD  0BB4               	decfsz	??_main^(0+128),f
  3638  0EDE  2EDB               	goto	u6100
  3639                           
  3640                           ;main.c: 53: uint8_t nRF_pipe_reading[5] = {0x31, 0x76, 0x72, 0x65, 0x73};
  3641  0EDF  30CD               	movlw	low main@F3479
  3642  0EE0  0086               	movwf	6
  3643  0EE1  3000               	movlw	high main@F3479
  3644  0EE2  0087               	movwf	7
  3645  0EE3  30C1               	movlw	low main@nRF_pipe_reading
  3646  0EE4  0084               	movwf	4
  3647  0EE5  3000               	movlw	high main@nRF_pipe_reading
  3648  0EE6  0085               	movwf	5
  3649  0EE7  3005               	movlw	5
  3650  0EE8  00B4               	movwf	??_main^(0+128)
  3651  0EE9                     u6110:	
  3652  0EE9  0016               	moviw fsr1++
  3653  0EEA  001A               	movwi fsr0++
  3654  0EEB  0BB4               	decfsz	??_main^(0+128),f
  3655  0EEC  2EE9               	goto	u6110
  3656                           
  3657                           ;main.c: 55: nrf_openWritingPipe(nRF_pipe_writing);
  3658  0EED  30BC               	movlw	(low (main@nRF_pipe_writing| 0))& (0+255)
  3659  0EEE  3194  249E  318E   	fcall	_nrf_openWritingPipe
  3660                           
  3661                           ;main.c: 56: nrf_openReadingPipe(1, nRF_pipe_reading);
  3662  0EF1  30C1               	movlw	(low (main@nRF_pipe_reading| 0))& (0+255)
  3663  0EF2  0021               	movlb	1	; select bank1
  3664  0EF3  00B4               	movwf	??_main^(0+128)
  3665  0EF4  0834               	movf	??_main^(0+128),w
  3666  0EF5  00F9               	movwf	nrf_openReadingPipe@address
  3667  0EF6  3001               	movlw	1
  3668  0EF7  3197  2793  318E   	fcall	_nrf_openReadingPipe
  3669                           
  3670                           ;main.c: 58: StatusLED(1);
  3671  0EFA  3001               	movlw	1
  3672  0EFB  3191  21EE  318E   	fcall	_StatusLED
  3673                           
  3674                           ;main.c: 60: i2c_init();
  3675  0EFE  3190  20FC  318E   	fcall	_i2c_init
  3676                           
  3677                           ;main.c: 62: printf("Printf is working\r\n");
  3678  0F01  3067               	movlw	low (STR_38| (0+32768))
  3679  0F02  0020               	movlb	0	; select bank0
  3680  0F03  00BF               	movwf	printf@f
  3681  0F04  3089               	movlw	high (STR_38| (0+32768))
  3682  0F05  00C0               	movwf	printf@f+1
  3683  0F06  3190  20CF  318E   	fcall	_printf
  3684                           
  3685                           ;main.c: 74: _delay((unsigned long)((2000)*(32000000/4000.0)));
  3686  0F09  3052               	movlw	82
  3687  0F0A  0021               	movlb	1	; select bank1
  3688  0F0B  00B6               	movwf	(??_main^(0+128)+2)
  3689  0F0C  302C               	movlw	44
  3690  0F0D  00B5               	movwf	(??_main^(0+128)+1)
  3691  0F0E  304F               	movlw	79
  3692  0F0F  00B4               	movwf	??_main^(0+128)
  3693  0F10                     u6357:	
  3694  0F10  0BB4               	decfsz	??_main^(0+128),f
  3695  0F11  2F10               	goto	u6357
  3696  0F12  0BB5               	decfsz	(??_main^(0+128)+1),f
  3697  0F13  2F10               	goto	u6357
  3698  0F14  0BB6               	decfsz	(??_main^(0+128)+2),f
  3699  0F15  2F10               	goto	u6357
  3700  0F16  3200               	nop2
  3701  0F17                     l5248:	
  3702                           ;main.c: 77: uint8_t i;
  3703                           ;main.c: 79: while(1) {
  3704                           
  3705                           
  3706                           ;main.c: 80: StatusLED(1);
  3707  0F17  3001               	movlw	1
  3708  0F18  3191  21EE  318E   	fcall	_StatusLED
  3709                           
  3710                           ;main.c: 81: nrf_powerUp();
  3711  0F1B  319F  27E8  318E   	fcall	_nrf_powerUp
  3712                           
  3713                           ;main.c: 82: _delay((unsigned long)((50)*(32000000/4000.0)));
  3714  0F1E  3003               	movlw	3
  3715  0F1F  0021               	movlb	1	; select bank1
  3716  0F20  00B6               	movwf	(??_main^(0+128)+2)
  3717  0F21  3008               	movlw	8
  3718  0F22  00B5               	movwf	(??_main^(0+128)+1)
  3719  0F23  3078               	movlw	120
  3720  0F24  00B4               	movwf	??_main^(0+128)
  3721  0F25                     u6367:	
  3722  0F25  0BB4               	decfsz	??_main^(0+128),f
  3723  0F26  2F25               	goto	u6367
  3724  0F27  0BB5               	decfsz	(??_main^(0+128)+1),f
  3725  0F28  2F25               	goto	u6367
  3726  0F29  0BB6               	decfsz	(??_main^(0+128)+2),f
  3727  0F2A  2F25               	goto	u6367
  3728                           
  3729                           ;main.c: 84: sb_readTemperature();
  3730  0F2B  3195  2520  318E   	fcall	_sb_readTemperature
  3731                           
  3732                           ;main.c: 85: sb_readHumidity();
  3733  0F2E  3194  24D5  318E   	fcall	_sb_readHumidity
  3734                           
  3735                           ;main.c: 87: sprintf(sendPayload, "%02X:TH:%d.%02d:%d.%02d", 0xA1, si7021_tempNum, si702
      +                          1_tempDec, si7021_humidNum, si7021_humidDec);
  3736  0F31  3039               	movlw	low (STR_39| (0+32768))
  3737  0F32  0020               	movlb	0	; select bank0
  3738  0F33  00BF               	movwf	sprintf@f
  3739  0F34  3089               	movlw	high (STR_39| (0+32768))
  3740  0F35  00C0               	movwf	sprintf@f+1
  3741  0F36  30A1               	movlw	161
  3742  0F37  00C1               	movwf	?_sprintf+2
  3743  0F38  3000               	movlw	0
  3744  0F39  00C2               	movwf	?_sprintf+3
  3745  0F3A  0021               	movlb	1	; select bank1
  3746  0F3B  082C               	movf	_si7021_tempNum^(0+128),w
  3747  0F3C  00B4               	movwf	??_main^(0+128)
  3748  0F3D  01B5               	clrf	(??_main^(0+128)+1)
  3749  0F3E  0834               	movf	??_main^(0+128),w
  3750  0F3F  0020               	movlb	0	; select bank0
  3751  0F40  00C3               	movwf	?_sprintf+4
  3752  0F41  0021               	movlb	1	; select bank1
  3753  0F42  0835               	movf	(??_main+1)^(0+128),w
  3754  0F43  0020               	movlb	0	; select bank0
  3755  0F44  00C4               	movwf	?_sprintf+5
  3756  0F45  0021               	movlb	1	; select bank1
  3757  0F46  082B               	movf	_si7021_tempDec^(0+128),w
  3758  0F47  00B6               	movwf	(??_main+2)^(0+128)
  3759  0F48  01B7               	clrf	((??_main+2)^(0+128)+1)
  3760  0F49  0836               	movf	(??_main+2)^(0+128),w
  3761  0F4A  0020               	movlb	0	; select bank0
  3762  0F4B  00C5               	movwf	?_sprintf+6
  3763  0F4C  0021               	movlb	1	; select bank1
  3764  0F4D  0837               	movf	(??_main+3)^(0+128),w
  3765  0F4E  0020               	movlb	0	; select bank0
  3766  0F4F  00C6               	movwf	?_sprintf+7
  3767  0F50  0021               	movlb	1	; select bank1
  3768  0F51  082A               	movf	_si7021_humidNum^(0+128),w
  3769  0F52  00B8               	movwf	(??_main+4)^(0+128)
  3770  0F53  01B9               	clrf	((??_main+4)^(0+128)+1)
  3771  0F54  0838               	movf	(??_main+4)^(0+128),w
  3772  0F55  0020               	movlb	0	; select bank0
  3773  0F56  00C7               	movwf	?_sprintf+8
  3774  0F57  0021               	movlb	1	; select bank1
  3775  0F58  0839               	movf	(??_main+5)^(0+128),w
  3776  0F59  0020               	movlb	0	; select bank0
  3777  0F5A  00C8               	movwf	?_sprintf+9
  3778  0F5B  0021               	movlb	1	; select bank1
  3779  0F5C  0829               	movf	_si7021_humidDec^(0+128),w
  3780  0F5D  00BA               	movwf	(??_main+6)^(0+128)
  3781  0F5E  01BB               	clrf	((??_main+6)^(0+128)+1)
  3782  0F5F  083A               	movf	(??_main+6)^(0+128),w
  3783  0F60  0020               	movlb	0	; select bank0
  3784  0F61  00C9               	movwf	?_sprintf+10
  3785  0F62  0021               	movlb	1	; select bank1
  3786  0F63  083B               	movf	(??_main+7)^(0+128),w
  3787  0F64  0020               	movlb	0	; select bank0
  3788  0F65  00CA               	movwf	?_sprintf+11
  3789  0F66  3040               	movlw	(low (_sendPayload| (0+256)))& (0+255)
  3790  0F67  3191  21D0  318E   	fcall	_sprintf
  3791                           
  3792                           ;main.c: 88: printf("Sending data: %s\r\n", sendPayload);
  3793  0F6A  308E               	movlw	low (STR_40| (0+32768))
  3794  0F6B  0020               	movlb	0	; select bank0
  3795  0F6C  00BF               	movwf	printf@f
  3796  0F6D  3089               	movlw	high (STR_40| (0+32768))
  3797  0F6E  00C0               	movwf	printf@f+1
  3798  0F6F  3040               	movlw	low _sendPayload
  3799  0F70  00C1               	movwf	low ((?_printf| 0+2))
  3800  0F71  3001               	movlw	high _sendPayload
  3801  0F72  00C2               	movwf	(low ((?_printf| 0+2))+1)
  3802  0F73  3190  20CF  318E   	fcall	_printf
  3803                           
  3804                           ;main.c: 90: StatusLED(2);
  3805  0F76  3002               	movlw	2
  3806  0F77  3191  21EE  318E   	fcall	_StatusLED
  3807                           
  3808                           ;main.c: 92: nrf_stopListening();
  3809  0F7A  319F  27F4  318E   	fcall	_nrf_stopListening
  3810                           
  3811                           ;main.c: 93: _delay((unsigned long)((10)*(32000000/4000.0)));
  3812  0F7D  3068               	movlw	104
  3813  0F7E  0021               	movlb	1	; select bank1
  3814  0F7F  00B5               	movwf	(??_main^(0+128)+1)
  3815  0F80  30E4               	movlw	228
  3816  0F81  00B4               	movwf	??_main^(0+128)
  3817  0F82                     u6377:	
  3818  0F82  0BB4               	decfsz	??_main^(0+128),f
  3819  0F83  2F82               	goto	u6377
  3820  0F84  0BB5               	decfsz	(??_main^(0+128)+1),f
  3821  0F85  2F82               	goto	u6377
  3822  0F86  0000               	nop
  3823                           
  3824                           ;main.c: 96: if ( nrf_write( sendPayload, 32) ) {
  3825  0F87  3020               	movlw	32
  3826  0F88  0021               	movlb	1	; select bank1
  3827  0F89  00B4               	movwf	??_main^(0+128)
  3828  0F8A  0834               	movf	??_main^(0+128),w
  3829  0F8B  0020               	movlb	0	; select bank0
  3830  0F8C  00A3               	movwf	nrf_write@len
  3831  0F8D  3040               	movlw	(low (_sendPayload| (0+256)))& (0+255)
  3832  0F8E  3196  266C  318E   	fcall	_nrf_write
  3833  0F91  3A00               	xorlw	0
  3834  0F92  1903               	skipnz
  3835  0F93  2F9D               	goto	l5272
  3836                           
  3837                           ;main.c: 97: UART_Debug("Send successful\n\r");
  3838  0F94  30A1               	movlw	low (STR_41| (0+32768))
  3839  0F95  00F1               	movwf	UART_Debug@str
  3840  0F96  3089               	movlw	high (STR_41| (0+32768))
  3841  0F97  00F2               	movwf	UART_Debug@str+1
  3842  0F98  3190  20E5  318E   	fcall	_UART_Debug
  3843                           
  3844                           ;main.c: 98: StatusLED(1);
  3845  0F9B  3001               	movlw	1
  3846  0F9C  2FA5               	goto	L1
  3847  0F9D                     l5272:	
  3848                           ;main.c: 99: }
  3849                           
  3850                           
  3851                           ;main.c: 100: else {
  3852                           ;main.c: 101: UART_Debug("Send failed\n\r");
  3853  0F9D  3005               	movlw	low (STR_42| (0+32768))
  3854  0F9E  00F1               	movwf	UART_Debug@str
  3855  0F9F  308A               	movlw	high (STR_42| (0+32768))
  3856  0FA0  00F2               	movwf	UART_Debug@str+1
  3857  0FA1  3190  20E5  318E   	fcall	_UART_Debug
  3858                           
  3859                           ;main.c: 102: StatusLED(3);
  3860  0FA4  3003               	movlw	3
  3861  0FA5                     L1:	
  3862  0FA5  3191  21EE  318E   	fcall	_StatusLED
  3863                           
  3864                           ;main.c: 103: }
  3865                           ;main.c: 108: nrf_startListening();
  3866  0FA8  3194  2469  318E   	fcall	_nrf_startListening
  3867                           
  3868                           ;main.c: 110: _delay((unsigned long)((20)*(32000000/4000.0)));
  3869  0FAB  30D0               	movlw	208
  3870  0FAC  0021               	movlb	1	; select bank1
  3871  0FAD  00B5               	movwf	(??_main^(0+128)+1)
  3872  0FAE  30C9               	movlw	201
  3873  0FAF  00B4               	movwf	??_main^(0+128)
  3874  0FB0                     u6387:	
  3875  0FB0  0BB4               	decfsz	??_main^(0+128),f
  3876  0FB1  2FB0               	goto	u6387
  3877  0FB2  0BB5               	decfsz	(??_main^(0+128)+1),f
  3878  0FB3  2FB0               	goto	u6387
  3879  0FB4  3200               	nop2
  3880  0FB5                     l5284:	
  3881                           ;main.c: 111: while ( nrf_available(nRF_pipe_reading) ) {
  3882                           
  3883  0FB5  30C1               	movlw	(low (main@nRF_pipe_reading| 0))& (0+255)
  3884  0FB6  3192  22E0  318E   	fcall	_nrf_available
  3885  0FB9  3A00               	xorlw	0
  3886  0FBA  1903               	btfsc	3,2
  3887  0FBB  2FD7               	goto	l5286
  3888                           
  3889                           ;main.c: 112: uint8_t len = nrf_getDynamicPayloadSize();
  3890  0FBC  3191  212B  318E   	fcall	_nrf_getDynamicPayloadSize
  3891  0FBF  0021               	movlb	1	; select bank1
  3892  0FC0  00B4               	movwf	??_main^(0+128)
  3893  0FC1  0834               	movf	??_main^(0+128),w
  3894  0FC2  00C6               	movwf	main@len^(0+128)
  3895                           
  3896                           ;main.c: 113: nrf_read( receivePayload, len);
  3897  0FC3  0846               	movf	main@len^(0+128),w
  3898  0FC4  00B4               	movwf	??_main^(0+128)
  3899  0FC5  0834               	movf	??_main^(0+128),w
  3900  0FC6  0020               	movlb	0	; select bank0
  3901  0FC7  00A0               	movwf	nrf_read@len
  3902  0FC8  3020               	movlw	(low (_receivePayload| (0+256)))& (0+255)
  3903  0FC9  3190  2017  318E   	fcall	_nrf_read
  3904                           
  3905                           ;main.c: 115: _delay((unsigned long)((10)*(32000000/4000.0)));
  3906  0FCC  3068               	movlw	104
  3907  0FCD  0021               	movlb	1	; select bank1
  3908  0FCE  00B5               	movwf	(??_main^(0+128)+1)
  3909  0FCF  30E4               	movlw	228
  3910  0FD0  00B4               	movwf	??_main^(0+128)
  3911  0FD1                     u6397:	
  3912  0FD1  0BB4               	decfsz	??_main^(0+128),f
  3913  0FD2  2FD1               	goto	u6397
  3914  0FD3  0BB5               	decfsz	(??_main^(0+128)+1),f
  3915  0FD4  2FD1               	goto	u6397
  3916  0FD5  0000               	nop
  3917  0FD6  2FB5               	goto	l5284
  3918  0FD7                     l5286:	
  3919                           
  3920                           ;main.c: 116: }
  3921                           ;main.c: 119: _delay((unsigned long)((1000)*(32000000/4000.0)));
  3922  0FD7  3029               	movlw	41
  3923  0FD8  0021               	movlb	1	; select bank1
  3924  0FD9  00B6               	movwf	(??_main^(0+128)+2)
  3925  0FDA  3096               	movlw	150
  3926  0FDB  00B5               	movwf	(??_main^(0+128)+1)
  3927  0FDC  30A6               	movlw	166
  3928  0FDD  00B4               	movwf	??_main^(0+128)
  3929  0FDE                     u6407:	
  3930  0FDE  0BB4               	decfsz	??_main^(0+128),f
  3931  0FDF  2FDE               	goto	u6407
  3932  0FE0  0BB5               	decfsz	(??_main^(0+128)+1),f
  3933  0FE1  2FDE               	goto	u6407
  3934  0FE2  0BB6               	decfsz	(??_main^(0+128)+2),f
  3935  0FE3  2FDE               	goto	u6407
  3936                           
  3937                           ;main.c: 120: StatusLED(1);
  3938  0FE4  3001               	movlw	1
  3939  0FE5  3191  21EE  318E   	fcall	_StatusLED
  3940                           
  3941                           ;main.c: 123: for(i=0; i<120; i++) {
  3942  0FE8  0021               	movlb	1	; select bank1
  3943  0FE9  01C7               	clrf	main@i^(0+128)
  3944  0FEA                     L2:	
  3945  0FEA  3078               	movlw	120
  3946  0FEB  0247               	subwf	main@i^(0+128),w
  3947  0FEC  1803               	btfsc	3,0
  3948  0FED  2F17               	goto	l5248
  3949                           
  3950                           ;main.c: 124: _delay((unsigned long)((1000)*(32000000/4000.0)));
  3951  0FEE  3029               	movlw	41
  3952  0FEF  00B6               	movwf	(??_main^(0+128)+2)
  3953  0FF0  3096               	movlw	150
  3954  0FF1  00B5               	movwf	(??_main^(0+128)+1)
  3955  0FF2  30A6               	movlw	166
  3956  0FF3  00B4               	movwf	??_main^(0+128)
  3957  0FF4                     u6417:	
  3958  0FF4  0BB4               	decfsz	??_main^(0+128),f
  3959  0FF5  2FF4               	goto	u6417
  3960  0FF6  0BB5               	decfsz	(??_main^(0+128)+1),f
  3961  0FF7  2FF4               	goto	u6417
  3962  0FF8  0BB6               	decfsz	(??_main^(0+128)+2),f
  3963  0FF9  2FF4               	goto	u6417
  3964  0FFA  3001               	movlw	1
  3965  0FFB  0021               	movlb	1	; select bank1
  3966  0FFC  00B4               	movwf	??_main^(0+128)
  3967  0FFD  0834               	movf	??_main^(0+128),w
  3968  0FFE  07C7               	addwf	main@i^(0+128),f
  3969  0FFF  2FEA               	goto	L2
  3970  1000                     __end_of_main:	
  3971                           
  3972                           	psect	text1
  3973  11D0                     __ptext1:	
  3974 ;; *************** function _sprintf *****************
  3975 ;; Defined at:
  3976 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  wh              1    wreg     PTR unsigned char 
  3979 ;;		 -> sendPayload(32), 
  3980 ;;  f               2   31[BANK0 ] PTR const unsigned char 
  3981 ;;		 -> STR_39(24), 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  wh              1   44[BANK0 ] PTR unsigned char 
  3984 ;;		 -> sendPayload(32), 
  3985 ;;  pb              3   46[BANK0 ] struct __prbuf
  3986 ;;  ap              1   45[BANK0 ] PTR void [1]
  3987 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  2   31[BANK0 ] int 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3997 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;Total ram usage:       18 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    2
  4004 ;; This function calls:
  4005 ;;		__doprnt
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _sprintf
  4013  11D0                     _sprintf:	
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4017                           ;sprintf@wh stored from wreg
  4018  11D0  0020               	movlb	0	; select bank0
  4019  11D1  00CC               	movwf	sprintf@wh
  4020  11D2  084C               	movf	sprintf@wh,w
  4021  11D3  00CB               	movwf	??_sprintf
  4022  11D4  084B               	movf	??_sprintf,w
  4023  11D5  00CE               	movwf	sprintf@pb
  4024  11D6  01CF               	clrf	low ((sprintf@pb| 0+1))
  4025  11D7  01D0               	clrf	(low ((sprintf@pb| 0+1))+1)
  4026  11D8  3041               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4027  11D9  00CB               	movwf	??_sprintf
  4028  11DA  084B               	movf	??_sprintf,w
  4029  11DB  00CD               	movwf	sprintf@ap
  4030  11DC  0840               	movf	sprintf@f+1,w
  4031  11DD  00A1               	movwf	__doprnt@f+1
  4032  11DE  083F               	movf	sprintf@f,w
  4033  11DF  00A0               	movwf	__doprnt@f
  4034  11E0  304D               	movlw	(low (sprintf@ap| 0))& (0+255)
  4035  11E1  00CB               	movwf	??_sprintf
  4036  11E2  084B               	movf	??_sprintf,w
  4037  11E3  00A2               	movwf	__doprnt@ap
  4038  11E4  304E               	movlw	(low (sprintf@pb| 0))& (0+255)
  4039  11E5  3181  217C         	fcall	__doprnt
  4040  11E7  0020               	movlb	0	; select bank0
  4041  11E8  084E               	movf	sprintf@pb,w
  4042  11E9  0086               	movwf	6
  4043  11EA  3001               	movlw	1	; select bank2/3
  4044  11EB  0087               	movwf	7
  4045  11EC  0181               	clrf	1
  4046  11ED  0008               	return
  4047  11EE                     __end_of_sprintf:	
  4048                           ;	Return value of _sprintf is never used
  4049                           
  4050                           
  4051                           	psect	text2
  4052  1113                     __ptext2:	
  4053 ;; *************** function _spi_init *****************
  4054 ;; Defined at:
  4055 ;;		line 10 in file "spi.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function _spi_init
  4084  1113                     _spi_init:	
  4085                           
  4086                           ;spi.c: 12: SSP1CON1bits.SSPEN = 0;
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _spi_init: [wreg+status,2+status,0]
  4090  1113  0024               	movlb	4	; select bank4
  4091  1114  1295               	bcf	21,5	;volatile
  4092                           
  4093                           ;spi.c: 15: TRISBbits.TRISB4 = 1;
  4094  1115  0021               	movlb	1	; select bank1
  4095  1116  160D               	bsf	13,4	;volatile
  4096                           
  4097                           ;spi.c: 16: ANSELBbits.ANSB4 = 0;
  4098  1117  0023               	movlb	3	; select bank3
  4099  1118  120D               	bcf	13,4	;volatile
  4100                           
  4101                           ;spi.c: 20: TRISCbits.TRISC6 = 0;
  4102  1119  0021               	movlb	1	; select bank1
  4103  111A  130E               	bcf	14,6	;volatile
  4104                           
  4105                           ;spi.c: 23: ANSELCbits.ANSC7 = 0;
  4106  111B  0023               	movlb	3	; select bank3
  4107  111C  138E               	bcf	14,7	;volatile
  4108                           
  4109                           ;spi.c: 24: TRISCbits.TRISC7 = 0;
  4110  111D  0021               	movlb	1	; select bank1
  4111  111E  138E               	bcf	14,7	;volatile
  4112                           
  4113                           ;spi.c: 28: TRISBbits.TRISB6 = 0;
  4114  111F  130D               	bcf	13,6	;volatile
  4115                           
  4116                           ;spi.c: 29: TRISBbits.TRISB6 = 0;
  4117  1120  130D               	bcf	13,6	;volatile
  4118                           
  4119                           ;spi.c: 32: SSP1CON1bits.CKP = 0;
  4120  1121  0024               	movlb	4	; select bank4
  4121  1122  1215               	bcf	21,4	;volatile
  4122                           
  4123                           ;spi.c: 33: SSP1STATbits.CKE = 1;
  4124  1123  1714               	bsf	20,6	;volatile
  4125                           
  4126                           ;spi.c: 34: SSP1STATbits.SMP = 1;
  4127  1124  1794               	bsf	20,7	;volatile
  4128                           
  4129                           ;spi.c: 36: SSP1CON1bits.SSPM = 0b0001;
  4130  1125  0815               	movf	21,w	;volatile
  4131  1126  39F0               	andlw	-16
  4132  1127  3801               	iorlw	1
  4133  1128  0095               	movwf	21	;volatile
  4134                           
  4135                           ;spi.c: 37: SSP1CON1bits.SSPEN = 1;
  4136  1129  1695               	bsf	21,5	;volatile
  4137  112A  0008               	return
  4138  112B                     __end_of_spi_init:	
  4139                           
  4140                           	psect	text3
  4141  1520                     __ptext3:	
  4142 ;; *************** function _sb_readTemperature *****************
  4143 ;; Defined at:
  4144 ;;		line 7 in file "sensorBoard.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  temp            2   78[BANK0 ] unsigned int 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;Total ram usage:        6 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    3
  4165 ;; This function calls:
  4166 ;;		___ftmul
  4167 ;;		___fttol
  4168 ;;		___lwdiv
  4169 ;;		___lwmod
  4170 ;;		_si7021_ReadTemperature
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           
  4177                           ;psect for function _sb_readTemperature
  4178  1520                     _sb_readTemperature:	
  4179                           
  4180                           ;sensorBoard.c: 9: uint16_t temp;
  4181                           ;sensorBoard.c: 10: temp = (uint16_t)(si7021_ReadTemperature()*100);
  4182                           
  4183                           ;incstack = 0
  4184                           ; Regs used in _sb_readTemperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4185  1520  318B  23C8  3195   	fcall	_si7021_ReadTemperature
  4186  1523  0020               	movlb	0	; select bank0
  4187  1524  084D               	movf	?_si7021_ReadTemperature,w
  4188  1525  00EB               	movwf	_sb_readTemperature$2070
  4189  1526  084E               	movf	?_si7021_ReadTemperature+1,w
  4190  1527  00EC               	movwf	_sb_readTemperature$2070+1
  4191  1528  084F               	movf	?_si7021_ReadTemperature+2,w
  4192  1529  00ED               	movwf	_sb_readTemperature$2070+2
  4193                           
  4194                           ;sensorBoard.c: 9: uint16_t temp;
  4195                           ;sensorBoard.c: 10: temp = (uint16_t)(si7021_ReadTemperature()*100);
  4196  152A  086B               	movf	_sb_readTemperature$2070,w
  4197  152B  00A3               	movwf	___ftmul@f2
  4198  152C  086C               	movf	_sb_readTemperature$2070+1,w
  4199  152D  00A4               	movwf	___ftmul@f2+1
  4200  152E  086D               	movf	_sb_readTemperature$2070+2,w
  4201  152F  00A5               	movwf	___ftmul@f2+2
  4202  1530  3000               	movlw	0
  4203  1531  00A0               	movwf	___ftmul@f1
  4204  1532  30C8               	movlw	200
  4205  1533  00A1               	movwf	___ftmul@f1+1
  4206  1534  3042               	movlw	66
  4207  1535  00A2               	movwf	___ftmul@f1+2
  4208  1536  318D  2577  3195   	fcall	___ftmul
  4209  1539  0020               	movlb	0	; select bank0
  4210  153A  0820               	movf	?___ftmul,w
  4211  153B  00DC               	movwf	___fttol@f1
  4212  153C  0821               	movf	?___ftmul+1,w
  4213  153D  00DD               	movwf	___fttol@f1+1
  4214  153E  0822               	movf	?___ftmul+2,w
  4215  153F  00DE               	movwf	___fttol@f1+2
  4216  1540  318C  2447  3195   	fcall	___fttol
  4217  1543  0020               	movlb	0	; select bank0
  4218  1544  085D               	movf	?___fttol+1,w
  4219  1545  00EF               	movwf	sb_readTemperature@temp+1
  4220  1546  085C               	movf	?___fttol,w
  4221  1547  00EE               	movwf	sb_readTemperature@temp
  4222                           
  4223                           ;sensorBoard.c: 13: si7021_tempNum = temp /100;
  4224  1548  3064               	movlw	100
  4225  1549  00F0               	movwf	___lwdiv@divisor
  4226  154A  3000               	movlw	0
  4227  154B  00F1               	movwf	___lwdiv@divisor+1
  4228  154C  086F               	movf	sb_readTemperature@temp+1,w
  4229  154D  00F3               	movwf	___lwdiv@dividend+1
  4230  154E  086E               	movf	sb_readTemperature@temp,w
  4231  154F  00F2               	movwf	___lwdiv@dividend
  4232  1550  3194  2435  3195   	fcall	___lwdiv
  4233  1553  0870               	movf	?___lwdiv,w
  4234  1554  0020               	movlb	0	; select bank0
  4235  1555  00EA               	movwf	??_sb_readTemperature
  4236  1556  086A               	movf	??_sb_readTemperature,w
  4237  1557  0021               	movlb	1	; select bank1
  4238  1558  00AC               	movwf	_si7021_tempNum^(0+128)
  4239                           
  4240                           ;sensorBoard.c: 14: si7021_tempDec = temp % 100;
  4241  1559  3064               	movlw	100
  4242  155A  00F8               	movwf	___lwmod@divisor
  4243  155B  3000               	movlw	0
  4244  155C  00F9               	movwf	___lwmod@divisor+1
  4245  155D  0020               	movlb	0	; select bank0
  4246  155E  086F               	movf	sb_readTemperature@temp+1,w
  4247  155F  00FB               	movwf	___lwmod@dividend+1
  4248  1560  086E               	movf	sb_readTemperature@temp,w
  4249  1561  00FA               	movwf	___lwmod@dividend
  4250  1562  3192  22B4         	fcall	___lwmod
  4251  1564  0878               	movf	?___lwmod,w
  4252  1565  0020               	movlb	0	; select bank0
  4253  1566  00EA               	movwf	??_sb_readTemperature
  4254  1567  086A               	movf	??_sb_readTemperature,w
  4255  1568  0021               	movlb	1	; select bank1
  4256  1569  00AB               	movwf	_si7021_tempDec^(0+128)
  4257  156A  0008               	return
  4258  156B                     __end_of_sb_readTemperature:	
  4259                           
  4260                           	psect	text4
  4261  0BC8                     __ptext4:	
  4262 ;; *************** function _si7021_ReadTemperature *****************
  4263 ;; Defined at:
  4264 ;;		line 23 in file "si7021.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  result          3   53[BANK0 ] void 
  4269 ;;  readData        2   58[BANK0 ] unsigned char [2]
  4270 ;;  rawTemp         2   56[BANK0 ] unsigned int 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  3   45[BANK0 ] unsigned int 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4280 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;Total ram usage:       15 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    2
  4287 ;; This function calls:
  4288 ;;		_I2C1_ReadFrame
  4289 ;;		_I2C1_WriteByte
  4290 ;;		___ftadd
  4291 ;;		___ftdiv
  4292 ;;		___ftmul
  4293 ;;		___lwtoft
  4294 ;; This function is called by:
  4295 ;;		_sb_readTemperature
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _si7021_ReadTemperature
  4301  0BC8                     _si7021_ReadTemperature:	
  4302                           
  4303                           ;si7021.c: 25: uint8_t readData[2] = {0, 0};
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in _si7021_ReadTemperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4307  0BC8  0021               	movlb	1	; select bank1
  4308  0BC9  0823               	movf	(si7021_ReadTemperature@F3477+1)^(0+128),w
  4309  0BCA  0020               	movlb	0	; select bank0
  4310  0BCB  00DB               	movwf	si7021_ReadTemperature@readData+1
  4311  0BCC  0021               	movlb	1	; select bank1
  4312  0BCD  0822               	movf	si7021_ReadTemperature@F3477^(0+128),w
  4313  0BCE  0020               	movlb	0	; select bank0
  4314  0BCF  00DA               	movwf	si7021_ReadTemperature@readData
  4315                           
  4316                           ;si7021.c: 28: I2C1_WriteByte(0x80, 0xF3);
  4317  0BD0  30F3               	movlw	243
  4318  0BD1  00D0               	movwf	??_si7021_ReadTemperature
  4319  0BD2  0850               	movf	??_si7021_ReadTemperature,w
  4320  0BD3  00F0               	movwf	I2C1_WriteByte@i2c1Data
  4321  0BD4  3080               	movlw	128
  4322  0BD5  3193  239C  318B   	fcall	_I2C1_WriteByte
  4323                           
  4324                           ;si7021.c: 30: _delay((unsigned long)((60)*(32000000/4000.0)));
  4325  0BD8  3003               	movlw	3
  4326  0BD9  0020               	movlb	0	; select bank0
  4327  0BDA  00D2               	movwf	??_si7021_ReadTemperature+2
  4328  0BDB  3070               	movlw	112
  4329  0BDC  00D1               	movwf	??_si7021_ReadTemperature+1
  4330  0BDD  305D               	movlw	93
  4331  0BDE  00D0               	movwf	??_si7021_ReadTemperature
  4332  0BDF                     u6427:	
  4333  0BDF  0BD0               	decfsz	??_si7021_ReadTemperature,f
  4334  0BE0  2BDF               	goto	u6427
  4335  0BE1  0BD1               	decfsz	??_si7021_ReadTemperature+1,f
  4336  0BE2  2BDF               	goto	u6427
  4337  0BE3  0BD2               	decfsz	??_si7021_ReadTemperature+2,f
  4338  0BE4  2BDF               	goto	u6427
  4339  0BE5  0000               	nop
  4340                           
  4341                           ;si7021.c: 31: I2C1_ReadFrame(0x80, readData, 3);
  4342  0BE6  305A               	movlw	(low (si7021_ReadTemperature@readData| 0))& (0+255)
  4343  0BE7  0020               	movlb	0	; select bank0
  4344  0BE8  00D0               	movwf	??_si7021_ReadTemperature
  4345  0BE9  0850               	movf	??_si7021_ReadTemperature,w
  4346  0BEA  00F0               	movwf	I2C1_ReadFrame@i2c1ReadPointer
  4347  0BEB  3003               	movlw	3
  4348  0BEC  00D1               	movwf	??_si7021_ReadTemperature+1
  4349  0BED  0851               	movf	??_si7021_ReadTemperature+1,w
  4350  0BEE  00F1               	movwf	I2C1_ReadFrame@i2c1FrameLength
  4351  0BEF  3080               	movlw	128
  4352  0BF0  318A  22FA  318B   	fcall	_I2C1_ReadFrame
  4353                           
  4354                           ;si7021.c: 35: uint16_t rawTemp = (readData[0] << 8) | readData[1];
  4355  0BF3  0020               	movlb	0	; select bank0
  4356  0BF4  085B               	movf	si7021_ReadTemperature@readData+1,w
  4357  0BF5  00D0               	movwf	??_si7021_ReadTemperature
  4358  0BF6  01D1               	clrf	??_si7021_ReadTemperature+1
  4359  0BF7  085A               	movf	si7021_ReadTemperature@readData,w
  4360  0BF8  00D2               	movwf	??_si7021_ReadTemperature+2
  4361  0BF9  01D3               	clrf	??_si7021_ReadTemperature+3
  4362  0BFA  0852               	movf	??_si7021_ReadTemperature+2,w
  4363  0BFB  00D3               	movwf	??_si7021_ReadTemperature+3
  4364  0BFC  01D2               	clrf	??_si7021_ReadTemperature+2
  4365  0BFD  0850               	movf	??_si7021_ReadTemperature,w
  4366  0BFE  0452               	iorwf	??_si7021_ReadTemperature+2,w
  4367  0BFF  00D8               	movwf	si7021_ReadTemperature@rawTemp
  4368  0C00  0851               	movf	??_si7021_ReadTemperature+1,w
  4369  0C01  0453               	iorwf	??_si7021_ReadTemperature+3,w
  4370  0C02  00D9               	movwf	si7021_ReadTemperature@rawTemp+1
  4371                           
  4372                           ;si7021.c: 37: double result = (175.25*rawTemp/65536)-46.85;
  4373  0C03  3066               	movlw	102
  4374  0C04  00C0               	movwf	___ftadd@f1
  4375  0C05  303B               	movlw	59
  4376  0C06  00C1               	movwf	___ftadd@f1+1
  4377  0C07  30C2               	movlw	194
  4378  0C08  00C2               	movwf	___ftadd@f1+2
  4379  0C09  3000               	movlw	0
  4380  0C0A  00B0               	movwf	___ftdiv@f2
  4381  0C0B  3080               	movlw	128
  4382  0C0C  00B1               	movwf	___ftdiv@f2+1
  4383  0C0D  3047               	movlw	71
  4384  0C0E  00B2               	movwf	___ftdiv@f2+2
  4385  0C0F  3040               	movlw	64
  4386  0C10  00A0               	movwf	___ftmul@f1
  4387  0C11  302F               	movlw	47
  4388  0C12  00A1               	movwf	___ftmul@f1+1
  4389  0C13  3043               	movlw	67
  4390  0C14  00A2               	movwf	___ftmul@f1+2
  4391  0C15  0859               	movf	si7021_ReadTemperature@rawTemp+1,w
  4392  0C16  00F9               	movwf	___lwtoft@c+1
  4393  0C17  0858               	movf	si7021_ReadTemperature@rawTemp,w
  4394  0C18  00F8               	movwf	___lwtoft@c
  4395  0C19  3190  2055  318B   	fcall	___lwtoft
  4396  0C1C  0878               	movf	?___lwtoft,w
  4397  0C1D  0020               	movlb	0	; select bank0
  4398  0C1E  00A3               	movwf	___ftmul@f2
  4399  0C1F  0879               	movf	?___lwtoft+1,w
  4400  0C20  00A4               	movwf	___ftmul@f2+1
  4401  0C21  087A               	movf	?___lwtoft+2,w
  4402  0C22  00A5               	movwf	___ftmul@f2+2
  4403  0C23  318D  2577  318B   	fcall	___ftmul
  4404  0C26  0020               	movlb	0	; select bank0
  4405  0C27  0820               	movf	?___ftmul,w
  4406  0C28  00B3               	movwf	___ftdiv@f1
  4407  0C29  0821               	movf	?___ftmul+1,w
  4408  0C2A  00B4               	movwf	___ftdiv@f1+1
  4409  0C2B  0822               	movf	?___ftmul+2,w
  4410  0C2C  00B5               	movwf	___ftdiv@f1+2
  4411  0C2D  318C  24CE  318B   	fcall	___ftdiv
  4412  0C30  0020               	movlb	0	; select bank0
  4413  0C31  0830               	movf	?___ftdiv,w
  4414  0C32  00C3               	movwf	___ftadd@f2
  4415  0C33  0831               	movf	?___ftdiv+1,w
  4416  0C34  00C4               	movwf	___ftadd@f2+1
  4417  0C35  0832               	movf	?___ftdiv+2,w
  4418  0C36  00C5               	movwf	___ftadd@f2+2
  4419  0C37  3180  2086         	fcall	___ftadd
  4420  0C39  0020               	movlb	0	; select bank0
  4421  0C3A  0840               	movf	?___ftadd,w
  4422  0C3B  00D5               	movwf	si7021_ReadTemperature@result
  4423  0C3C  0841               	movf	?___ftadd+1,w
  4424  0C3D  00D6               	movwf	si7021_ReadTemperature@result+1
  4425  0C3E  0842               	movf	?___ftadd+2,w
  4426  0C3F  00D7               	movwf	si7021_ReadTemperature@result+2
  4427                           
  4428                           ;si7021.c: 39: return result;
  4429  0C40  0855               	movf	si7021_ReadTemperature@result,w
  4430  0C41  00CD               	movwf	?_si7021_ReadTemperature
  4431  0C42  0856               	movf	si7021_ReadTemperature@result+1,w
  4432  0C43  00CE               	movwf	?_si7021_ReadTemperature+1
  4433  0C44  0857               	movf	si7021_ReadTemperature@result+2,w
  4434  0C45  00CF               	movwf	?_si7021_ReadTemperature+2
  4435  0C46  0008               	return
  4436  0C47                     __end_of_si7021_ReadTemperature:	
  4437                           
  4438                           	psect	text5
  4439  14D5                     __ptext5:	
  4440 ;; *************** function _sb_readHumidity *****************
  4441 ;; Defined at:
  4442 ;;		line 18 in file "sensorBoard.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  humid           2   78[BANK0 ] unsigned int 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;Total ram usage:        6 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    3
  4463 ;; This function calls:
  4464 ;;		___ftmul
  4465 ;;		___fttol
  4466 ;;		___lwdiv
  4467 ;;		___lwmod
  4468 ;;		_si7021_ReadHumidity
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _sb_readHumidity
  4476  14D5                     _sb_readHumidity:	
  4477                           
  4478                           ;sensorBoard.c: 20: uint16_t humid;
  4479                           ;sensorBoard.c: 21: humid = (uint16_t)(si7021_ReadHumidity()*100);
  4480                           
  4481                           ;incstack = 0
  4482                           ; Regs used in _sb_readHumidity: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4483  14D5  318B  2349  3194   	fcall	_si7021_ReadHumidity
  4484  14D8  0020               	movlb	0	; select bank0
  4485  14D9  084D               	movf	?_si7021_ReadHumidity,w
  4486  14DA  00EB               	movwf	_sb_readHumidity$2071
  4487  14DB  084E               	movf	?_si7021_ReadHumidity+1,w
  4488  14DC  00EC               	movwf	_sb_readHumidity$2071+1
  4489  14DD  084F               	movf	?_si7021_ReadHumidity+2,w
  4490  14DE  00ED               	movwf	_sb_readHumidity$2071+2
  4491                           
  4492                           ;sensorBoard.c: 20: uint16_t humid;
  4493                           ;sensorBoard.c: 21: humid = (uint16_t)(si7021_ReadHumidity()*100);
  4494  14DF  086B               	movf	_sb_readHumidity$2071,w
  4495  14E0  00A3               	movwf	___ftmul@f2
  4496  14E1  086C               	movf	_sb_readHumidity$2071+1,w
  4497  14E2  00A4               	movwf	___ftmul@f2+1
  4498  14E3  086D               	movf	_sb_readHumidity$2071+2,w
  4499  14E4  00A5               	movwf	___ftmul@f2+2
  4500  14E5  3000               	movlw	0
  4501  14E6  00A0               	movwf	___ftmul@f1
  4502  14E7  30C8               	movlw	200
  4503  14E8  00A1               	movwf	___ftmul@f1+1
  4504  14E9  3042               	movlw	66
  4505  14EA  00A2               	movwf	___ftmul@f1+2
  4506  14EB  318D  2577  3194   	fcall	___ftmul
  4507  14EE  0020               	movlb	0	; select bank0
  4508  14EF  0820               	movf	?___ftmul,w
  4509  14F0  00DC               	movwf	___fttol@f1
  4510  14F1  0821               	movf	?___ftmul+1,w
  4511  14F2  00DD               	movwf	___fttol@f1+1
  4512  14F3  0822               	movf	?___ftmul+2,w
  4513  14F4  00DE               	movwf	___fttol@f1+2
  4514  14F5  318C  2447  3194   	fcall	___fttol
  4515  14F8  0020               	movlb	0	; select bank0
  4516  14F9  085D               	movf	?___fttol+1,w
  4517  14FA  00EF               	movwf	sb_readHumidity@humid+1
  4518  14FB  085C               	movf	?___fttol,w
  4519  14FC  00EE               	movwf	sb_readHumidity@humid
  4520                           
  4521                           ;sensorBoard.c: 23: si7021_humidNum = humid / 100;
  4522  14FD  3064               	movlw	100
  4523  14FE  00F0               	movwf	___lwdiv@divisor
  4524  14FF  3000               	movlw	0
  4525  1500  00F1               	movwf	___lwdiv@divisor+1
  4526  1501  086F               	movf	sb_readHumidity@humid+1,w
  4527  1502  00F3               	movwf	___lwdiv@dividend+1
  4528  1503  086E               	movf	sb_readHumidity@humid,w
  4529  1504  00F2               	movwf	___lwdiv@dividend
  4530  1505  3194  2435  3194   	fcall	___lwdiv
  4531  1508  0870               	movf	?___lwdiv,w
  4532  1509  0020               	movlb	0	; select bank0
  4533  150A  00EA               	movwf	??_sb_readHumidity
  4534  150B  086A               	movf	??_sb_readHumidity,w
  4535  150C  0021               	movlb	1	; select bank1
  4536  150D  00AA               	movwf	_si7021_humidNum^(0+128)
  4537                           
  4538                           ;sensorBoard.c: 24: si7021_humidDec = humid % 100;
  4539  150E  3064               	movlw	100
  4540  150F  00F8               	movwf	___lwmod@divisor
  4541  1510  3000               	movlw	0
  4542  1511  00F9               	movwf	___lwmod@divisor+1
  4543  1512  0020               	movlb	0	; select bank0
  4544  1513  086F               	movf	sb_readHumidity@humid+1,w
  4545  1514  00FB               	movwf	___lwmod@dividend+1
  4546  1515  086E               	movf	sb_readHumidity@humid,w
  4547  1516  00FA               	movwf	___lwmod@dividend
  4548  1517  3192  22B4         	fcall	___lwmod
  4549  1519  0878               	movf	?___lwmod,w
  4550  151A  0020               	movlb	0	; select bank0
  4551  151B  00EA               	movwf	??_sb_readHumidity
  4552  151C  086A               	movf	??_sb_readHumidity,w
  4553  151D  0021               	movlb	1	; select bank1
  4554  151E  00A9               	movwf	_si7021_humidDec^(0+128)
  4555  151F  0008               	return
  4556  1520                     __end_of_sb_readHumidity:	
  4557                           
  4558                           	psect	text6
  4559  0B49                     __ptext6:	
  4560 ;; *************** function _si7021_ReadHumidity *****************
  4561 ;; Defined at:
  4562 ;;		line 3 in file "si7021.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  result          3   53[BANK0 ] void 
  4567 ;;  readData        2   58[BANK0 ] unsigned char [2]
  4568 ;;  rawHumidity     2   56[BANK0 ] unsigned int 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  3   45[BANK0 ] unsigned int 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;Total ram usage:       15 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    2
  4585 ;; This function calls:
  4586 ;;		_I2C1_ReadFrame
  4587 ;;		_I2C1_WriteByte
  4588 ;;		___ftadd
  4589 ;;		___ftdiv
  4590 ;;		___ftmul
  4591 ;;		___lwtoft
  4592 ;; This function is called by:
  4593 ;;		_sb_readHumidity
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _si7021_ReadHumidity
  4599  0B49                     _si7021_ReadHumidity:	
  4600                           
  4601                           ;si7021.c: 5: uint8_t readData[2] = {0, 0};
  4602                           
  4603                           ;incstack = 0
  4604                           ; Regs used in _si7021_ReadHumidity: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4605  0B49  0021               	movlb	1	; select bank1
  4606  0B4A  0821               	movf	(si7021_ReadHumidity@F3471+1)^(0+128),w
  4607  0B4B  0020               	movlb	0	; select bank0
  4608  0B4C  00DB               	movwf	si7021_ReadHumidity@readData+1
  4609  0B4D  0021               	movlb	1	; select bank1
  4610  0B4E  0820               	movf	si7021_ReadHumidity@F3471^(0+128),w
  4611  0B4F  0020               	movlb	0	; select bank0
  4612  0B50  00DA               	movwf	si7021_ReadHumidity@readData
  4613                           
  4614                           ;si7021.c: 8: I2C1_WriteByte(0x80, 0xF5);
  4615  0B51  30F5               	movlw	245
  4616  0B52  00D0               	movwf	??_si7021_ReadHumidity
  4617  0B53  0850               	movf	??_si7021_ReadHumidity,w
  4618  0B54  00F0               	movwf	I2C1_WriteByte@i2c1Data
  4619  0B55  3080               	movlw	128
  4620  0B56  3193  239C  318B   	fcall	_I2C1_WriteByte
  4621                           
  4622                           ;si7021.c: 10: _delay((unsigned long)((60)*(32000000/4000.0)));
  4623  0B59  3003               	movlw	3
  4624  0B5A  0020               	movlb	0	; select bank0
  4625  0B5B  00D2               	movwf	??_si7021_ReadHumidity+2
  4626  0B5C  3070               	movlw	112
  4627  0B5D  00D1               	movwf	??_si7021_ReadHumidity+1
  4628  0B5E  305D               	movlw	93
  4629  0B5F  00D0               	movwf	??_si7021_ReadHumidity
  4630  0B60                     u6437:	
  4631  0B60  0BD0               	decfsz	??_si7021_ReadHumidity,f
  4632  0B61  2B60               	goto	u6437
  4633  0B62  0BD1               	decfsz	??_si7021_ReadHumidity+1,f
  4634  0B63  2B60               	goto	u6437
  4635  0B64  0BD2               	decfsz	??_si7021_ReadHumidity+2,f
  4636  0B65  2B60               	goto	u6437
  4637  0B66  0000               	nop
  4638                           
  4639                           ;si7021.c: 11: I2C1_ReadFrame(0x80, readData, 3);
  4640  0B67  305A               	movlw	(low (si7021_ReadHumidity@readData| 0))& (0+255)
  4641  0B68  0020               	movlb	0	; select bank0
  4642  0B69  00D0               	movwf	??_si7021_ReadHumidity
  4643  0B6A  0850               	movf	??_si7021_ReadHumidity,w
  4644  0B6B  00F0               	movwf	I2C1_ReadFrame@i2c1ReadPointer
  4645  0B6C  3003               	movlw	3
  4646  0B6D  00D1               	movwf	??_si7021_ReadHumidity+1
  4647  0B6E  0851               	movf	??_si7021_ReadHumidity+1,w
  4648  0B6F  00F1               	movwf	I2C1_ReadFrame@i2c1FrameLength
  4649  0B70  3080               	movlw	128
  4650  0B71  318A  22FA  318B   	fcall	_I2C1_ReadFrame
  4651                           
  4652                           ;si7021.c: 15: uint16_t rawHumidity = (readData[0] << 8) | readData[1];
  4653  0B74  0020               	movlb	0	; select bank0
  4654  0B75  085B               	movf	si7021_ReadHumidity@readData+1,w
  4655  0B76  00D0               	movwf	??_si7021_ReadHumidity
  4656  0B77  01D1               	clrf	??_si7021_ReadHumidity+1
  4657  0B78  085A               	movf	si7021_ReadHumidity@readData,w
  4658  0B79  00D2               	movwf	??_si7021_ReadHumidity+2
  4659  0B7A  01D3               	clrf	??_si7021_ReadHumidity+3
  4660  0B7B  0852               	movf	??_si7021_ReadHumidity+2,w
  4661  0B7C  00D3               	movwf	??_si7021_ReadHumidity+3
  4662  0B7D  01D2               	clrf	??_si7021_ReadHumidity+2
  4663  0B7E  0850               	movf	??_si7021_ReadHumidity,w
  4664  0B7F  0452               	iorwf	??_si7021_ReadHumidity+2,w
  4665  0B80  00D8               	movwf	si7021_ReadHumidity@rawHumidity
  4666  0B81  0851               	movf	??_si7021_ReadHumidity+1,w
  4667  0B82  0453               	iorwf	??_si7021_ReadHumidity+3,w
  4668  0B83  00D9               	movwf	si7021_ReadHumidity@rawHumidity+1
  4669                           
  4670                           ;si7021.c: 17: double result =(((125 * (float) (rawHumidity)) / 65536) - 6);
  4671  0B84  3000               	movlw	0
  4672  0B85  00C0               	movwf	___ftadd@f1
  4673  0B86  30C0               	movlw	192
  4674  0B87  00C1               	movwf	___ftadd@f1+1
  4675  0B88  30C0               	movlw	192
  4676  0B89  00C2               	movwf	___ftadd@f1+2
  4677  0B8A  3000               	movlw	0
  4678  0B8B  00B0               	movwf	___ftdiv@f2
  4679  0B8C  3080               	movlw	128
  4680  0B8D  00B1               	movwf	___ftdiv@f2+1
  4681  0B8E  3047               	movlw	71
  4682  0B8F  00B2               	movwf	___ftdiv@f2+2
  4683  0B90  3000               	movlw	0
  4684  0B91  00A0               	movwf	___ftmul@f1
  4685  0B92  30FA               	movlw	250
  4686  0B93  00A1               	movwf	___ftmul@f1+1
  4687  0B94  3042               	movlw	66
  4688  0B95  00A2               	movwf	___ftmul@f1+2
  4689  0B96  0859               	movf	si7021_ReadHumidity@rawHumidity+1,w
  4690  0B97  00F9               	movwf	___lwtoft@c+1
  4691  0B98  0858               	movf	si7021_ReadHumidity@rawHumidity,w
  4692  0B99  00F8               	movwf	___lwtoft@c
  4693  0B9A  3190  2055  318B   	fcall	___lwtoft
  4694  0B9D  0878               	movf	?___lwtoft,w
  4695  0B9E  0020               	movlb	0	; select bank0
  4696  0B9F  00A3               	movwf	___ftmul@f2
  4697  0BA0  0879               	movf	?___lwtoft+1,w
  4698  0BA1  00A4               	movwf	___ftmul@f2+1
  4699  0BA2  087A               	movf	?___lwtoft+2,w
  4700  0BA3  00A5               	movwf	___ftmul@f2+2
  4701  0BA4  318D  2577  318B   	fcall	___ftmul
  4702  0BA7  0020               	movlb	0	; select bank0
  4703  0BA8  0820               	movf	?___ftmul,w
  4704  0BA9  00B3               	movwf	___ftdiv@f1
  4705  0BAA  0821               	movf	?___ftmul+1,w
  4706  0BAB  00B4               	movwf	___ftdiv@f1+1
  4707  0BAC  0822               	movf	?___ftmul+2,w
  4708  0BAD  00B5               	movwf	___ftdiv@f1+2
  4709  0BAE  318C  24CE  318B   	fcall	___ftdiv
  4710  0BB1  0020               	movlb	0	; select bank0
  4711  0BB2  0830               	movf	?___ftdiv,w
  4712  0BB3  00C3               	movwf	___ftadd@f2
  4713  0BB4  0831               	movf	?___ftdiv+1,w
  4714  0BB5  00C4               	movwf	___ftadd@f2+1
  4715  0BB6  0832               	movf	?___ftdiv+2,w
  4716  0BB7  00C5               	movwf	___ftadd@f2+2
  4717  0BB8  3180  2086         	fcall	___ftadd
  4718  0BBA  0020               	movlb	0	; select bank0
  4719  0BBB  0840               	movf	?___ftadd,w
  4720  0BBC  00D5               	movwf	si7021_ReadHumidity@result
  4721  0BBD  0841               	movf	?___ftadd+1,w
  4722  0BBE  00D6               	movwf	si7021_ReadHumidity@result+1
  4723  0BBF  0842               	movf	?___ftadd+2,w
  4724  0BC0  00D7               	movwf	si7021_ReadHumidity@result+2
  4725                           
  4726                           ;si7021.c: 19: return result;
  4727  0BC1  0855               	movf	si7021_ReadHumidity@result,w
  4728  0BC2  00CD               	movwf	?_si7021_ReadHumidity
  4729  0BC3  0856               	movf	si7021_ReadHumidity@result+1,w
  4730  0BC4  00CE               	movwf	?_si7021_ReadHumidity+1
  4731  0BC5  0857               	movf	si7021_ReadHumidity@result+2,w
  4732  0BC6  00CF               	movwf	?_si7021_ReadHumidity+2
  4733  0BC7  0008               	return
  4734  0BC8                     __end_of_si7021_ReadHumidity:	
  4735                           
  4736                           	psect	text7
  4737  1055                     __ptext7:	
  4738 ;; *************** function ___lwtoft *****************
  4739 ;; Defined at:
  4740 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  c               2    8[COMMON] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  3    8[COMMON] float 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0, pclath, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        4 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    1
  4761 ;; This function calls:
  4762 ;;		___ftpack
  4763 ;; This function is called by:
  4764 ;;		_si7021_ReadHumidity
  4765 ;;		_si7021_ReadTemperature
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function ___lwtoft
  4771  1055                     ___lwtoft:	
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4775  1055  0878               	movf	___lwtoft@c,w
  4776  1056  00F0               	movwf	___ftpack@arg
  4777  1057  0879               	movf	___lwtoft@c+1,w
  4778  1058  00F1               	movwf	___ftpack@arg+1
  4779  1059  01F2               	clrf	___ftpack@arg+2
  4780  105A  308E               	movlw	142
  4781  105B  00FB               	movwf	??___lwtoft
  4782  105C  087B               	movf	??___lwtoft,w
  4783  105D  00F3               	movwf	___ftpack@exp
  4784  105E  01F4               	clrf	___ftpack@sign
  4785  105F  3197  272F         	fcall	___ftpack
  4786  1061  0870               	movf	?___ftpack,w
  4787  1062  00F8               	movwf	?___lwtoft
  4788  1063  0871               	movf	?___ftpack+1,w
  4789  1064  00F9               	movwf	?___lwtoft+1
  4790  1065  0872               	movf	?___ftpack+2,w
  4791  1066  00FA               	movwf	?___lwtoft+2
  4792  1067  0008               	return
  4793  1068                     __end_of___lwtoft:	
  4794                           
  4795                           	psect	text8
  4796  0D77                     __ptext8:	
  4797 ;; *************** function ___ftmul *****************
  4798 ;; Defined at:
  4799 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  f1              3    0[BANK0 ] float 
  4802 ;;  f2              3    3[BANK0 ] float 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  4805 ;;  sign            1   15[BANK0 ] unsigned char 
  4806 ;;  cntr            1   14[BANK0 ] unsigned char 
  4807 ;;  exp             1   10[BANK0 ] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  3    0[BANK0 ] float 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4817 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;Total ram usage:       16 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    1
  4824 ;; This function calls:
  4825 ;;		___ftpack
  4826 ;; This function is called by:
  4827 ;;		_si7021_ReadHumidity
  4828 ;;		_si7021_ReadTemperature
  4829 ;;		_sb_readTemperature
  4830 ;;		_sb_readHumidity
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function ___ftmul
  4836  0D77                     ___ftmul:	
  4837                           
  4838                           ;incstack = 0
  4839                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4840  0D77  0020               	movlb	0	; select bank0
  4841  0D78  0820               	movf	___ftmul@f1,w
  4842  0D79  00A6               	movwf	??___ftmul
  4843  0D7A  0821               	movf	___ftmul@f1+1,w
  4844  0D7B  00A7               	movwf	??___ftmul+1
  4845  0D7C  0822               	movf	___ftmul@f1+2,w
  4846  0D7D  00A8               	movwf	??___ftmul+2
  4847  0D7E  1003               	clrc
  4848  0D7F  0D27               	rlf	??___ftmul+1,w
  4849  0D80  0D28               	rlf	??___ftmul+2,w
  4850  0D81  00A9               	movwf	??___ftmul+3
  4851  0D82  0829               	movf	??___ftmul+3,w
  4852  0D83  00AA               	movwf	___ftmul@exp
  4853  0D84  082A               	movf	___ftmul@exp,w
  4854  0D85  1D03               	btfss	3,2
  4855  0D86  2D8E               	goto	l3918
  4856  0D87  3000               	movlw	0
  4857  0D88  00A0               	movwf	?___ftmul
  4858  0D89  3000               	movlw	0
  4859  0D8A  00A1               	movwf	?___ftmul+1
  4860  0D8B  3000               	movlw	0
  4861  0D8C  00A2               	movwf	?___ftmul+2
  4862  0D8D  0008               	return
  4863  0D8E                     l3918:	
  4864  0D8E  0823               	movf	___ftmul@f2,w
  4865  0D8F  00A6               	movwf	??___ftmul
  4866  0D90  0824               	movf	___ftmul@f2+1,w
  4867  0D91  00A7               	movwf	??___ftmul+1
  4868  0D92  0825               	movf	___ftmul@f2+2,w
  4869  0D93  00A8               	movwf	??___ftmul+2
  4870  0D94  1003               	clrc
  4871  0D95  0D27               	rlf	??___ftmul+1,w
  4872  0D96  0D28               	rlf	??___ftmul+2,w
  4873  0D97  00A9               	movwf	??___ftmul+3
  4874  0D98  0829               	movf	??___ftmul+3,w
  4875  0D99  00AF               	movwf	___ftmul@sign
  4876  0D9A  082F               	movf	___ftmul@sign,w
  4877  0D9B  1D03               	btfss	3,2
  4878  0D9C  2DA4               	goto	l3924
  4879  0D9D  3000               	movlw	0
  4880  0D9E  00A0               	movwf	?___ftmul
  4881  0D9F  3000               	movlw	0
  4882  0DA0  00A1               	movwf	?___ftmul+1
  4883  0DA1  3000               	movlw	0
  4884  0DA2  00A2               	movwf	?___ftmul+2
  4885  0DA3  0008               	return
  4886  0DA4                     l3924:	
  4887  0DA4  082F               	movf	___ftmul@sign,w
  4888  0DA5  3E7B               	addlw	123
  4889  0DA6  00A6               	movwf	??___ftmul
  4890  0DA7  0826               	movf	??___ftmul,w
  4891  0DA8  07AA               	addwf	___ftmul@exp,f
  4892  0DA9  0820               	movf	___ftmul@f1,w
  4893  0DAA  00A6               	movwf	??___ftmul
  4894  0DAB  0821               	movf	___ftmul@f1+1,w
  4895  0DAC  00A7               	movwf	??___ftmul+1
  4896  0DAD  0822               	movf	___ftmul@f1+2,w
  4897  0DAE  00A8               	movwf	??___ftmul+2
  4898  0DAF  3010               	movlw	16
  4899  0DB0                     u4275:	
  4900  0DB0  36A8               	lsrf	??___ftmul+2,f
  4901  0DB1  0CA7               	rrf	??___ftmul+1,f
  4902  0DB2  0CA6               	rrf	??___ftmul,f
  4903  0DB3  0B89               	decfsz	9,f
  4904  0DB4  2DB0               	goto	u4275
  4905  0DB5  0826               	movf	??___ftmul,w
  4906  0DB6  00A9               	movwf	??___ftmul+3
  4907  0DB7  0829               	movf	??___ftmul+3,w
  4908  0DB8  00AF               	movwf	___ftmul@sign
  4909  0DB9  0823               	movf	___ftmul@f2,w
  4910  0DBA  00A6               	movwf	??___ftmul
  4911  0DBB  0824               	movf	___ftmul@f2+1,w
  4912  0DBC  00A7               	movwf	??___ftmul+1
  4913  0DBD  0825               	movf	___ftmul@f2+2,w
  4914  0DBE  00A8               	movwf	??___ftmul+2
  4915  0DBF  3010               	movlw	16
  4916  0DC0                     u4285:	
  4917  0DC0  36A8               	lsrf	??___ftmul+2,f
  4918  0DC1  0CA7               	rrf	??___ftmul+1,f
  4919  0DC2  0CA6               	rrf	??___ftmul,f
  4920  0DC3  0B89               	decfsz	9,f
  4921  0DC4  2DC0               	goto	u4285
  4922  0DC5  0826               	movf	??___ftmul,w
  4923  0DC6  00A9               	movwf	??___ftmul+3
  4924  0DC7  0829               	movf	??___ftmul+3,w
  4925  0DC8  06AF               	xorwf	___ftmul@sign,f
  4926  0DC9  3080               	movlw	128
  4927  0DCA  00A6               	movwf	??___ftmul
  4928  0DCB  0826               	movf	??___ftmul,w
  4929  0DCC  05AF               	andwf	___ftmul@sign,f
  4930  0DCD  17A1               	bsf	___ftmul@f1+1,7
  4931  0DCE  17A4               	bsf	___ftmul@f2+1,7
  4932  0DCF  30FF               	movlw	255
  4933  0DD0  05A3               	andwf	___ftmul@f2,f
  4934  0DD1  30FF               	movlw	255
  4935  0DD2  05A4               	andwf	___ftmul@f2+1,f
  4936  0DD3  3000               	movlw	0
  4937  0DD4  05A5               	andwf	___ftmul@f2+2,f
  4938  0DD5  3000               	movlw	0
  4939  0DD6  00AB               	movwf	___ftmul@f3_as_product
  4940  0DD7  3000               	movlw	0
  4941  0DD8  00AC               	movwf	___ftmul@f3_as_product+1
  4942  0DD9  3000               	movlw	0
  4943  0DDA  00AD               	movwf	___ftmul@f3_as_product+2
  4944  0DDB  3007               	movlw	7
  4945  0DDC  00A6               	movwf	??___ftmul
  4946  0DDD  0826               	movf	??___ftmul,w
  4947  0DDE  00AE               	movwf	___ftmul@cntr
  4948  0DDF                     l3936:	
  4949  0DDF  1C20               	btfss	___ftmul@f1,0
  4950  0DE0  2DE7               	goto	l3940
  4951  0DE1  0823               	movf	___ftmul@f2,w
  4952  0DE2  07AB               	addwf	___ftmul@f3_as_product,f
  4953  0DE3  0824               	movf	___ftmul@f2+1,w
  4954  0DE4  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  4955  0DE5  0825               	movf	___ftmul@f2+2,w
  4956  0DE6  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  4957  0DE7                     l3940:	
  4958  0DE7  3001               	movlw	1
  4959  0DE8                     u4305:	
  4960  0DE8  36A2               	lsrf	___ftmul@f1+2,f
  4961  0DE9  0CA1               	rrf	___ftmul@f1+1,f
  4962  0DEA  0CA0               	rrf	___ftmul@f1,f
  4963  0DEB  0B89               	decfsz	9,f
  4964  0DEC  2DE8               	goto	u4305
  4965  0DED  3001               	movlw	1
  4966  0DEE                     u4315:	
  4967  0DEE  35A3               	lslf	___ftmul@f2,f
  4968  0DEF  0DA4               	rlf	___ftmul@f2+1,f
  4969  0DF0  0DA5               	rlf	___ftmul@f2+2,f
  4970  0DF1  0B89               	decfsz	9,f
  4971  0DF2  2DEE               	goto	u4315
  4972  0DF3  3001               	movlw	1
  4973  0DF4  02AE               	subwf	___ftmul@cntr,f
  4974  0DF5  1D03               	btfss	3,2
  4975  0DF6  2DDF               	goto	l3936
  4976  0DF7  3009               	movlw	9
  4977  0DF8  00A6               	movwf	??___ftmul
  4978  0DF9  0826               	movf	??___ftmul,w
  4979  0DFA  00AE               	movwf	___ftmul@cntr
  4980  0DFB                     l3948:	
  4981  0DFB  1C20               	btfss	___ftmul@f1,0
  4982  0DFC  2E03               	goto	l3952
  4983  0DFD  0823               	movf	___ftmul@f2,w
  4984  0DFE  07AB               	addwf	___ftmul@f3_as_product,f
  4985  0DFF  0824               	movf	___ftmul@f2+1,w
  4986  0E00  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  4987  0E01  0825               	movf	___ftmul@f2+2,w
  4988  0E02  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  4989  0E03                     l3952:	
  4990  0E03  3001               	movlw	1
  4991  0E04                     u4345:	
  4992  0E04  36A2               	lsrf	___ftmul@f1+2,f
  4993  0E05  0CA1               	rrf	___ftmul@f1+1,f
  4994  0E06  0CA0               	rrf	___ftmul@f1,f
  4995  0E07  0B89               	decfsz	9,f
  4996  0E08  2E04               	goto	u4345
  4997  0E09  3001               	movlw	1
  4998  0E0A                     u4355:	
  4999  0E0A  36AD               	lsrf	___ftmul@f3_as_product+2,f
  5000  0E0B  0CAC               	rrf	___ftmul@f3_as_product+1,f
  5001  0E0C  0CAB               	rrf	___ftmul@f3_as_product,f
  5002  0E0D  0B89               	decfsz	9,f
  5003  0E0E  2E0A               	goto	u4355
  5004  0E0F  3001               	movlw	1
  5005  0E10  02AE               	subwf	___ftmul@cntr,f
  5006  0E11  1D03               	btfss	3,2
  5007  0E12  2DFB               	goto	l3948
  5008  0E13  082B               	movf	___ftmul@f3_as_product,w
  5009  0E14  00F0               	movwf	___ftpack@arg
  5010  0E15  082C               	movf	___ftmul@f3_as_product+1,w
  5011  0E16  00F1               	movwf	___ftpack@arg+1
  5012  0E17  082D               	movf	___ftmul@f3_as_product+2,w
  5013  0E18  00F2               	movwf	___ftpack@arg+2
  5014  0E19  082A               	movf	___ftmul@exp,w
  5015  0E1A  00A6               	movwf	??___ftmul
  5016  0E1B  0826               	movf	??___ftmul,w
  5017  0E1C  00F3               	movwf	___ftpack@exp
  5018  0E1D  082F               	movf	___ftmul@sign,w
  5019  0E1E  00A7               	movwf	??___ftmul+1
  5020  0E1F  0827               	movf	??___ftmul+1,w
  5021  0E20  00F4               	movwf	___ftpack@sign
  5022  0E21  3197  272F         	fcall	___ftpack
  5023  0E23  0870               	movf	?___ftpack,w
  5024  0E24  0020               	movlb	0	; select bank0
  5025  0E25  00A0               	movwf	?___ftmul
  5026  0E26  0871               	movf	?___ftpack+1,w
  5027  0E27  00A1               	movwf	?___ftmul+1
  5028  0E28  0872               	movf	?___ftpack+2,w
  5029  0E29  00A2               	movwf	?___ftmul+2
  5030  0E2A  0008               	return
  5031  0E2B                     __end_of___ftmul:	
  5032                           
  5033                           	psect	text9
  5034  0CCE                     __ptext9:	
  5035 ;; *************** function ___ftdiv *****************
  5036 ;; Defined at:
  5037 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  f2              3   16[BANK0 ] float 
  5040 ;;  f1              3   19[BANK0 ] float 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  f3              3   27[BANK0 ] float 
  5043 ;;  sign            1   31[BANK0 ] unsigned char 
  5044 ;;  exp             1   30[BANK0 ] unsigned char 
  5045 ;;  cntr            1   26[BANK0 ] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  3   16[BANK0 ] float 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;Total ram usage:       16 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    1
  5062 ;; This function calls:
  5063 ;;		___ftpack
  5064 ;; This function is called by:
  5065 ;;		_si7021_ReadHumidity
  5066 ;;		_si7021_ReadTemperature
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function ___ftdiv
  5072  0CCE                     ___ftdiv:	
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5076  0CCE  0020               	movlb	0	; select bank0
  5077  0CCF  0833               	movf	___ftdiv@f1,w
  5078  0CD0  00B6               	movwf	??___ftdiv
  5079  0CD1  0834               	movf	___ftdiv@f1+1,w
  5080  0CD2  00B7               	movwf	??___ftdiv+1
  5081  0CD3  0835               	movf	___ftdiv@f1+2,w
  5082  0CD4  00B8               	movwf	??___ftdiv+2
  5083  0CD5  1003               	clrc
  5084  0CD6  0D37               	rlf	??___ftdiv+1,w
  5085  0CD7  0D38               	rlf	??___ftdiv+2,w
  5086  0CD8  00B9               	movwf	??___ftdiv+3
  5087  0CD9  0839               	movf	??___ftdiv+3,w
  5088  0CDA  00BE               	movwf	___ftdiv@exp
  5089  0CDB  083E               	movf	___ftdiv@exp,w
  5090  0CDC  1D03               	btfss	3,2
  5091  0CDD  2CE5               	goto	l3876
  5092  0CDE  3000               	movlw	0
  5093  0CDF  00B0               	movwf	?___ftdiv
  5094  0CE0  3000               	movlw	0
  5095  0CE1  00B1               	movwf	?___ftdiv+1
  5096  0CE2  3000               	movlw	0
  5097  0CE3  00B2               	movwf	?___ftdiv+2
  5098  0CE4  0008               	return
  5099  0CE5                     l3876:	
  5100  0CE5  0830               	movf	___ftdiv@f2,w
  5101  0CE6  00B6               	movwf	??___ftdiv
  5102  0CE7  0831               	movf	___ftdiv@f2+1,w
  5103  0CE8  00B7               	movwf	??___ftdiv+1
  5104  0CE9  0832               	movf	___ftdiv@f2+2,w
  5105  0CEA  00B8               	movwf	??___ftdiv+2
  5106  0CEB  1003               	clrc
  5107  0CEC  0D37               	rlf	??___ftdiv+1,w
  5108  0CED  0D38               	rlf	??___ftdiv+2,w
  5109  0CEE  00B9               	movwf	??___ftdiv+3
  5110  0CEF  0839               	movf	??___ftdiv+3,w
  5111  0CF0  00BF               	movwf	___ftdiv@sign
  5112  0CF1  083F               	movf	___ftdiv@sign,w
  5113  0CF2  1D03               	btfss	3,2
  5114  0CF3  2CFB               	goto	l3882
  5115  0CF4  3000               	movlw	0
  5116  0CF5  00B0               	movwf	?___ftdiv
  5117  0CF6  3000               	movlw	0
  5118  0CF7  00B1               	movwf	?___ftdiv+1
  5119  0CF8  3000               	movlw	0
  5120  0CF9  00B2               	movwf	?___ftdiv+2
  5121  0CFA  0008               	return
  5122  0CFB                     l3882:	
  5123  0CFB  3000               	movlw	0
  5124  0CFC  00BB               	movwf	___ftdiv@f3
  5125  0CFD  3000               	movlw	0
  5126  0CFE  00BC               	movwf	___ftdiv@f3+1
  5127  0CFF  3000               	movlw	0
  5128  0D00  00BD               	movwf	___ftdiv@f3+2
  5129  0D01  3089               	movlw	137
  5130  0D02  073F               	addwf	___ftdiv@sign,w
  5131  0D03  00B6               	movwf	??___ftdiv
  5132  0D04  0836               	movf	??___ftdiv,w
  5133  0D05  02BE               	subwf	___ftdiv@exp,f
  5134  0D06  0833               	movf	___ftdiv@f1,w
  5135  0D07  00B6               	movwf	??___ftdiv
  5136  0D08  0834               	movf	___ftdiv@f1+1,w
  5137  0D09  00B7               	movwf	??___ftdiv+1
  5138  0D0A  0835               	movf	___ftdiv@f1+2,w
  5139  0D0B  00B8               	movwf	??___ftdiv+2
  5140  0D0C  3010               	movlw	16
  5141  0D0D                     u4195:	
  5142  0D0D  36B8               	lsrf	??___ftdiv+2,f
  5143  0D0E  0CB7               	rrf	??___ftdiv+1,f
  5144  0D0F  0CB6               	rrf	??___ftdiv,f
  5145  0D10  0B89               	decfsz	9,f
  5146  0D11  2D0D               	goto	u4195
  5147  0D12  0836               	movf	??___ftdiv,w
  5148  0D13  00B9               	movwf	??___ftdiv+3
  5149  0D14  0839               	movf	??___ftdiv+3,w
  5150  0D15  00BF               	movwf	___ftdiv@sign
  5151  0D16  0830               	movf	___ftdiv@f2,w
  5152  0D17  00B6               	movwf	??___ftdiv
  5153  0D18  0831               	movf	___ftdiv@f2+1,w
  5154  0D19  00B7               	movwf	??___ftdiv+1
  5155  0D1A  0832               	movf	___ftdiv@f2+2,w
  5156  0D1B  00B8               	movwf	??___ftdiv+2
  5157  0D1C  3010               	movlw	16
  5158  0D1D                     u4205:	
  5159  0D1D  36B8               	lsrf	??___ftdiv+2,f
  5160  0D1E  0CB7               	rrf	??___ftdiv+1,f
  5161  0D1F  0CB6               	rrf	??___ftdiv,f
  5162  0D20  0B89               	decfsz	9,f
  5163  0D21  2D1D               	goto	u4205
  5164  0D22  0836               	movf	??___ftdiv,w
  5165  0D23  00B9               	movwf	??___ftdiv+3
  5166  0D24  0839               	movf	??___ftdiv+3,w
  5167  0D25  06BF               	xorwf	___ftdiv@sign,f
  5168  0D26  3080               	movlw	128
  5169  0D27  00B6               	movwf	??___ftdiv
  5170  0D28  0836               	movf	??___ftdiv,w
  5171  0D29  05BF               	andwf	___ftdiv@sign,f
  5172  0D2A  17B4               	bsf	___ftdiv@f1+1,7
  5173  0D2B  30FF               	movlw	255
  5174  0D2C  05B3               	andwf	___ftdiv@f1,f
  5175  0D2D  30FF               	movlw	255
  5176  0D2E  05B4               	andwf	___ftdiv@f1+1,f
  5177  0D2F  3000               	movlw	0
  5178  0D30  05B5               	andwf	___ftdiv@f1+2,f
  5179  0D31  17B1               	bsf	___ftdiv@f2+1,7
  5180  0D32  30FF               	movlw	255
  5181  0D33  05B0               	andwf	___ftdiv@f2,f
  5182  0D34  30FF               	movlw	255
  5183  0D35  05B1               	andwf	___ftdiv@f2+1,f
  5184  0D36  3000               	movlw	0
  5185  0D37  05B2               	andwf	___ftdiv@f2+2,f
  5186  0D38  3018               	movlw	24
  5187  0D39  00B6               	movwf	??___ftdiv
  5188  0D3A  0836               	movf	??___ftdiv,w
  5189  0D3B  00BA               	movwf	___ftdiv@cntr
  5190  0D3C                     l3896:	
  5191  0D3C  3001               	movlw	1
  5192  0D3D                     u4215:	
  5193  0D3D  35BB               	lslf	___ftdiv@f3,f
  5194  0D3E  0DBC               	rlf	___ftdiv@f3+1,f
  5195  0D3F  0DBD               	rlf	___ftdiv@f3+2,f
  5196  0D40  0B89               	decfsz	9,f
  5197  0D41  2D3D               	goto	u4215
  5198  0D42  0832               	movf	___ftdiv@f2+2,w
  5199  0D43  0235               	subwf	___ftdiv@f1+2,w
  5200  0D44  1D03               	skipz
  5201  0D45  2D4C               	goto	u4225
  5202  0D46  0831               	movf	___ftdiv@f2+1,w
  5203  0D47  0234               	subwf	___ftdiv@f1+1,w
  5204  0D48  1D03               	skipz
  5205  0D49  2D4C               	goto	u4225
  5206  0D4A  0830               	movf	___ftdiv@f2,w
  5207  0D4B  0233               	subwf	___ftdiv@f1,w
  5208  0D4C                     u4225:	
  5209  0D4C  1C03               	skipc
  5210  0D4D  2D55               	goto	l3904
  5211  0D4E  0830               	movf	___ftdiv@f2,w
  5212  0D4F  02B3               	subwf	___ftdiv@f1,f
  5213  0D50  0831               	movf	___ftdiv@f2+1,w
  5214  0D51  3BB4               	subwfb	___ftdiv@f1+1,f
  5215  0D52  0832               	movf	___ftdiv@f2+2,w
  5216  0D53  3BB5               	subwfb	___ftdiv@f1+2,f
  5217  0D54  143B               	bsf	___ftdiv@f3,0
  5218  0D55                     l3904:	
  5219  0D55  3001               	movlw	1
  5220  0D56                     u4235:	
  5221  0D56  35B3               	lslf	___ftdiv@f1,f
  5222  0D57  0DB4               	rlf	___ftdiv@f1+1,f
  5223  0D58  0DB5               	rlf	___ftdiv@f1+2,f
  5224  0D59  0B89               	decfsz	9,f
  5225  0D5A  2D56               	goto	u4235
  5226  0D5B  3001               	movlw	1
  5227  0D5C  02BA               	subwf	___ftdiv@cntr,f
  5228  0D5D  1D03               	btfss	3,2
  5229  0D5E  2D3C               	goto	l3896
  5230  0D5F  083B               	movf	___ftdiv@f3,w
  5231  0D60  00F0               	movwf	___ftpack@arg
  5232  0D61  083C               	movf	___ftdiv@f3+1,w
  5233  0D62  00F1               	movwf	___ftpack@arg+1
  5234  0D63  083D               	movf	___ftdiv@f3+2,w
  5235  0D64  00F2               	movwf	___ftpack@arg+2
  5236  0D65  083E               	movf	___ftdiv@exp,w
  5237  0D66  00B6               	movwf	??___ftdiv
  5238  0D67  0836               	movf	??___ftdiv,w
  5239  0D68  00F3               	movwf	___ftpack@exp
  5240  0D69  083F               	movf	___ftdiv@sign,w
  5241  0D6A  00B7               	movwf	??___ftdiv+1
  5242  0D6B  0837               	movf	??___ftdiv+1,w
  5243  0D6C  00F4               	movwf	___ftpack@sign
  5244  0D6D  3197  272F         	fcall	___ftpack
  5245  0D6F  0870               	movf	?___ftpack,w
  5246  0D70  0020               	movlb	0	; select bank0
  5247  0D71  00B0               	movwf	?___ftdiv
  5248  0D72  0871               	movf	?___ftpack+1,w
  5249  0D73  00B1               	movwf	?___ftdiv+1
  5250  0D74  0872               	movf	?___ftpack+2,w
  5251  0D75  00B2               	movwf	?___ftdiv+2
  5252  0D76  0008               	return
  5253  0D77                     __end_of___ftdiv:	
  5254                           
  5255                           	psect	text10
  5256  0086                     __ptext10:	
  5257 ;; *************** function ___ftadd *****************
  5258 ;; Defined at:
  5259 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  f1              3   32[BANK0 ] float 
  5262 ;;  f2              3   35[BANK0 ] float 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  exp1            1   44[BANK0 ] unsigned char 
  5265 ;;  exp2            1   43[BANK0 ] unsigned char 
  5266 ;;  sign            1   42[BANK0 ] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  3   32[BANK0 ] float 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5276 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;Total ram usage:       13 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    1
  5283 ;; This function calls:
  5284 ;;		___ftpack
  5285 ;; This function is called by:
  5286 ;;		_si7021_ReadHumidity
  5287 ;;		_si7021_ReadTemperature
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function ___ftadd
  5293  0086                     ___ftadd:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5297  0086  0020               	movlb	0	; select bank0
  5298  0087  0840               	movf	___ftadd@f1,w
  5299  0088  00C6               	movwf	??___ftadd
  5300  0089  0841               	movf	___ftadd@f1+1,w
  5301  008A  00C7               	movwf	??___ftadd+1
  5302  008B  0842               	movf	___ftadd@f1+2,w
  5303  008C  00C8               	movwf	??___ftadd+2
  5304  008D  1003               	clrc
  5305  008E  0D47               	rlf	??___ftadd+1,w
  5306  008F  0D48               	rlf	??___ftadd+2,w
  5307  0090  00C9               	movwf	??___ftadd+3
  5308  0091  0849               	movf	??___ftadd+3,w
  5309  0092  00CC               	movwf	___ftadd@exp1
  5310  0093  0843               	movf	___ftadd@f2,w
  5311  0094  00C6               	movwf	??___ftadd
  5312  0095  0844               	movf	___ftadd@f2+1,w
  5313  0096  00C7               	movwf	??___ftadd+1
  5314  0097  0845               	movf	___ftadd@f2+2,w
  5315  0098  00C8               	movwf	??___ftadd+2
  5316  0099  1003               	clrc
  5317  009A  0D47               	rlf	??___ftadd+1,w
  5318  009B  0D48               	rlf	??___ftadd+2,w
  5319  009C  00C9               	movwf	??___ftadd+3
  5320  009D  0849               	movf	??___ftadd+3,w
  5321  009E  00CB               	movwf	___ftadd@exp2
  5322  009F  084C               	movf	___ftadd@exp1,w
  5323  00A0  1903               	btfsc	3,2
  5324  00A1  28AE               	goto	l3806
  5325  00A2  084B               	movf	___ftadd@exp2,w
  5326  00A3  024C               	subwf	___ftadd@exp1,w
  5327  00A4  1803               	skipnc
  5328  00A5  28B5               	goto	l3810
  5329  00A6  034C               	decf	___ftadd@exp1,w
  5330  00A7  3AFF               	xorlw	255
  5331  00A8  074B               	addwf	___ftadd@exp2,w
  5332  00A9  00C6               	movwf	??___ftadd
  5333  00AA  3019               	movlw	25
  5334  00AB  0246               	subwf	??___ftadd,w
  5335  00AC  1C03               	skipc
  5336  00AD  28B5               	goto	l3810
  5337  00AE                     l3806:	
  5338  00AE  0843               	movf	___ftadd@f2,w
  5339  00AF  00C0               	movwf	?___ftadd
  5340  00B0  0844               	movf	___ftadd@f2+1,w
  5341  00B1  00C1               	movwf	?___ftadd+1
  5342  00B2  0845               	movf	___ftadd@f2+2,w
  5343  00B3  00C2               	movwf	?___ftadd+2
  5344  00B4  0008               	return
  5345  00B5                     l3810:	
  5346  00B5  084B               	movf	___ftadd@exp2,w
  5347  00B6  1903               	btfsc	3,2
  5348  00B7  0008               	return
  5349  00B8  084C               	movf	___ftadd@exp1,w
  5350  00B9  024B               	subwf	___ftadd@exp2,w
  5351  00BA  1803               	skipnc
  5352  00BB  28C4               	goto	l3816
  5353  00BC  034B               	decf	___ftadd@exp2,w
  5354  00BD  3AFF               	xorlw	255
  5355  00BE  074C               	addwf	___ftadd@exp1,w
  5356  00BF  00C6               	movwf	??___ftadd
  5357  00C0  3019               	movlw	25
  5358  00C1  0246               	subwf	??___ftadd,w
  5359  00C2  1803               	btfsc	3,0
  5360  00C3  0008               	return
  5361  00C4                     l3816:	
  5362  00C4  3006               	movlw	6
  5363  00C5  00C6               	movwf	??___ftadd
  5364  00C6  0846               	movf	??___ftadd,w
  5365  00C7  00CA               	movwf	___ftadd@sign
  5366  00C8  1BC2               	btfsc	___ftadd@f1+2,7
  5367  00C9  17CA               	bsf	___ftadd@sign,7
  5368  00CA  1BC5               	btfsc	___ftadd@f2+2,7
  5369  00CB  174A               	bsf	___ftadd@sign,6
  5370  00CC  17C1               	bsf	___ftadd@f1+1,7
  5371  00CD  30FF               	movlw	255
  5372  00CE  05C0               	andwf	___ftadd@f1,f
  5373  00CF  30FF               	movlw	255
  5374  00D0  05C1               	andwf	___ftadd@f1+1,f
  5375  00D1  3000               	movlw	0
  5376  00D2  05C2               	andwf	___ftadd@f1+2,f
  5377  00D3  17C4               	bsf	___ftadd@f2+1,7
  5378  00D4  30FF               	movlw	255
  5379  00D5  05C3               	andwf	___ftadd@f2,f
  5380  00D6  30FF               	movlw	255
  5381  00D7  05C4               	andwf	___ftadd@f2+1,f
  5382  00D8  3000               	movlw	0
  5383  00D9  05C5               	andwf	___ftadd@f2+2,f
  5384  00DA  084B               	movf	___ftadd@exp2,w
  5385  00DB  024C               	subwf	___ftadd@exp1,w
  5386  00DC  1803               	skipnc
  5387  00DD  2900               	goto	l3838
  5388  00DE                     l3828:	
  5389  00DE  3001               	movlw	1
  5390  00DF                     u4035:	
  5391  00DF  35C3               	lslf	___ftadd@f2,f
  5392  00E0  0DC4               	rlf	___ftadd@f2+1,f
  5393  00E1  0DC5               	rlf	___ftadd@f2+2,f
  5394  00E2  0B89               	decfsz	9,f
  5395  00E3  28DF               	goto	u4035
  5396  00E4  3001               	movlw	1
  5397  00E5  02CB               	subwf	___ftadd@exp2,f
  5398  00E6  084B               	movf	___ftadd@exp2,w
  5399  00E7  064C               	xorwf	___ftadd@exp1,w
  5400  00E8  1903               	skipnz
  5401  00E9  28FB               	goto	l3836
  5402  00EA  3001               	movlw	1
  5403  00EB  02CA               	subwf	___ftadd@sign,f
  5404  00EC  084A               	movf	___ftadd@sign,w
  5405  00ED  3907               	andlw	7
  5406  00EE  1903               	btfsc	3,2
  5407  00EF  28FB               	goto	l3836
  5408  00F0  28DE               	goto	l3828
  5409  00F1                     l3834:	
  5410  00F1  3001               	movlw	1
  5411  00F2                     u4065:	
  5412  00F2  36C2               	lsrf	___ftadd@f1+2,f
  5413  00F3  0CC1               	rrf	___ftadd@f1+1,f
  5414  00F4  0CC0               	rrf	___ftadd@f1,f
  5415  00F5  0B89               	decfsz	9,f
  5416  00F6  28F2               	goto	u4065
  5417  00F7  3001               	movlw	1
  5418  00F8  00C6               	movwf	??___ftadd
  5419  00F9  0846               	movf	??___ftadd,w
  5420  00FA  07CC               	addwf	___ftadd@exp1,f
  5421  00FB                     l3836:	
  5422  00FB  084C               	movf	___ftadd@exp1,w
  5423  00FC  064B               	xorwf	___ftadd@exp2,w
  5424  00FD  1903               	btfsc	3,2
  5425  00FE  2925               	goto	l1441
  5426  00FF  28F1               	goto	l3834
  5427  0100                     l3838:	
  5428  0100  084C               	movf	___ftadd@exp1,w
  5429  0101  024B               	subwf	___ftadd@exp2,w
  5430  0102  1803               	skipnc
  5431  0103  2925               	goto	l1441
  5432  0104                     l3840:	
  5433  0104  3001               	movlw	1
  5434  0105                     u4095:	
  5435  0105  35C0               	lslf	___ftadd@f1,f
  5436  0106  0DC1               	rlf	___ftadd@f1+1,f
  5437  0107  0DC2               	rlf	___ftadd@f1+2,f
  5438  0108  0B89               	decfsz	9,f
  5439  0109  2905               	goto	u4095
  5440  010A  3001               	movlw	1
  5441  010B  02CC               	subwf	___ftadd@exp1,f
  5442  010C  084B               	movf	___ftadd@exp2,w
  5443  010D  064C               	xorwf	___ftadd@exp1,w
  5444  010E  1903               	skipnz
  5445  010F  2921               	goto	l3848
  5446  0110  3001               	movlw	1
  5447  0111  02CA               	subwf	___ftadd@sign,f
  5448  0112  084A               	movf	___ftadd@sign,w
  5449  0113  3907               	andlw	7
  5450  0114  1903               	btfsc	3,2
  5451  0115  2921               	goto	l3848
  5452  0116  2904               	goto	l3840
  5453  0117                     l3846:	
  5454  0117  3001               	movlw	1
  5455  0118                     u4125:	
  5456  0118  36C5               	lsrf	___ftadd@f2+2,f
  5457  0119  0CC4               	rrf	___ftadd@f2+1,f
  5458  011A  0CC3               	rrf	___ftadd@f2,f
  5459  011B  0B89               	decfsz	9,f
  5460  011C  2918               	goto	u4125
  5461  011D  3001               	movlw	1
  5462  011E  00C6               	movwf	??___ftadd
  5463  011F  0846               	movf	??___ftadd,w
  5464  0120  07CB               	addwf	___ftadd@exp2,f
  5465  0121                     l3848:	
  5466  0121  084C               	movf	___ftadd@exp1,w
  5467  0122  064B               	xorwf	___ftadd@exp2,w
  5468  0123  1D03               	skipz
  5469  0124  2917               	goto	l3846
  5470  0125                     l1441:	
  5471  0125  1FCA               	btfss	___ftadd@sign,7
  5472  0126  2937               	goto	l3852
  5473  0127  30FF               	movlw	255
  5474  0128  06C0               	xorwf	___ftadd@f1,f
  5475  0129  30FF               	movlw	255
  5476  012A  06C1               	xorwf	___ftadd@f1+1,f
  5477  012B  30FF               	movlw	255
  5478  012C  06C2               	xorwf	___ftadd@f1+2,f
  5479  012D  3001               	movlw	1
  5480  012E  07C0               	addwf	___ftadd@f1,f
  5481  012F  3000               	movlw	0
  5482  0130  1803               	skipnc
  5483  0131  3001               	movlw	1
  5484  0132  07C1               	addwf	___ftadd@f1+1,f
  5485  0133  3000               	movlw	0
  5486  0134  1803               	skipnc
  5487  0135  3001               	movlw	1
  5488  0136  07C2               	addwf	___ftadd@f1+2,f
  5489  0137                     l3852:	
  5490  0137  1F4A               	btfss	___ftadd@sign,6
  5491  0138  2949               	goto	l3856
  5492  0139  30FF               	movlw	255
  5493  013A  06C3               	xorwf	___ftadd@f2,f
  5494  013B  30FF               	movlw	255
  5495  013C  06C4               	xorwf	___ftadd@f2+1,f
  5496  013D  30FF               	movlw	255
  5497  013E  06C5               	xorwf	___ftadd@f2+2,f
  5498  013F  3001               	movlw	1
  5499  0140  07C3               	addwf	___ftadd@f2,f
  5500  0141  3000               	movlw	0
  5501  0142  1803               	skipnc
  5502  0143  3001               	movlw	1
  5503  0144  07C4               	addwf	___ftadd@f2+1,f
  5504  0145  3000               	movlw	0
  5505  0146  1803               	skipnc
  5506  0147  3001               	movlw	1
  5507  0148  07C5               	addwf	___ftadd@f2+2,f
  5508  0149                     l3856:	
  5509  0149  01CA               	clrf	___ftadd@sign
  5510  014A  0840               	movf	___ftadd@f1,w
  5511  014B  07C3               	addwf	___ftadd@f2,f
  5512  014C  0841               	movf	___ftadd@f1+1,w
  5513  014D  3DC4               	addwfc	___ftadd@f2+1,f
  5514  014E  0842               	movf	___ftadd@f1+2,w
  5515  014F  3DC5               	addwfc	___ftadd@f2+2,f
  5516  0150  1FC5               	btfss	___ftadd@f2+2,7
  5517  0151  2964               	goto	l3866
  5518  0152  30FF               	movlw	255
  5519  0153  06C3               	xorwf	___ftadd@f2,f
  5520  0154  30FF               	movlw	255
  5521  0155  06C4               	xorwf	___ftadd@f2+1,f
  5522  0156  30FF               	movlw	255
  5523  0157  06C5               	xorwf	___ftadd@f2+2,f
  5524  0158  3001               	movlw	1
  5525  0159  07C3               	addwf	___ftadd@f2,f
  5526  015A  3000               	movlw	0
  5527  015B  1803               	skipnc
  5528  015C  3001               	movlw	1
  5529  015D  07C4               	addwf	___ftadd@f2+1,f
  5530  015E  3000               	movlw	0
  5531  015F  1803               	skipnc
  5532  0160  3001               	movlw	1
  5533  0161  07C5               	addwf	___ftadd@f2+2,f
  5534  0162  01CA               	clrf	___ftadd@sign
  5535  0163  0ACA               	incf	___ftadd@sign,f
  5536  0164                     l3866:	
  5537  0164  0843               	movf	___ftadd@f2,w
  5538  0165  00F0               	movwf	___ftpack@arg
  5539  0166  0844               	movf	___ftadd@f2+1,w
  5540  0167  00F1               	movwf	___ftpack@arg+1
  5541  0168  0845               	movf	___ftadd@f2+2,w
  5542  0169  00F2               	movwf	___ftpack@arg+2
  5543  016A  084C               	movf	___ftadd@exp1,w
  5544  016B  00C6               	movwf	??___ftadd
  5545  016C  0846               	movf	??___ftadd,w
  5546  016D  00F3               	movwf	___ftpack@exp
  5547  016E  084A               	movf	___ftadd@sign,w
  5548  016F  00C7               	movwf	??___ftadd+1
  5549  0170  0847               	movf	??___ftadd+1,w
  5550  0171  00F4               	movwf	___ftpack@sign
  5551  0172  3197  272F         	fcall	___ftpack
  5552  0174  0870               	movf	?___ftpack,w
  5553  0175  0020               	movlb	0	; select bank0
  5554  0176  00C0               	movwf	?___ftadd
  5555  0177  0871               	movf	?___ftpack+1,w
  5556  0178  00C1               	movwf	?___ftadd+1
  5557  0179  0872               	movf	?___ftpack+2,w
  5558  017A  00C2               	movwf	?___ftadd+2
  5559  017B  0008               	return
  5560  017C                     __end_of___ftadd:	
  5561                           
  5562                           	psect	text11
  5563  172F                     __ptext11:	
  5564 ;; *************** function ___ftpack *****************
  5565 ;; Defined at:
  5566 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  arg             3    0[COMMON] unsigned um
  5569 ;;  exp             1    3[COMMON] unsigned char 
  5570 ;;  sign            1    4[COMMON] unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  3    0[COMMON] float 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5582 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;Total ram usage:        8 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		___ftadd
  5592 ;;		___ftdiv
  5593 ;;		___ftmul
  5594 ;;		___lwtoft
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function ___ftpack
  5600  172F                     ___ftpack:	
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5604  172F  0873               	movf	___ftpack@exp,w
  5605  1730  1903               	btfsc	3,2
  5606  1731  2F37               	goto	l3576
  5607  1732  0872               	movf	___ftpack@arg+2,w
  5608  1733  0471               	iorwf	___ftpack@arg+1,w
  5609  1734  0470               	iorwf	___ftpack@arg,w
  5610  1735  1D03               	skipz
  5611  1736  2F48               	goto	l3582
  5612  1737                     l3576:	
  5613  1737  3000               	movlw	0
  5614  1738  00F0               	movwf	?___ftpack
  5615  1739  3000               	movlw	0
  5616  173A  00F1               	movwf	?___ftpack+1
  5617  173B  3000               	movlw	0
  5618  173C  00F2               	movwf	?___ftpack+2
  5619  173D  0008               	return
  5620  173E                     l3580:	
  5621  173E  3001               	movlw	1
  5622  173F  00F5               	movwf	??___ftpack
  5623  1740  0875               	movf	??___ftpack,w
  5624  1741  07F3               	addwf	___ftpack@exp,f
  5625  1742  3001               	movlw	1
  5626  1743                     u3315:	
  5627  1743  36F2               	lsrf	___ftpack@arg+2,f
  5628  1744  0CF1               	rrf	___ftpack@arg+1,f
  5629  1745  0CF0               	rrf	___ftpack@arg,f
  5630  1746  0B89               	decfsz	9,f
  5631  1747  2F43               	goto	u3315
  5632  1748                     l3582:	
  5633  1748  30FE               	movlw	254
  5634  1749  0572               	andwf	___ftpack@arg+2,w
  5635  174A  1903               	btfsc	3,2
  5636  174B  2F61               	goto	l1410
  5637  174C  2F3E               	goto	l3580
  5638  174D                     l3584:	
  5639  174D  3001               	movlw	1
  5640  174E  00F5               	movwf	??___ftpack
  5641  174F  0875               	movf	??___ftpack,w
  5642  1750  07F3               	addwf	___ftpack@exp,f
  5643  1751  3001               	movlw	1
  5644  1752  07F0               	addwf	___ftpack@arg,f
  5645  1753  3000               	movlw	0
  5646  1754  1803               	skipnc
  5647  1755  3001               	movlw	1
  5648  1756  07F1               	addwf	___ftpack@arg+1,f
  5649  1757  3000               	movlw	0
  5650  1758  1803               	skipnc
  5651  1759  3001               	movlw	1
  5652  175A  07F2               	addwf	___ftpack@arg+2,f
  5653  175B  3001               	movlw	1
  5654  175C                     u3335:	
  5655  175C  36F2               	lsrf	___ftpack@arg+2,f
  5656  175D  0CF1               	rrf	___ftpack@arg+1,f
  5657  175E  0CF0               	rrf	___ftpack@arg,f
  5658  175F  0B89               	decfsz	9,f
  5659  1760  2F5C               	goto	u3335
  5660  1761                     l1410:	
  5661  1761  30FF               	movlw	255
  5662  1762  0572               	andwf	___ftpack@arg+2,w
  5663  1763  1903               	btfsc	3,2
  5664  1764  2F6E               	goto	l3592
  5665  1765  2F4D               	goto	l3584
  5666  1766                     l3590:	
  5667  1766  3001               	movlw	1
  5668  1767  02F3               	subwf	___ftpack@exp,f
  5669  1768  3001               	movlw	1
  5670  1769                     u3355:	
  5671  1769  35F0               	lslf	___ftpack@arg,f
  5672  176A  0DF1               	rlf	___ftpack@arg+1,f
  5673  176B  0DF2               	rlf	___ftpack@arg+2,f
  5674  176C  0B89               	decfsz	9,f
  5675  176D  2F69               	goto	u3355
  5676  176E                     l3592:	
  5677  176E  1BF1               	btfsc	___ftpack@arg+1,7
  5678  176F  2F74               	goto	l1417
  5679  1770  3002               	movlw	2
  5680  1771  0273               	subwf	___ftpack@exp,w
  5681  1772  1803               	skipnc
  5682  1773  2F66               	goto	l3590
  5683  1774                     l1417:	
  5684  1774  1873               	btfsc	___ftpack@exp,0
  5685  1775  2F7C               	goto	l1418
  5686  1776  30FF               	movlw	255
  5687  1777  05F0               	andwf	___ftpack@arg,f
  5688  1778  307F               	movlw	127
  5689  1779  05F1               	andwf	___ftpack@arg+1,f
  5690  177A  30FF               	movlw	255
  5691  177B  05F2               	andwf	___ftpack@arg+2,f
  5692  177C                     l1418:	
  5693  177C  1003               	clrc
  5694  177D  0CF3               	rrf	___ftpack@exp,f
  5695  177E  0873               	movf	___ftpack@exp,w
  5696  177F  00F5               	movwf	??___ftpack
  5697  1780  01F6               	clrf	??___ftpack+1
  5698  1781  01F7               	clrf	??___ftpack+2
  5699  1782  3010               	movlw	16
  5700  1783                     u3395:	
  5701  1783  35F5               	lslf	??___ftpack,f
  5702  1784  0DF6               	rlf	??___ftpack+1,f
  5703  1785  0DF7               	rlf	??___ftpack+2,f
  5704  1786  0B89               	decfsz	9,f
  5705  1787  2F83               	goto	u3395
  5706  1788  0875               	movf	??___ftpack,w
  5707  1789  04F0               	iorwf	___ftpack@arg,f
  5708  178A  0876               	movf	??___ftpack+1,w
  5709  178B  04F1               	iorwf	___ftpack@arg+1,f
  5710  178C  0877               	movf	??___ftpack+2,w
  5711  178D  04F2               	iorwf	___ftpack@arg+2,f
  5712  178E  0874               	movf	___ftpack@sign,w
  5713  178F  1903               	btfsc	3,2
  5714  1790  0008               	return
  5715  1791  17F2               	bsf	___ftpack@arg+2,7
  5716  1792  0008               	return
  5717  1793                     __end_of___ftpack:	
  5718                           
  5719                           	psect	text12
  5720  139C                     __ptext12:	
  5721 ;; *************** function _I2C1_WriteByte *****************
  5722 ;; Defined at:
  5723 ;;		line 278 in file "i2cbysk.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  i2c1SlaveAdd    1    wreg     unsigned char 
  5726 ;;  i2c1Data        1    0[COMMON] unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  i2c1SlaveAdd    1    1[COMMON] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      unsigned char 
  5731 ;; Registers used:
  5732 ;;		wreg
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5738 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;Total ram usage:        2 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_si7021_ReadHumidity
  5748 ;;		_si7021_ReadTemperature
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           
  5753                           ;psect for function _I2C1_WriteByte
  5754  139C                     _I2C1_WriteByte:	
  5755                           
  5756                           ;incstack = 0
  5757                           ; Regs used in _I2C1_WriteByte: [wreg]
  5758                           ;I2C1_WriteByte@i2c1SlaveAddress stored from wreg
  5759  139C  00F1               	movwf	I2C1_WriteByte@i2c1SlaveAddress
  5760                           
  5761                           ;i2cbysk.c: 280: if (SSP2STATbits.S)
  5762  139D  0024               	movlb	4	; select bank4
  5763  139E  199C               	btfsc	28,3	;volatile
  5764  139F  0008               	return
  5765                           
  5766                           ;i2cbysk.c: 283: }
  5767                           ;i2cbysk.c: 286: SSP2CON2bits.SEN = 1;
  5768                           
  5769                           ;i2cbysk.c: 281: {
  5770                           ;i2cbysk.c: 282: return I2C1_BUS_BUSY;
  5771                           ;	Return value of _I2C1_WriteByte is never used
  5772  13A0  141E               	bsf	30,0	;volatile
  5773  13A1                     l747:	
  5774                           ;i2cbysk.c: 288: {
  5775                           
  5776                           ;i2cbysk.c: 287: while (SSP2CON2bits.SEN)
  5777                           
  5778  13A1  181E               	btfsc	30,0	;volatile
  5779  13A2  2BA1               	goto	l747
  5780                           
  5781                           ;i2cbysk.c: 289: }
  5782                           ;i2cbysk.c: 292: if (PIR2bits.BCL1IF)
  5783  13A3  0020               	movlb	0	; select bank0
  5784  13A4  1D92               	btfss	18,3	;volatile
  5785  13A5  2BA8               	goto	l3704
  5786                           
  5787                           ;i2cbysk.c: 293: {
  5788                           ;i2cbysk.c: 294: PIR2bits.BCL1IF = 0;
  5789  13A6  1192               	bcf	18,3	;volatile
  5790                           
  5791                           ;i2cbysk.c: 295: return I2C1_BUS_COLLISION;
  5792                           ;	Return value of _I2C1_WriteByte is never used
  5793  13A7  0008               	return
  5794  13A8                     l3704:	
  5795                           
  5796                           ;i2cbysk.c: 296: }
  5797                           ;i2cbysk.c: 299: SSP2BUF = i2c1SlaveAddress;
  5798  13A8  0871               	movf	I2C1_WriteByte@i2c1SlaveAddress,w
  5799  13A9  0024               	movlb	4	; select bank4
  5800  13AA  0099               	movwf	25	;volatile
  5801  13AB                     l751:	
  5802                           ;i2cbysk.c: 301: {
  5803                           
  5804                           ;i2cbysk.c: 300: while (SSP2STATbits.BF || SSP2STATbits.R_nW)
  5805                           
  5806  13AB  1C1C               	btfss	28,0	;volatile
  5807  13AC  191C               	btfsc	28,2	;volatile
  5808  13AD  2BAB               	goto	l751
  5809                           
  5810                           ;i2cbysk.c: 302: }
  5811                           ;i2cbysk.c: 305: if (SSP2CON2bits.ACKSTAT )
  5812  13AE  1F1E               	btfss	30,6	;volatile
  5813  13AF  2BB4               	goto	l3710
  5814                           
  5815                           ;i2cbysk.c: 306: {
  5816                           ;i2cbysk.c: 307: SSP2CON2bits.PEN = 1;
  5817  13B0  151E               	bsf	30,2	;volatile
  5818  13B1                     l755:	
  5819                           ;i2cbysk.c: 309: {
  5820                           
  5821                           ;i2cbysk.c: 308: while (SSP2CON2bits.PEN)
  5822                           
  5823  13B1  1D1E               	btfss	30,2	;volatile
  5824  13B2  0008               	return
  5825  13B3  2BB1               	goto	l755
  5826  13B4                     l3710:	
  5827                           ;i2cbysk.c: 310: }
  5828                           ;i2cbysk.c: 311: return I2C1_ACK_NOT_RECEIVED;
  5829                           ;	Return value of _I2C1_WriteByte is never used
  5830                           
  5831                           
  5832                           ;i2cbysk.c: 312: }
  5833                           ;i2cbysk.c: 315: SSP2BUF = i2c1Data;
  5834  13B4  0870               	movf	I2C1_WriteByte@i2c1Data,w
  5835  13B5  0099               	movwf	25	;volatile
  5836  13B6                     l758:	
  5837                           ;i2cbysk.c: 317: {
  5838                           
  5839                           ;i2cbysk.c: 316: while (SSP2STATbits.BF || SSP2STATbits.R_nW)
  5840                           
  5841  13B6  1C1C               	btfss	28,0	;volatile
  5842  13B7  191C               	btfsc	28,2	;volatile
  5843  13B8  2BB6               	goto	l758
  5844                           
  5845                           ;i2cbysk.c: 318: }
  5846                           ;i2cbysk.c: 321: if ( SSP2CON2bits.ACKSTAT )
  5847  13B9  1F1E               	btfss	30,6	;volatile
  5848  13BA  2BBF               	goto	l761
  5849                           
  5850                           ;i2cbysk.c: 322: {
  5851                           ;i2cbysk.c: 323: SSP2CON2bits.PEN = 1;
  5852  13BB  151E               	bsf	30,2	;volatile
  5853  13BC                     l762:	
  5854                           ;i2cbysk.c: 325: {
  5855                           
  5856                           ;i2cbysk.c: 324: while (SSP2CON2bits.PEN)
  5857                           
  5858  13BC  1D1E               	btfss	30,2	;volatile
  5859  13BD  0008               	return
  5860  13BE  2BBC               	goto	l762
  5861  13BF                     l761:	
  5862                           ;i2cbysk.c: 326: }
  5863                           ;i2cbysk.c: 327: return I2C1_ACK_NOT_RECEIVED;
  5864                           ;	Return value of _I2C1_WriteByte is never used
  5865                           
  5866                           
  5867                           ;i2cbysk.c: 328: }
  5868                           ;i2cbysk.c: 331: if (PIR2bits.BCL1IF)
  5869  13BF  0020               	movlb	0	; select bank0
  5870  13C0  1D92               	btfss	18,3	;volatile
  5871  13C1  2BC4               	goto	l765
  5872                           
  5873                           ;i2cbysk.c: 332: {
  5874                           ;i2cbysk.c: 333: PIR2bits.BCL1IF = 0;
  5875  13C2  1192               	bcf	18,3	;volatile
  5876                           
  5877                           ;i2cbysk.c: 334: return I2C1_BUS_COLLISION;
  5878                           ;	Return value of _I2C1_WriteByte is never used
  5879  13C3  0008               	return
  5880  13C4                     l765:	
  5881                           
  5882                           ;i2cbysk.c: 335: }
  5883                           ;i2cbysk.c: 338: SSP2CON2bits.PEN = 1;
  5884  13C4  0024               	movlb	4	; select bank4
  5885  13C5  151E               	bsf	30,2	;volatile
  5886  13C6                     l766:	
  5887                           ;i2cbysk.c: 340: {
  5888                           
  5889                           ;i2cbysk.c: 339: while (SSP2CON2bits.PEN)
  5890                           
  5891  13C6  191E               	btfsc	30,2	;volatile
  5892  13C7  2BC6               	goto	l766
  5893                           
  5894                           ;i2cbysk.c: 341: }
  5895                           ;i2cbysk.c: 344: if(PIR2bits.BCL1IF)
  5896  13C8  0020               	movlb	0	; select bank0
  5897  13C9  1D92               	btfss	18,3	;volatile
  5898  13CA  0008               	return
  5899                           
  5900                           ;i2cbysk.c: 345: {
  5901                           ;i2cbysk.c: 346: PIR2bits.BCL1IF = 0;
  5902  13CB  1192               	bcf	18,3	;volatile
  5903                           
  5904                           ;i2cbysk.c: 347: return I2C1_BUS_COLLISION;
  5905                           ;	Return value of _I2C1_WriteByte is never used
  5906  13CC  0008               	return
  5907  13CD                     __end_of_I2C1_WriteByte:	
  5908                           ;i2cbysk.c: 348: }
  5909                           ;i2cbysk.c: 349: return I2C1_SUCCESS;
  5910                           ;	Return value of _I2C1_WriteByte is never used
  5911                           
  5912                           
  5913                           	psect	text13
  5914  0AFA                     __ptext13:	
  5915 ;; *************** function _I2C1_ReadFrame *****************
  5916 ;; Defined at:
  5917 ;;		line 91 in file "i2cbysk.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  i2c1SlaveAdd    1    wreg     unsigned char 
  5920 ;;  i2c1ReadPoin    1    0[COMMON] PTR unsigned char 
  5921 ;;		 -> si7021_ReadTemperature@readData(2), si7021_ReadHumidity@readData(2), 
  5922 ;;  i2c1FrameLen    1    1[COMMON] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  i2c1SlaveAdd    1    3[COMMON] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      unsigned char 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;Total ram usage:        4 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_si7021_ReadHumidity
  5944 ;;		_si7021_ReadTemperature
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           
  5949                           ;psect for function _I2C1_ReadFrame
  5950  0AFA                     _I2C1_ReadFrame:	
  5951                           
  5952                           ;incstack = 0
  5953                           ; Regs used in _I2C1_ReadFrame: [wreg+fsr1l+fsr1h+status,2+status,0]
  5954                           ;I2C1_ReadFrame@i2c1SlaveAddress stored from wreg
  5955  0AFA  00F3               	movwf	I2C1_ReadFrame@i2c1SlaveAddress
  5956                           
  5957                           ;i2cbysk.c: 93: if(SSP2STATbits.S)
  5958  0AFB  0024               	movlb	4	; select bank4
  5959  0AFC  199C               	btfsc	28,3	;volatile
  5960  0AFD  0008               	return
  5961                           
  5962                           ;i2cbysk.c: 96: }
  5963                           ;i2cbysk.c: 99: SSP2CON2bits.SEN = 1;
  5964                           
  5965                           ;i2cbysk.c: 94: {
  5966                           ;i2cbysk.c: 95: return I2C1_BUS_BUSY;
  5967                           ;	Return value of _I2C1_ReadFrame is never used
  5968  0AFE  141E               	bsf	30,0	;volatile
  5969  0AFF                     l681:	
  5970                           ;i2cbysk.c: 101: {
  5971                           
  5972                           ;i2cbysk.c: 100: while (SSP2CON2bits.SEN)
  5973                           
  5974  0AFF  181E               	btfsc	30,0	;volatile
  5975  0B00  2AFF               	goto	l681
  5976                           
  5977                           ;i2cbysk.c: 102: }
  5978                           ;i2cbysk.c: 105: if(PIR2bits.BCL1IF)
  5979  0B01  0020               	movlb	0	; select bank0
  5980  0B02  1D92               	btfss	18,3	;volatile
  5981  0B03  2B06               	goto	l3672
  5982                           
  5983                           ;i2cbysk.c: 106: {
  5984                           ;i2cbysk.c: 107: PIR2bits.BCL1IF = 0;
  5985  0B04  1192               	bcf	18,3	;volatile
  5986                           
  5987                           ;i2cbysk.c: 108: return I2C1_BUS_COLLISION;
  5988                           ;	Return value of _I2C1_ReadFrame is never used
  5989  0B05  0008               	return
  5990  0B06                     l3672:	
  5991                           
  5992                           ;i2cbysk.c: 109: }
  5993                           ;i2cbysk.c: 112: SSP2BUF = i2c1SlaveAddress | 0x01;
  5994  0B06  0873               	movf	I2C1_ReadFrame@i2c1SlaveAddress,w
  5995  0B07  3801               	iorlw	1
  5996  0B08  0024               	movlb	4	; select bank4
  5997  0B09  0099               	movwf	25	;volatile
  5998  0B0A                     l685:	
  5999                           ;i2cbysk.c: 113: while ((SSP2STATbits.BF || SSP2STATbits.R_nW) && !PIR2bits.BCL1IF);
  6000                           
  6001  0B0A  0024               	movlb	4	; select bank4
  6002  0B0B  181C               	btfsc	28,0	;volatile
  6003  0B0C  2B0F               	goto	l690
  6004  0B0D  1D1C               	btfss	28,2	;volatile
  6005  0B0E  2B12               	goto	l691
  6006  0B0F                     l690:	
  6007  0B0F  0020               	movlb	0	; select bank0
  6008  0B10  1D92               	btfss	18,3	;volatile
  6009  0B11  2B0A               	goto	l685
  6010  0B12                     l691:	
  6011                           
  6012                           ;i2cbysk.c: 116: if(PIR2bits.BCL1IF)
  6013  0B12  0020               	movlb	0	; select bank0
  6014  0B13  1D92               	btfss	18,3	;volatile
  6015  0B14  2B17               	goto	l692
  6016                           
  6017                           ;i2cbysk.c: 117: {
  6018                           ;i2cbysk.c: 118: PIR2bits.BCL1IF = 0;
  6019  0B15  1192               	bcf	18,3	;volatile
  6020                           
  6021                           ;i2cbysk.c: 119: return I2C1_BUS_COLLISION;
  6022                           ;	Return value of _I2C1_ReadFrame is never used
  6023  0B16  0008               	return
  6024  0B17                     l692:	
  6025                           
  6026                           ;i2cbysk.c: 120: }
  6027                           ;i2cbysk.c: 123: if (SSP2CON2bits.ACKSTAT)
  6028  0B17  0024               	movlb	4	; select bank4
  6029  0B18  1F1E               	btfss	30,6	;volatile
  6030  0B19  2B3D               	goto	l3694
  6031                           
  6032                           ;i2cbysk.c: 124: {
  6033                           ;i2cbysk.c: 125: SSP2CON2bits.PEN = 1;
  6034  0B1A  151E               	bsf	30,2	;volatile
  6035  0B1B                     l694:	
  6036                           ;i2cbysk.c: 127: {
  6037                           
  6038                           ;i2cbysk.c: 126: while(SSP2CON2bits.PEN)
  6039                           
  6040  0B1B  1D1E               	btfss	30,2	;volatile
  6041  0B1C  0008               	return
  6042  0B1D  2B1B               	goto	l694
  6043  0B1E                     l698:	
  6044                           ;i2cbysk.c: 130: }
  6045                           ;i2cbysk.c: 133: while (i2c1FrameLength)
  6046                           
  6047                           ;i2cbysk.c: 128: }
  6048                           ;i2cbysk.c: 129: return I2C1_ACK_NOT_RECEIVED;
  6049                           ;	Return value of _I2C1_ReadFrame is never used
  6050                           
  6051                           
  6052                           ;i2cbysk.c: 134: {
  6053                           ;i2cbysk.c: 136: SSP2CON2bits.RCEN = 1;
  6054  0B1E  0024               	movlb	4	; select bank4
  6055  0B1F  159E               	bsf	30,3	;volatile
  6056  0B20                     l699:	
  6057                           ;i2cbysk.c: 138: {
  6058                           
  6059                           ;i2cbysk.c: 137: while(SSP2CON2bits.RCEN)
  6060                           
  6061  0B20  199E               	btfsc	30,3	;volatile
  6062  0B21  2B20               	goto	l699
  6063                           
  6064                           ;i2cbysk.c: 139: }
  6065                           ;i2cbysk.c: 140: *i2c1ReadPointer++ = SSP2BUF;
  6066  0B22  0819               	movf	25,w	;volatile
  6067  0B23  00F2               	movwf	??_I2C1_ReadFrame
  6068  0B24  0870               	movf	I2C1_ReadFrame@i2c1ReadPointer,w
  6069  0B25  0086               	movwf	6
  6070  0B26  0187               	clrf	7
  6071  0B27  0872               	movf	??_I2C1_ReadFrame,w
  6072  0B28  0081               	movwf	1
  6073  0B29  3001               	movlw	1
  6074  0B2A  00F2               	movwf	??_I2C1_ReadFrame
  6075  0B2B  0872               	movf	??_I2C1_ReadFrame,w
  6076  0B2C  07F0               	addwf	I2C1_ReadFrame@i2c1ReadPointer,f
  6077                           
  6078                           ;i2cbysk.c: 143: if(i2c1FrameLength == 1)
  6079  0B2D  0371               	decf	I2C1_ReadFrame@i2c1FrameLength,w
  6080  0B2E  1D03               	btfss	3,2
  6081  0B2F  2B32               	goto	l702
  6082                           
  6083                           ;i2cbysk.c: 144: {
  6084                           ;i2cbysk.c: 145: SSP2CON2bits.ACKDT = 1;
  6085  0B30  169E               	bsf	30,5	;volatile
  6086                           
  6087                           ;i2cbysk.c: 146: }
  6088  0B31  2B33               	goto	l703
  6089  0B32                     l702:	
  6090                           
  6091                           ;i2cbysk.c: 147: else
  6092                           ;i2cbysk.c: 148: {
  6093                           ;i2cbysk.c: 149: SSP2CON2bits.ACKDT = 0;
  6094  0B32  129E               	bcf	30,5	;volatile
  6095  0B33                     l703:	
  6096                           
  6097                           ;i2cbysk.c: 150: }
  6098                           ;i2cbysk.c: 152: SSP2CON2bits.ACKEN = 1;
  6099  0B33  161E               	bsf	30,4	;volatile
  6100  0B34                     l704:	
  6101                           ;i2cbysk.c: 154: {
  6102                           
  6103                           ;i2cbysk.c: 153: while (SSP2CON2bits.ACKEN)
  6104                           
  6105  0B34  1A1E               	btfsc	30,4	;volatile
  6106  0B35  2B34               	goto	l704
  6107                           
  6108                           ;i2cbysk.c: 155: }
  6109                           ;i2cbysk.c: 156: i2c1FrameLength--;
  6110  0B36  3001               	movlw	1
  6111  0B37  02F1               	subwf	I2C1_ReadFrame@i2c1FrameLength,f
  6112                           
  6113                           ;i2cbysk.c: 159: if (PIR2bits.BCL1IF)
  6114  0B38  0020               	movlb	0	; select bank0
  6115  0B39  1D92               	btfss	18,3	;volatile
  6116  0B3A  2B3D               	goto	l3694
  6117                           
  6118                           ;i2cbysk.c: 160: {
  6119                           ;i2cbysk.c: 161: PIR2bits.BCL1IF = 0;
  6120  0B3B  1192               	bcf	18,3	;volatile
  6121                           
  6122                           ;i2cbysk.c: 162: return I2C1_BUS_COLLISION;
  6123                           ;	Return value of _I2C1_ReadFrame is never used
  6124  0B3C  0008               	return
  6125  0B3D                     l3694:	
  6126  0B3D  0871               	movf	I2C1_ReadFrame@i2c1FrameLength,w
  6127  0B3E  1D03               	btfss	3,2
  6128  0B3F  2B1E               	goto	l698
  6129                           
  6130                           ;i2cbysk.c: 163: }
  6131                           ;i2cbysk.c: 165: }
  6132                           ;i2cbysk.c: 167: SSP2CON2bits.PEN = 1;
  6133  0B40  0024               	movlb	4	; select bank4
  6134  0B41  151E               	bsf	30,2	;volatile
  6135  0B42                     l709:	
  6136                           ;i2cbysk.c: 169: {
  6137                           
  6138                           ;i2cbysk.c: 168: while (SSP2CON2bits.PEN)
  6139                           
  6140  0B42  191E               	btfsc	30,2	;volatile
  6141  0B43  2B42               	goto	l709
  6142                           
  6143                           ;i2cbysk.c: 170: }
  6144                           ;i2cbysk.c: 173: if (PIR2bits.BCL1IF)
  6145  0B44  0020               	movlb	0	; select bank0
  6146  0B45  1D92               	btfss	18,3	;volatile
  6147  0B46  0008               	return
  6148                           
  6149                           ;i2cbysk.c: 174: {
  6150                           ;i2cbysk.c: 175: PIR2bits.BCL1IF=0;
  6151  0B47  1192               	bcf	18,3	;volatile
  6152                           
  6153                           ;i2cbysk.c: 176: return I2C1_BUS_COLLISION;
  6154                           ;	Return value of _I2C1_ReadFrame is never used
  6155  0B48  0008               	return
  6156  0B49                     __end_of_I2C1_ReadFrame:	
  6157                           ;i2cbysk.c: 177: }
  6158                           ;i2cbysk.c: 178: return I2C1_SUCCESS;
  6159                           ;	Return value of _I2C1_ReadFrame is never used
  6160                           
  6161                           
  6162                           	psect	text14
  6163  0C47                     __ptext14:	
  6164 ;; *************** function ___fttol *****************
  6165 ;; Defined at:
  6166 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  f1              3   60[BANK0 ] float 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  lval            4   69[BANK0 ] unsigned long 
  6171 ;;  exp1            1   73[BANK0 ] unsigned char 
  6172 ;;  sign1           1   68[BANK0 ] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  4   60[BANK0 ] long 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;Total ram usage:       14 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_sb_readTemperature
  6192 ;;		_sb_readHumidity
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function ___fttol
  6198  0C47                     ___fttol:	
  6199                           
  6200                           ;incstack = 0
  6201                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6202  0C47  0020               	movlb	0	; select bank0
  6203  0C48  085C               	movf	___fttol@f1,w
  6204  0C49  00E0               	movwf	??___fttol
  6205  0C4A  085D               	movf	___fttol@f1+1,w
  6206  0C4B  00E1               	movwf	??___fttol+1
  6207  0C4C  085E               	movf	___fttol@f1+2,w
  6208  0C4D  00E2               	movwf	??___fttol+2
  6209  0C4E  1003               	clrc
  6210  0C4F  0D61               	rlf	??___fttol+1,w
  6211  0C50  0D62               	rlf	??___fttol+2,w
  6212  0C51  00E3               	movwf	??___fttol+3
  6213  0C52  0863               	movf	??___fttol+3,w
  6214  0C53  00E9               	movwf	___fttol@exp1
  6215  0C54  0869               	movf	___fttol@exp1,w
  6216  0C55  1D03               	btfss	3,2
  6217  0C56  2C60               	goto	l4696
  6218  0C57  3000               	movlw	0
  6219  0C58  00DF               	movwf	?___fttol+3
  6220  0C59  3000               	movlw	0
  6221  0C5A  00DE               	movwf	?___fttol+2
  6222  0C5B  3000               	movlw	0
  6223  0C5C  00DD               	movwf	?___fttol+1
  6224  0C5D  3000               	movlw	0
  6225  0C5E  00DC               	movwf	?___fttol
  6226  0C5F  0008               	return
  6227  0C60                     l4696:	
  6228  0C60  085C               	movf	___fttol@f1,w
  6229  0C61  00E0               	movwf	??___fttol
  6230  0C62  085D               	movf	___fttol@f1+1,w
  6231  0C63  00E1               	movwf	??___fttol+1
  6232  0C64  085E               	movf	___fttol@f1+2,w
  6233  0C65  00E2               	movwf	??___fttol+2
  6234  0C66  3017               	movlw	23
  6235  0C67                     u5515:	
  6236  0C67  36E2               	lsrf	??___fttol+2,f
  6237  0C68  0CE1               	rrf	??___fttol+1,f
  6238  0C69  0CE0               	rrf	??___fttol,f
  6239  0C6A  0B89               	decfsz	9,f
  6240  0C6B  2C67               	goto	u5515
  6241  0C6C  0860               	movf	??___fttol,w
  6242  0C6D  00E3               	movwf	??___fttol+3
  6243  0C6E  0863               	movf	??___fttol+3,w
  6244  0C6F  00E4               	movwf	___fttol@sign1
  6245  0C70  17DD               	bsf	___fttol@f1+1,7
  6246  0C71  30FF               	movlw	255
  6247  0C72  05DC               	andwf	___fttol@f1,f
  6248  0C73  30FF               	movlw	255
  6249  0C74  05DD               	andwf	___fttol@f1+1,f
  6250  0C75  3000               	movlw	0
  6251  0C76  05DE               	andwf	___fttol@f1+2,f
  6252  0C77  085C               	movf	___fttol@f1,w
  6253  0C78  00E5               	movwf	___fttol@lval
  6254  0C79  085D               	movf	___fttol@f1+1,w
  6255  0C7A  00E6               	movwf	___fttol@lval+1
  6256  0C7B  085E               	movf	___fttol@f1+2,w
  6257  0C7C  00E7               	movwf	___fttol@lval+2
  6258  0C7D  01E8               	clrf	___fttol@lval+3
  6259  0C7E  308E               	movlw	142
  6260  0C7F  02E9               	subwf	___fttol@exp1,f
  6261  0C80  1FE9               	btfss	___fttol@exp1,7
  6262  0C81  2C9E               	goto	l4716
  6263  0C82  0869               	movf	___fttol@exp1,w
  6264  0C83  3A80               	xorlw	128
  6265  0C84  3E8F               	addlw	143
  6266  0C85  1803               	skipnc
  6267  0C86  2C90               	goto	l4714
  6268  0C87  3000               	movlw	0
  6269  0C88  00DF               	movwf	?___fttol+3
  6270  0C89  3000               	movlw	0
  6271  0C8A  00DE               	movwf	?___fttol+2
  6272  0C8B  3000               	movlw	0
  6273  0C8C  00DD               	movwf	?___fttol+1
  6274  0C8D  3000               	movlw	0
  6275  0C8E  00DC               	movwf	?___fttol
  6276  0C8F  0008               	return
  6277  0C90                     l4714:	
  6278  0C90  3001               	movlw	1
  6279  0C91                     u5545:	
  6280  0C91  36E8               	lsrf	___fttol@lval+3,f
  6281  0C92  0CE7               	rrf	___fttol@lval+2,f
  6282  0C93  0CE6               	rrf	___fttol@lval+1,f
  6283  0C94  0CE5               	rrf	___fttol@lval,f
  6284  0C95  0B89               	decfsz	9,f
  6285  0C96  2C91               	goto	u5545
  6286  0C97  3001               	movlw	1
  6287  0C98  00E0               	movwf	??___fttol
  6288  0C99  0860               	movf	??___fttol,w
  6289  0C9A  07E9               	addwf	___fttol@exp1,f
  6290  0C9B  1903               	btfsc	3,2
  6291  0C9C  2CB7               	goto	l4724
  6292  0C9D  2C90               	goto	l4714
  6293  0C9E                     l4716:	
  6294  0C9E  3018               	movlw	24
  6295  0C9F  0269               	subwf	___fttol@exp1,w
  6296  0CA0  1C03               	skipc
  6297  0CA1  2CB4               	goto	l1501
  6298  0CA2  3000               	movlw	0
  6299  0CA3  00DF               	movwf	?___fttol+3
  6300  0CA4  3000               	movlw	0
  6301  0CA5  00DE               	movwf	?___fttol+2
  6302  0CA6  3000               	movlw	0
  6303  0CA7  00DD               	movwf	?___fttol+1
  6304  0CA8  3000               	movlw	0
  6305  0CA9  00DC               	movwf	?___fttol
  6306  0CAA  0008               	return
  6307  0CAB                     l4722:	
  6308  0CAB  3001               	movlw	1
  6309  0CAC                     u5575:	
  6310  0CAC  35E5               	lslf	___fttol@lval,f
  6311  0CAD  0DE6               	rlf	___fttol@lval+1,f
  6312  0CAE  0DE7               	rlf	___fttol@lval+2,f
  6313  0CAF  0DE8               	rlf	___fttol@lval+3,f
  6314  0CB0  0B89               	decfsz	9,f
  6315  0CB1  2CAC               	goto	u5575
  6316  0CB2  3001               	movlw	1
  6317  0CB3  02E9               	subwf	___fttol@exp1,f
  6318  0CB4                     l1501:	
  6319  0CB4  0869               	movf	___fttol@exp1,w
  6320  0CB5  1D03               	btfss	3,2
  6321  0CB6  2CAB               	goto	l4722
  6322  0CB7                     l4724:	
  6323  0CB7  0864               	movf	___fttol@sign1,w
  6324  0CB8  1903               	btfsc	3,2
  6325  0CB9  2CC5               	goto	l4728
  6326  0CBA  09E5               	comf	___fttol@lval,f
  6327  0CBB  09E6               	comf	___fttol@lval+1,f
  6328  0CBC  09E7               	comf	___fttol@lval+2,f
  6329  0CBD  09E8               	comf	___fttol@lval+3,f
  6330  0CBE  0AE5               	incf	___fttol@lval,f
  6331  0CBF  1903               	skipnz
  6332  0CC0  0AE6               	incf	___fttol@lval+1,f
  6333  0CC1  1903               	skipnz
  6334  0CC2  0AE7               	incf	___fttol@lval+2,f
  6335  0CC3  1903               	skipnz
  6336  0CC4  0AE8               	incf	___fttol@lval+3,f
  6337  0CC5                     l4728:	
  6338  0CC5  0868               	movf	___fttol@lval+3,w
  6339  0CC6  00DF               	movwf	?___fttol+3
  6340  0CC7  0867               	movf	___fttol@lval+2,w
  6341  0CC8  00DE               	movwf	?___fttol+2
  6342  0CC9  0866               	movf	___fttol@lval+1,w
  6343  0CCA  00DD               	movwf	?___fttol+1
  6344  0CCB  0865               	movf	___fttol@lval,w
  6345  0CCC  00DC               	movwf	?___fttol
  6346  0CCD  0008               	return
  6347  0CCE                     __end_of___fttol:	
  6348                           
  6349                           	psect	text15
  6350  10CF                     __ptext15:	
  6351 ;; *************** function _printf *****************
  6352 ;; Defined at:
  6353 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  f               2   31[BANK0 ] PTR const unsigned char 
  6356 ;;		 -> STR_40(19), STR_38(20), STR_32(10), STR_31(9), 
  6357 ;;		 -> STR_30(9), STR_29(9), STR_28(16), STR_27(8), 
  6358 ;;		 -> STR_26(7), STR_25(9), STR_24(17), STR_23(8), 
  6359 ;;		 -> STR_22(6), STR_21(6), STR_20(14), STR_9(3), 
  6360 ;;		 -> STR_8(5), STR_7(4), STR_6(8), STR_5(3), 
  6361 ;;		 -> STR_4(8), STR_3(8), STR_2(42), STR_1(79), 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  pb              3   47[BANK0 ] struct __prbuf
  6364 ;;  ap              1   46[BANK0 ] PTR void [1]
  6365 ;;		 -> ?_sprintf(2), ?_printf(2), 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  2   31[BANK0 ] int 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6375 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;Total ram usage:       19 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    2
  6382 ;; This function calls:
  6383 ;;		__doprnt
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;;		_nrf_print_status
  6387 ;;		_nrf_print_observe_tx
  6388 ;;		_nrf_print_byte_register
  6389 ;;		_nrf_print_address_register
  6390 ;;		_nrf_printDetails
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function _printf
  6396  10CF                     _printf:	
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6400  10CF  0020               	movlb	0	; select bank0
  6401  10D0  01CF               	clrf	printf@pb
  6402  10D1  30B4               	movlw	low _putch
  6403  10D2  00D0               	movwf	low ((printf@pb| 0+1))
  6404  10D3  301F               	movlw	high _putch
  6405  10D4  00D1               	movwf	(low ((printf@pb| 0+1))+1)
  6406  10D5  3041               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6407  10D6  00CD               	movwf	??_printf
  6408  10D7  084D               	movf	??_printf,w
  6409  10D8  00CE               	movwf	printf@ap
  6410                           
  6411                           ;	Return value of _printf is never used
  6412  10D9  0840               	movf	printf@f+1,w
  6413  10DA  00A1               	movwf	__doprnt@f+1
  6414  10DB  083F               	movf	printf@f,w
  6415  10DC  00A0               	movwf	__doprnt@f
  6416  10DD  304E               	movlw	(low (printf@ap| 0))& (0+255)
  6417  10DE  00CD               	movwf	??_printf
  6418  10DF  084D               	movf	??_printf,w
  6419  10E0  00A2               	movwf	__doprnt@ap
  6420  10E1  304F               	movlw	(low (printf@pb| 0))& (0+255)
  6421  10E2  3181  217C         	fcall	__doprnt
  6422  10E4  0008               	return
  6423  10E5                     __end_of_printf:	
  6424                           
  6425                           	psect	text16
  6426  017C                     __ptext16:	
  6427 ;; *************** function __doprnt *****************
  6428 ;; Defined at:
  6429 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  pb              1    wreg     PTR struct __prbuf
  6432 ;;		 -> sprintf@pb(3), printf@pb(3), 
  6433 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  6434 ;;		 -> STR_40(19), STR_39(24), STR_38(20), STR_32(10), 
  6435 ;;		 -> STR_31(9), STR_30(9), STR_29(9), STR_28(16), 
  6436 ;;		 -> STR_27(8), STR_26(7), STR_25(9), STR_24(17), 
  6437 ;;		 -> STR_23(8), STR_22(6), STR_21(6), STR_20(14), 
  6438 ;;		 -> STR_9(3), STR_8(5), STR_7(4), STR_6(8), 
  6439 ;;		 -> STR_5(3), STR_4(8), STR_3(8), STR_2(42), 
  6440 ;;		 -> STR_1(79), 
  6441 ;;  ap              1    2[BANK0 ] PTR PTR void 
  6442 ;;		 -> sprintf@ap(1), printf@ap(1), 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  pb              1   30[BANK0 ] PTR struct __prbuf
  6445 ;;		 -> sprintf@pb(3), printf@pb(3), 
  6446 ;;  idx             1   17[BANK0 ] unsigned char 
  6447 ;;  tmpval          4    0        struct .
  6448 ;;  flag            2   28[BANK0 ] unsigned short 
  6449 ;;  width           2   25[BANK0 ] int 
  6450 ;;  val             2   22[BANK0 ] unsigned int 
  6451 ;;  len             2   20[BANK0 ] unsigned int 
  6452 ;;  cp              2   18[BANK0 ] PTR const unsigned char 
  6453 ;;		 -> ?_sprintf(2), ?_printf(2), STR_50(7), _doprnt@c(1), 
  6454 ;;		 -> NULL(0), STR_19(14), STR_18(7), STR_17(9), 
  6455 ;;		 -> STR_16(6), STR_15(10), STR_14(6), STR_13(11), 
  6456 ;;		 -> STR_12(8), STR_11(13), STR_10(13), sendPayload(32), 
  6457 ;;  c               1   27[BANK0 ] char 
  6458 ;;  prec            1   24[BANK0 ] char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2    0[BANK0 ] int 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6468 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;Total ram usage:       31 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    1
  6475 ;; This function calls:
  6476 ;;		Absolute function
  6477 ;;		___bmul
  6478 ;;		___lwdiv
  6479 ;;		___lwmod
  6480 ;;		___wmul
  6481 ;;		_isdigit
  6482 ;;		_putch
  6483 ;; This function is called by:
  6484 ;;		_printf
  6485 ;;		_sprintf
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           
  6490                           ;psect for function __doprnt
  6491  017C                     __doprnt:	
  6492                           
  6493                           ;incstack = 0
  6494                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6495                           ;__doprnt@pb stored from wreg
  6496  017C  0020               	movlb	0	; select bank0
  6497  017D  00BE               	movwf	__doprnt@pb
  6498  017E                     l4684:	
  6499                           ;doprnt.c: 499: signed char c;
  6500                           ;doprnt.c: 501: int width;
  6501                           ;doprnt.c: 506: signed char prec;
  6502                           ;doprnt.c: 508: unsigned short flag;
  6503                           ;doprnt.c: 523: union {
  6504                           ;doprnt.c: 524: unsigned long vd;
  6505                           ;doprnt.c: 525: double integ;
  6506                           ;doprnt.c: 526: } tmpval;
  6507                           ;doprnt.c: 528: unsigned int val;
  6508                           ;doprnt.c: 529: unsigned len;
  6509                           ;doprnt.c: 530: const char * cp;
  6510                           ;doprnt.c: 536: while(c = *f++) {
  6511                           
  6512  017E  0020               	movlb	0	; select bank0
  6513  017F  0821               	movf	__doprnt@f+1,w
  6514  0180  00A4               	movwf	??__doprnt+1
  6515  0181  0820               	movf	__doprnt@f,w
  6516  0182  00A3               	movwf	??__doprnt
  6517  0183  0AA0               	incf	__doprnt@f,f
  6518  0184  1903               	skipnz
  6519  0185  0AA1               	incf	__doprnt@f+1,f
  6520  0186  0823               	movf	??__doprnt,w
  6521  0187  0084               	movwf	4
  6522  0188  0824               	movf	??__doprnt+1,w
  6523  0189  0085               	movwf	5
  6524  018A  0800               	movf	0,w	;code access
  6525  018B  00A5               	movwf	??__doprnt+2
  6526  018C  0825               	movf	??__doprnt+2,w
  6527  018D  00BB               	movwf	__doprnt@c
  6528  018E  083B               	movf	__doprnt@c,w
  6529  018F  1903               	btfsc	3,2
  6530  0190  2FDF               	goto	l4686
  6531                           
  6532                           ;doprnt.c: 538: if(c != '%')
  6533  0191  3025               	movlw	37
  6534  0192  063B               	xorwf	__doprnt@c,w
  6535  0193  1903               	btfsc	3,2
  6536  0194  29BD               	goto	l4290
  6537                           
  6538                           ;doprnt.c: 540: {
  6539                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  6540  0195  0A3E               	incf	__doprnt@pb,w
  6541  0196  0086               	movwf	6
  6542  0197  0187               	clrf	7
  6543  0198  0016               	moviw fsr1++
  6544  0199  0401               	iorwf	1,w
  6545  019A  1903               	btfsc	3,2
  6546  019B  29A9               	goto	l4286
  6547  019C  083B               	movf	__doprnt@c,w
  6548  019D  00A3               	movwf	??__doprnt
  6549  019E  0823               	movf	??__doprnt,w
  6550  019F  00F0               	movwf	putch@data
  6551  01A0  0A3E               	incf	__doprnt@pb,w
  6552  01A1  0086               	movwf	6
  6553  01A2  0187               	clrf	7
  6554  01A3  3F41               	moviw [1]fsr1
  6555  01A4  008A               	movwf	10
  6556  01A5  3F40               	moviw [0]fsr1
  6557  01A6  000A               	callw
  6558  01A7  3181               	pagesel	$
  6559  01A8  297E               	goto	l4684
  6560  01A9                     l4286:	
  6561  01A9  0020               	movlb	0	; select bank0
  6562  01AA  083B               	movf	__doprnt@c,w
  6563  01AB  00A3               	movwf	??__doprnt
  6564  01AC  083E               	movf	__doprnt@pb,w
  6565  01AD  0086               	movwf	6
  6566  01AE  0187               	clrf	7
  6567  01AF  0801               	movf	1,w
  6568  01B0  0086               	movwf	6
  6569  01B1  3001               	movlw	1	; select bank2/3
  6570  01B2  0087               	movwf	7
  6571  01B3  0823               	movf	??__doprnt,w
  6572  01B4  0081               	movwf	1
  6573  01B5  3001               	movlw	1
  6574  01B6  00A3               	movwf	??__doprnt
  6575  01B7  083E               	movf	__doprnt@pb,w
  6576  01B8  0086               	movwf	6
  6577  01B9  0187               	clrf	7
  6578  01BA  0823               	movf	??__doprnt,w
  6579  01BB  0781               	addwf	1,f
  6580                           
  6581                           ;doprnt.c: 542: continue;
  6582  01BC  297E               	goto	l4684
  6583  01BD                     l4290:	
  6584                           
  6585                           ;doprnt.c: 543: }
  6586                           ;doprnt.c: 546: width = 0;
  6587  01BD  01B9               	clrf	__doprnt@width
  6588  01BE  01BA               	clrf	__doprnt@width+1
  6589                           
  6590                           ;doprnt.c: 548: flag = 0;
  6591  01BF  01BC               	clrf	__doprnt@flag
  6592  01C0  01BD               	clrf	__doprnt@flag+1
  6593                           
  6594                           ;doprnt.c: 551: switch(*f) {
  6595                           
  6596                           ;doprnt.c: 550: for(;;) {
  6597  01C1  29CD               	goto	l4302
  6598  01C2                     l994:	
  6599                           ;doprnt.c: 553: case '-':
  6600                           
  6601                           
  6602                           ;doprnt.c: 554: flag |= 0x08;
  6603  01C2  15BC               	bsf	__doprnt@flag,3
  6604  01C3  29C9               	goto	l4298
  6605  01C4                     l996:	
  6606                           ;doprnt.c: 560: case ' ':
  6607                           
  6608                           ;doprnt.c: 556: continue;
  6609                           
  6610                           ;doprnt.c: 555: f++;
  6611                           
  6612                           
  6613                           ;doprnt.c: 561: flag |= 0x01;
  6614  01C4  143C               	bsf	__doprnt@flag,0
  6615  01C5  29C9               	goto	l4298
  6616  01C6                     l997:	
  6617                           ;doprnt.c: 573: case '#':
  6618                           
  6619                           ;doprnt.c: 563: continue;
  6620                           
  6621                           ;doprnt.c: 562: f++;
  6622                           
  6623                           
  6624                           ;doprnt.c: 574: flag |= 0x800;
  6625  01C6  15BD               	bsf	__doprnt@flag+1,3
  6626  01C7  29C9               	goto	l4298
  6627  01C8                     l998:	
  6628                           ;doprnt.c: 579: case '0':
  6629                           
  6630                           ;doprnt.c: 576: continue;
  6631                           
  6632                           ;doprnt.c: 575: f++;
  6633                           
  6634                           
  6635                           ;doprnt.c: 580: flag |= 0x04;
  6636  01C8  153C               	bsf	__doprnt@flag,2
  6637  01C9                     l4298:	
  6638                           
  6639                           ;doprnt.c: 581: f++;
  6640  01C9  3001               	movlw	1
  6641  01CA  07A0               	addwf	__doprnt@f,f
  6642  01CB  3000               	movlw	0
  6643  01CC  3DA1               	addwfc	__doprnt@f+1,f
  6644  01CD                     l4302:	
  6645                           ;doprnt.c: 584: }
  6646                           
  6647                           ;doprnt.c: 582: continue;
  6648                           
  6649  01CD  0820               	movf	__doprnt@f,w
  6650  01CE  0084               	movwf	4
  6651  01CF  0821               	movf	__doprnt@f+1,w
  6652  01D0  0085               	movwf	5
  6653  01D1  0800               	movf	0,w	;code access
  6654                           
  6655                           ; Switch size 1, requested type "space"
  6656                           ; Number of cases is 4, Range of values is 32 to 48
  6657                           ; switch strategies available:
  6658                           ; Name         Instructions Cycles
  6659                           ; simple_byte           13     7 (average)
  6660                           ; direct_byte           43     9 (fixed)
  6661                           ; jumptable            263     9 (fixed)
  6662                           ;	Chosen strategy is simple_byte
  6663  01D2  3A20               	xorlw	32	; case 32
  6664  01D3  1903               	skipnz
  6665  01D4  29C4               	goto	l996
  6666  01D5  3A03               	xorlw	3	; case 35
  6667  01D6  1903               	skipnz
  6668  01D7  29C6               	goto	l997
  6669  01D8  3A0E               	xorlw	14	; case 45
  6670  01D9  1903               	skipnz
  6671  01DA  29C2               	goto	l994
  6672  01DB  3A1D               	xorlw	29	; case 48
  6673  01DC  1903               	skipnz
  6674  01DD  29C8               	goto	l998
  6675  01DE  29DF               	goto	l1000
  6676  01DF                     l1000:	
  6677                           ;doprnt.c: 586: }
  6678                           
  6679                           ;doprnt.c: 585: break;
  6680                           
  6681                           
  6682                           ;doprnt.c: 593: if(flag & 0x08)
  6683  01DF  1DBC               	btfss	__doprnt@flag,3
  6684  01E0  29E5               	goto	l4306
  6685                           
  6686                           ;doprnt.c: 594: flag &= ~0x04;
  6687  01E1  30FB               	movlw	251
  6688  01E2  05BC               	andwf	__doprnt@flag,f
  6689  01E3  30FF               	movlw	255
  6690  01E4  05BD               	andwf	__doprnt@flag+1,f
  6691  01E5                     l4306:	
  6692                           
  6693                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6694  01E5  0820               	movf	__doprnt@f,w
  6695  01E6  0084               	movwf	4
  6696  01E7  0821               	movf	__doprnt@f+1,w
  6697  01E8  0085               	movwf	5
  6698  01E9  0800               	movf	0,w	;code access
  6699  01EA  3190  2025  3181   	fcall	_isdigit
  6700  01ED  1C03               	btfss	3,0
  6701  01EE  2A21               	goto	l4318
  6702                           
  6703                           ;doprnt.c: 598: width = 0;
  6704  01EF  0020               	movlb	0	; select bank0
  6705  01F0  01B9               	clrf	__doprnt@width
  6706  01F1  01BA               	clrf	__doprnt@width+1
  6707  01F2                     l4310:	
  6708                           ;doprnt.c: 599: do {
  6709                           
  6710                           
  6711                           ;doprnt.c: 600: width *= 10;
  6712  01F2  300A               	movlw	10
  6713  01F3  00F0               	movwf	___wmul@multiplier
  6714  01F4  3000               	movlw	0
  6715  01F5  00F1               	movwf	___wmul@multiplier+1
  6716  01F6  0020               	movlb	0	; select bank0
  6717  01F7  083A               	movf	__doprnt@width+1,w
  6718  01F8  00F3               	movwf	___wmul@multiplicand+1
  6719  01F9  0839               	movf	__doprnt@width,w
  6720  01FA  00F2               	movwf	___wmul@multiplicand
  6721  01FB  3191  217B  3181   	fcall	___wmul
  6722  01FE  0871               	movf	?___wmul+1,w
  6723  01FF  0020               	movlb	0	; select bank0
  6724  0200  00BA               	movwf	__doprnt@width+1
  6725  0201  0870               	movf	?___wmul,w
  6726  0202  00B9               	movwf	__doprnt@width
  6727                           
  6728                           ;doprnt.c: 601: width += *f++ - '0';
  6729  0203  0820               	movf	__doprnt@f,w
  6730  0204  0084               	movwf	4
  6731  0205  0821               	movf	__doprnt@f+1,w
  6732  0206  0085               	movwf	5
  6733  0207  0800               	movf	0,w	;code access
  6734  0208  3ED0               	addlw	208
  6735  0209  00A3               	movwf	??__doprnt
  6736  020A  30FF               	movlw	255
  6737  020B  1803               	skipnc
  6738  020C  3000               	movlw	0
  6739  020D  00A4               	movwf	??__doprnt+1
  6740  020E  0823               	movf	??__doprnt,w
  6741  020F  07B9               	addwf	__doprnt@width,f
  6742  0210  0824               	movf	??__doprnt+1,w
  6743  0211  3DBA               	addwfc	__doprnt@width+1,f
  6744  0212  3001               	movlw	1
  6745  0213  07A0               	addwf	__doprnt@f,f
  6746  0214  3000               	movlw	0
  6747  0215  3DA1               	addwfc	__doprnt@f+1,f
  6748                           
  6749                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6750  0216  0820               	movf	__doprnt@f,w
  6751  0217  0084               	movwf	4
  6752  0218  0821               	movf	__doprnt@f+1,w
  6753  0219  0085               	movwf	5
  6754  021A  0800               	movf	0,w	;code access
  6755  021B  3190  2025  3181   	fcall	_isdigit
  6756  021E  1C03               	btfss	3,0
  6757  021F  2A3A               	goto	l4324
  6758  0220  29F2               	goto	l4310
  6759  0221                     l4318:	
  6760                           ;doprnt.c: 604: } else if(*f == '*') {
  6761                           
  6762  0221  0020               	movlb	0	; select bank0
  6763  0222  0820               	movf	__doprnt@f,w
  6764  0223  0084               	movwf	4
  6765  0224  0821               	movf	__doprnt@f+1,w
  6766  0225  0085               	movwf	5
  6767  0226  0012               	moviw fsr0++
  6768  0227  3A2A               	xorlw	42
  6769  0228  1D03               	btfss	3,2
  6770  0229  2A3A               	goto	l4324
  6771                           
  6772                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  6773  022A  0822               	movf	__doprnt@ap,w
  6774  022B  0086               	movwf	6
  6775  022C  0187               	clrf	7
  6776  022D  0801               	movf	1,w
  6777  022E  0084               	movwf	4
  6778  022F  0185               	clrf	5
  6779  0230  3002               	movlw	2
  6780  0231  0781               	addwf	1,f
  6781  0232  3F00               	moviw [0]fsr0
  6782  0233  00B9               	movwf	__doprnt@width
  6783  0234  3F01               	moviw [1]fsr0
  6784  0235  00BA               	movwf	__doprnt@width+1
  6785                           
  6786                           ;doprnt.c: 606: f++;
  6787  0236  3001               	movlw	1
  6788  0237  07A0               	addwf	__doprnt@f,f
  6789  0238  3000               	movlw	0
  6790  0239  3DA1               	addwfc	__doprnt@f+1,f
  6791  023A                     l4324:	
  6792                           
  6793                           ;doprnt.c: 608: }
  6794                           ;doprnt.c: 611: if(*f == '.') {
  6795  023A  0020               	movlb	0	; select bank0
  6796  023B  0820               	movf	__doprnt@f,w
  6797  023C  0084               	movwf	4
  6798  023D  0821               	movf	__doprnt@f+1,w
  6799  023E  0085               	movwf	5
  6800  023F  0012               	moviw fsr0++
  6801  0240  3A2E               	xorlw	46
  6802  0241  1D03               	btfss	3,2
  6803  0242  2A86               	goto	l4344
  6804                           
  6805                           ;doprnt.c: 612: flag |= 0x4000;
  6806  0243  173D               	bsf	__doprnt@flag+1,6
  6807                           
  6808                           ;doprnt.c: 613: f++;
  6809  0244  3001               	movlw	1
  6810  0245  07A0               	addwf	__doprnt@f,f
  6811  0246  3000               	movlw	0
  6812  0247  3DA1               	addwfc	__doprnt@f+1,f
  6813                           
  6814                           ;doprnt.c: 615: if(*f == '*') {
  6815  0248  0820               	movf	__doprnt@f,w
  6816  0249  0084               	movwf	4
  6817  024A  0821               	movf	__doprnt@f+1,w
  6818  024B  0085               	movwf	5
  6819  024C  0012               	moviw fsr0++
  6820  024D  3A2A               	xorlw	42
  6821  024E  1D03               	btfss	3,2
  6822  024F  2A61               	goto	l4336
  6823                           
  6824                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  6825  0250  0822               	movf	__doprnt@ap,w
  6826  0251  0086               	movwf	6
  6827  0252  0187               	clrf	7
  6828  0253  0801               	movf	1,w
  6829  0254  0084               	movwf	4
  6830  0255  0185               	clrf	5
  6831  0256  3002               	movlw	2
  6832  0257  0781               	addwf	1,f
  6833  0258  0800               	movf	0,w
  6834  0259  00A3               	movwf	??__doprnt
  6835  025A  0823               	movf	??__doprnt,w
  6836  025B  00B8               	movwf	__doprnt@prec
  6837                           
  6838                           ;doprnt.c: 617: f++;
  6839  025C  3001               	movlw	1
  6840  025D  07A0               	addwf	__doprnt@f,f
  6841  025E  3000               	movlw	0
  6842  025F  3DA1               	addwfc	__doprnt@f+1,f
  6843                           
  6844                           ;doprnt.c: 618: } else
  6845  0260  2B9D               	goto	l4420
  6846  0261                     l4336:	
  6847                           
  6848                           ;doprnt.c: 620: {
  6849                           ;doprnt.c: 621: prec = 0;
  6850  0261  01B8               	clrf	__doprnt@prec
  6851  0262                     l4342:	
  6852                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6853                           
  6854  0262  0820               	movf	__doprnt@f,w
  6855  0263  0084               	movwf	4
  6856  0264  0821               	movf	__doprnt@f+1,w
  6857  0265  0085               	movwf	5
  6858  0266  0800               	movf	0,w	;code access
  6859  0267  3190  2025  3181   	fcall	_isdigit
  6860  026A  1C03               	btfss	3,0
  6861  026B  2B9D               	goto	l4420
  6862                           
  6863                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6864  026C  0020               	movlb	0	; select bank0
  6865  026D  0820               	movf	__doprnt@f,w
  6866  026E  0084               	movwf	4
  6867  026F  0821               	movf	__doprnt@f+1,w
  6868  0270  0085               	movwf	5
  6869  0271  0800               	movf	0,w	;code access
  6870  0272  00A3               	movwf	??__doprnt
  6871  0273  300A               	movlw	10
  6872  0274  00A4               	movwf	??__doprnt+1
  6873  0275  0824               	movf	??__doprnt+1,w
  6874  0276  00F0               	movwf	___bmul@multiplicand
  6875  0277  0838               	movf	__doprnt@prec,w
  6876  0278  3190  2044  3181   	fcall	___bmul
  6877  027B  0020               	movlb	0	; select bank0
  6878  027C  0723               	addwf	??__doprnt,w
  6879  027D  3ED0               	addlw	-48
  6880  027E  00A5               	movwf	??__doprnt+2
  6881  027F  0825               	movf	??__doprnt+2,w
  6882  0280  00B8               	movwf	__doprnt@prec
  6883  0281  3001               	movlw	1
  6884  0282  07A0               	addwf	__doprnt@f,f
  6885  0283  3000               	movlw	0
  6886  0284  3DA1               	addwfc	__doprnt@f+1,f
  6887  0285  2A62               	goto	l4342
  6888  0286                     l4344:	
  6889                           ;doprnt.c: 624: }
  6890                           ;doprnt.c: 625: } else {
  6891                           
  6892                           
  6893                           ;doprnt.c: 626: prec = 0;
  6894  0286  0020               	movlb	0	; select bank0
  6895  0287  01B8               	clrf	__doprnt@prec
  6896                           
  6897                           ;doprnt.c: 630: }
  6898                           ;doprnt.c: 635: switch(c = *f++) {
  6899  0288  2B9D               	goto	l4420
  6900  0289                     l1017:	
  6901                           ;doprnt.c: 689: case 'o':
  6902                           
  6903                           ;doprnt.c: 638: goto alldone;
  6904                           
  6905                           ;doprnt.c: 637: case 0:
  6906                           
  6907                           
  6908                           ;doprnt.c: 691: flag |= 0x40;
  6909  0289  173C               	bsf	__doprnt@flag,6
  6910                           
  6911                           ;doprnt.c: 698: case 'i':
  6912                           ;doprnt.c: 699: break;
  6913                           
  6914                           ;doprnt.c: 697: case 'd':
  6915                           
  6916                           ;doprnt.c: 693: break;
  6917  028A  2BCA               	goto	l4422
  6918  028B                     l1022:	
  6919                           ;doprnt.c: 703: case 'p':
  6920                           
  6921                           
  6922                           ;doprnt.c: 712: case 'X':
  6923                           ;doprnt.c: 714: flag |= 0x20;
  6924  028B  16BC               	bsf	__doprnt@flag,5
  6925  028C                     l1023:	
  6926                           ;doprnt.c: 718: case 'x':
  6927                           
  6928                           
  6929                           ;doprnt.c: 721: flag |= 0x80;
  6930  028C  17BC               	bsf	__doprnt@flag,7
  6931                           
  6932                           ;doprnt.c: 723: break;
  6933  028D  2BCA               	goto	l4422
  6934  028E                     l4346:	
  6935                           ;doprnt.c: 728: case 's':
  6936                           
  6937                           
  6938                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6939  028E  0822               	movf	__doprnt@ap,w
  6940  028F  0086               	movwf	6
  6941  0290  0187               	clrf	7
  6942  0291  0801               	movf	1,w
  6943  0292  0084               	movwf	4
  6944  0293  0185               	clrf	5
  6945  0294  3002               	movlw	2
  6946  0295  0781               	addwf	1,f
  6947  0296  3F00               	moviw [0]fsr0
  6948  0297  00B2               	movwf	__doprnt@cp
  6949  0298  3F01               	moviw [1]fsr0
  6950  0299  00B3               	movwf	__doprnt@cp+1
  6951                           
  6952                           ;doprnt.c: 740: if(!cp)
  6953  029A  0832               	movf	__doprnt@cp,w
  6954  029B  0433               	iorwf	__doprnt@cp+1,w
  6955  029C  1D03               	btfss	3,2
  6956  029D  2AA2               	goto	l4352
  6957                           
  6958                           ;doprnt.c: 741: cp = "(null)";
  6959  029E  30C9               	movlw	low (STR_50| (0+32768))
  6960  029F  00B2               	movwf	__doprnt@cp
  6961  02A0  308A               	movlw	high (STR_50| (0+32768))
  6962  02A1  00B3               	movwf	__doprnt@cp+1
  6963  02A2                     l4352:	
  6964                           
  6965                           ;doprnt.c: 745: len = 0;
  6966  02A2  01B4               	clrf	__doprnt@len
  6967  02A3  01B5               	clrf	__doprnt@len+1
  6968  02A4                     l4356:	
  6969                           ;doprnt.c: 746: while(cp[len])
  6970                           
  6971  02A4  0832               	movf	__doprnt@cp,w
  6972  02A5  0734               	addwf	__doprnt@len,w
  6973  02A6  0084               	movwf	4
  6974  02A7  0833               	movf	__doprnt@cp+1,w
  6975  02A8  3D35               	addwfc	__doprnt@len+1,w
  6976  02A9  0085               	movwf	5
  6977  02AA  0012               	moviw fsr0++
  6978  02AB  1903               	btfsc	3,2
  6979  02AC  2AB2               	goto	l4358
  6980                           
  6981                           ;doprnt.c: 747: len++;
  6982  02AD  3001               	movlw	1
  6983  02AE  07B4               	addwf	__doprnt@len,f
  6984  02AF  3000               	movlw	0
  6985  02B0  3DB5               	addwfc	__doprnt@len+1,f
  6986  02B1  2AA4               	goto	l4356
  6987  02B2                     l4358:	
  6988                           ;doprnt.c: 750: dostring:
  6989                           
  6990                           
  6991                           ;doprnt.c: 753: if(prec && prec < len)
  6992  02B2  0838               	movf	__doprnt@prec,w
  6993  02B3  1903               	btfsc	3,2
  6994  02B4  2AC7               	goto	l4364
  6995  02B5  0838               	movf	__doprnt@prec,w
  6996  02B6  00A3               	movwf	??__doprnt
  6997  02B7  01A4               	clrf	??__doprnt+1
  6998  02B8  1BA3               	btfsc	??__doprnt,7
  6999  02B9  03A4               	decf	??__doprnt+1,f
  7000  02BA  0835               	movf	__doprnt@len+1,w
  7001  02BB  0224               	subwf	??__doprnt+1,w
  7002  02BC  1D03               	skipz
  7003  02BD  2AC0               	goto	u4805
  7004  02BE  0834               	movf	__doprnt@len,w
  7005  02BF  0223               	subwf	??__doprnt,w
  7006  02C0                     u4805:	
  7007  02C0  1803               	skipnc
  7008  02C1  2AC7               	goto	l4364
  7009                           
  7010                           ;doprnt.c: 754: len = prec;
  7011  02C2  0838               	movf	__doprnt@prec,w
  7012  02C3  00B4               	movwf	__doprnt@len
  7013  02C4  01B5               	clrf	__doprnt@len+1
  7014  02C5  1BB4               	btfsc	__doprnt@len,7
  7015  02C6  03B5               	decf	__doprnt@len+1,f
  7016  02C7                     l4364:	
  7017                           
  7018                           ;doprnt.c: 757: if(width > len)
  7019  02C7  083A               	movf	__doprnt@width+1,w
  7020  02C8  0235               	subwf	__doprnt@len+1,w
  7021  02C9  1D03               	skipz
  7022  02CA  2ACD               	goto	u4815
  7023  02CB  0839               	movf	__doprnt@width,w
  7024  02CC  0234               	subwf	__doprnt@len,w
  7025  02CD                     u4815:	
  7026  02CD  1803               	skipnc
  7027  02CE  2AD4               	goto	l4368
  7028                           
  7029                           ;doprnt.c: 758: width -= len;
  7030  02CF  0834               	movf	__doprnt@len,w
  7031  02D0  02B9               	subwf	__doprnt@width,f
  7032  02D1  0835               	movf	__doprnt@len+1,w
  7033  02D2  3BBA               	subwfb	__doprnt@width+1,f
  7034  02D3  2AD6               	goto	l4370
  7035  02D4                     l4368:	
  7036                           
  7037                           ;doprnt.c: 759: else
  7038                           ;doprnt.c: 760: width = 0;
  7039  02D4  01B9               	clrf	__doprnt@width
  7040  02D5  01BA               	clrf	__doprnt@width+1
  7041  02D6                     l4370:	
  7042                           
  7043                           ;doprnt.c: 762: if(!(flag & 0x08))
  7044  02D6  1DBC               	btfss	__doprnt@flag,3
  7045  02D7  2B00               	goto	l4382
  7046  02D8  2B43               	goto	l4396
  7047  02D9                     l4374:	
  7048                           ;doprnt.c: 764: while(width--)
  7049                           
  7050                           
  7051                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  7052  02D9  0A3E               	incf	__doprnt@pb,w
  7053  02DA  0086               	movwf	6
  7054  02DB  0187               	clrf	7
  7055  02DC  0016               	moviw fsr1++
  7056  02DD  0401               	iorwf	1,w
  7057  02DE  1903               	btfsc	3,2
  7058  02DF  2AED               	goto	l4378
  7059  02E0  3020               	movlw	32
  7060  02E1  00A3               	movwf	??__doprnt
  7061  02E2  0823               	movf	??__doprnt,w
  7062  02E3  00F0               	movwf	putch@data
  7063  02E4  0A3E               	incf	__doprnt@pb,w
  7064  02E5  0086               	movwf	6
  7065  02E6  0187               	clrf	7
  7066  02E7  3F41               	moviw [1]fsr1
  7067  02E8  008A               	movwf	10
  7068  02E9  3F40               	moviw [0]fsr1
  7069  02EA  000A               	callw
  7070  02EB  3181               	pagesel	$
  7071  02EC  2B00               	goto	l4382
  7072  02ED                     l4378:	
  7073  02ED  3020               	movlw	32
  7074  02EE  0020               	movlb	0	; select bank0
  7075  02EF  00A3               	movwf	??__doprnt
  7076  02F0  083E               	movf	__doprnt@pb,w
  7077  02F1  0086               	movwf	6
  7078  02F2  0187               	clrf	7
  7079  02F3  0801               	movf	1,w
  7080  02F4  0086               	movwf	6
  7081  02F5  3001               	movlw	1	; select bank2/3
  7082  02F6  0087               	movwf	7
  7083  02F7  0823               	movf	??__doprnt,w
  7084  02F8  0081               	movwf	1
  7085  02F9  3001               	movlw	1
  7086  02FA  00A3               	movwf	??__doprnt
  7087  02FB  083E               	movf	__doprnt@pb,w
  7088  02FC  0086               	movwf	6
  7089  02FD  0187               	clrf	7
  7090  02FE  0823               	movf	??__doprnt,w
  7091  02FF  0781               	addwf	1,f
  7092  0300                     l4382:	
  7093  0300  30FF               	movlw	255
  7094  0301  0020               	movlb	0	; select bank0
  7095  0302  07B9               	addwf	__doprnt@width,f
  7096  0303  30FF               	movlw	255
  7097  0304  3DBA               	addwfc	__doprnt@width+1,f
  7098  0305  0A39               	incf	__doprnt@width,w
  7099  0306  1D03               	skipz
  7100  0307  2AD9               	goto	l4374
  7101  0308  0A3A               	incf	__doprnt@width+1,w
  7102  0309  1903               	btfsc	3,2
  7103  030A  2B43               	goto	l4396
  7104  030B  2AD9               	goto	l4374
  7105  030C                     l4384:	
  7106                           ;doprnt.c: 767: while(len--)
  7107                           
  7108                           
  7109                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  7110  030C  0A3E               	incf	__doprnt@pb,w
  7111  030D  0086               	movwf	6
  7112  030E  0187               	clrf	7
  7113  030F  0016               	moviw fsr1++
  7114  0310  0401               	iorwf	1,w
  7115  0311  1903               	btfsc	3,2
  7116  0312  2B29               	goto	l4390
  7117  0313  0832               	movf	__doprnt@cp,w
  7118  0314  0084               	movwf	4
  7119  0315  0833               	movf	__doprnt@cp+1,w
  7120  0316  0085               	movwf	5
  7121  0317  0800               	movf	0,w	;code access
  7122  0318  00A3               	movwf	??__doprnt
  7123  0319  0823               	movf	??__doprnt,w
  7124  031A  00F0               	movwf	putch@data
  7125  031B  0A3E               	incf	__doprnt@pb,w
  7126  031C  0086               	movwf	6
  7127  031D  0187               	clrf	7
  7128  031E  3F41               	moviw [1]fsr1
  7129  031F  008A               	movwf	10
  7130  0320  3F40               	moviw [0]fsr1
  7131  0321  000A               	callw
  7132  0322  3181               	pagesel	$
  7133  0323  3001               	movlw	1
  7134  0324  0020               	movlb	0	; select bank0
  7135  0325  07B2               	addwf	__doprnt@cp,f
  7136  0326  3000               	movlw	0
  7137  0327  3DB3               	addwfc	__doprnt@cp+1,f
  7138  0328  2B43               	goto	l4396
  7139  0329                     l4390:	
  7140  0329  0832               	movf	__doprnt@cp,w
  7141  032A  0084               	movwf	4
  7142  032B  0833               	movf	__doprnt@cp+1,w
  7143  032C  0085               	movwf	5
  7144  032D  0800               	movf	0,w	;code access
  7145  032E  00A3               	movwf	??__doprnt
  7146  032F  083E               	movf	__doprnt@pb,w
  7147  0330  0086               	movwf	6
  7148  0331  0187               	clrf	7
  7149  0332  0801               	movf	1,w
  7150  0333  0086               	movwf	6
  7151  0334  3001               	movlw	1	; select bank2/3
  7152  0335  0087               	movwf	7
  7153  0336  0823               	movf	??__doprnt,w
  7154  0337  0081               	movwf	1
  7155  0338  3001               	movlw	1
  7156  0339  07B2               	addwf	__doprnt@cp,f
  7157  033A  3000               	movlw	0
  7158  033B  3DB3               	addwfc	__doprnt@cp+1,f
  7159  033C  3001               	movlw	1
  7160  033D  00A3               	movwf	??__doprnt
  7161  033E  083E               	movf	__doprnt@pb,w
  7162  033F  0086               	movwf	6
  7163  0340  0187               	clrf	7
  7164  0341  0823               	movf	??__doprnt,w
  7165  0342  0781               	addwf	1,f
  7166  0343                     l4396:	
  7167  0343  3001               	movlw	1
  7168  0344  02B4               	subwf	__doprnt@len,f
  7169  0345  3000               	movlw	0
  7170  0346  3BB5               	subwfb	__doprnt@len+1,f
  7171  0347  0A34               	incf	__doprnt@len,w
  7172  0348  1D03               	skipz
  7173  0349  2B0C               	goto	l4384
  7174  034A  0A35               	incf	__doprnt@len+1,w
  7175  034B  1D03               	btfss	3,2
  7176  034C  2B0C               	goto	l4384
  7177                           
  7178                           ;doprnt.c: 770: if(flag & 0x08)
  7179  034D  19BC               	btfsc	__doprnt@flag,3
  7180  034E  2B77               	goto	l4408
  7181  034F  297E               	goto	l4684
  7182  0350                     l4400:	
  7183                           ;doprnt.c: 771: while(width--)
  7184                           
  7185                           
  7186                           ;doprnt.c: 772: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  7187  0350  0A3E               	incf	__doprnt@pb,w
  7188  0351  0086               	movwf	6
  7189  0352  0187               	clrf	7
  7190  0353  0016               	moviw fsr1++
  7191  0354  0401               	iorwf	1,w
  7192  0355  1903               	btfsc	3,2
  7193  0356  2B64               	goto	l4404
  7194  0357  3020               	movlw	32
  7195  0358  00A3               	movwf	??__doprnt
  7196  0359  0823               	movf	??__doprnt,w
  7197  035A  00F0               	movwf	putch@data
  7198  035B  0A3E               	incf	__doprnt@pb,w
  7199  035C  0086               	movwf	6
  7200  035D  0187               	clrf	7
  7201  035E  3F41               	moviw [1]fsr1
  7202  035F  008A               	movwf	10
  7203  0360  3F40               	moviw [0]fsr1
  7204  0361  000A               	callw
  7205  0362  3181               	pagesel	$
  7206  0363  2B77               	goto	l4408
  7207  0364                     l4404:	
  7208  0364  3020               	movlw	32
  7209  0365  0020               	movlb	0	; select bank0
  7210  0366  00A3               	movwf	??__doprnt
  7211  0367  083E               	movf	__doprnt@pb,w
  7212  0368  0086               	movwf	6
  7213  0369  0187               	clrf	7
  7214  036A  0801               	movf	1,w
  7215  036B  0086               	movwf	6
  7216  036C  3001               	movlw	1	; select bank2/3
  7217  036D  0087               	movwf	7
  7218  036E  0823               	movf	??__doprnt,w
  7219  036F  0081               	movwf	1
  7220  0370  3001               	movlw	1
  7221  0371  00A3               	movwf	??__doprnt
  7222  0372  083E               	movf	__doprnt@pb,w
  7223  0373  0086               	movwf	6
  7224  0374  0187               	clrf	7
  7225  0375  0823               	movf	??__doprnt,w
  7226  0376  0781               	addwf	1,f
  7227  0377                     l4408:	
  7228  0377  30FF               	movlw	255
  7229  0378  0020               	movlb	0	; select bank0
  7230  0379  07B9               	addwf	__doprnt@width,f
  7231  037A  30FF               	movlw	255
  7232  037B  3DBA               	addwfc	__doprnt@width+1,f
  7233  037C  0A39               	incf	__doprnt@width,w
  7234  037D  1D03               	skipz
  7235  037E  2B50               	goto	l4400
  7236  037F  0A3A               	incf	__doprnt@width+1,w
  7237  0380  1903               	btfsc	3,2
  7238  0381  297E               	goto	l4684
  7239  0382  2B50               	goto	l4400
  7240  0383                     l4410:	
  7241                           ;doprnt.c: 784: case 'c':
  7242                           
  7243                           ;doprnt.c: 774: continue;
  7244                           
  7245                           
  7246                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  7247  0383  0822               	movf	__doprnt@ap,w
  7248  0384  0086               	movwf	6
  7249  0385  0187               	clrf	7
  7250  0386  0801               	movf	1,w
  7251  0387  0084               	movwf	4
  7252  0388  0185               	clrf	5
  7253  0389  3002               	movlw	2
  7254  038A  0781               	addwf	1,f
  7255  038B  0800               	movf	0,w
  7256  038C  00A3               	movwf	??__doprnt
  7257  038D  0823               	movf	??__doprnt,w
  7258  038E  00BB               	movwf	__doprnt@c
  7259  038F                     l4412:	
  7260                           ;doprnt.c: 802: default:
  7261                           
  7262                           
  7263                           ;doprnt.c: 805: cp = (char *)&c;
  7264  038F  303B               	movlw	low __doprnt@c
  7265  0390  00B2               	movwf	__doprnt@cp
  7266  0391  3000               	movlw	high __doprnt@c
  7267  0392  00B3               	movwf	__doprnt@cp+1
  7268                           
  7269                           ;doprnt.c: 806: len = 1;
  7270  0393  3001               	movlw	1
  7271  0394  00B4               	movwf	__doprnt@len
  7272  0395  3000               	movlw	0
  7273  0396  00B5               	movwf	__doprnt@len+1
  7274                           
  7275                           ;doprnt.c: 807: goto dostring;
  7276  0397  2AB2               	goto	l4358
  7277  0398                     l4416:	
  7278                           ;doprnt.c: 817: case 'u':
  7279                           
  7280                           
  7281                           ;doprnt.c: 818: flag |= 0xC0;
  7282  0398  30C0               	movlw	192
  7283  0399  04BC               	iorwf	__doprnt@flag,f
  7284  039A  3000               	movlw	0
  7285  039B  04BD               	iorwf	__doprnt@flag+1,f
  7286                           
  7287                           ;doprnt.c: 822: }
  7288                           
  7289                           ;doprnt.c: 819: break;
  7290  039C  2BCA               	goto	l4422
  7291  039D                     l4420:	
  7292  039D  0020               	movlb	0	; select bank0
  7293  039E  0821               	movf	__doprnt@f+1,w
  7294  039F  00A4               	movwf	??__doprnt+1
  7295  03A0  0820               	movf	__doprnt@f,w
  7296  03A1  00A3               	movwf	??__doprnt
  7297  03A2  0AA0               	incf	__doprnt@f,f
  7298  03A3  1903               	skipnz
  7299  03A4  0AA1               	incf	__doprnt@f+1,f
  7300  03A5  0823               	movf	??__doprnt,w
  7301  03A6  0084               	movwf	4
  7302  03A7  0824               	movf	??__doprnt+1,w
  7303  03A8  0085               	movwf	5
  7304  03A9  0800               	movf	0,w	;code access
  7305  03AA  00BB               	movwf	__doprnt@c
  7306                           
  7307                           ; Switch size 1, requested type "space"
  7308                           ; Number of cases is 10, Range of values is 0 to 120
  7309                           ; switch strategies available:
  7310                           ; Name         Instructions Cycles
  7311                           ; simple_byte           31    16 (average)
  7312                           ; direct_byte          248     6 (fixed)
  7313                           ; jumptable            260     6 (fixed)
  7314                           ;	Chosen strategy is simple_byte
  7315  03AB  3A00               	xorlw	0	; case 0
  7316  03AC  1903               	skipnz
  7317  03AD  2FDF               	goto	l4686
  7318  03AE  3A58               	xorlw	88	; case 88
  7319  03AF  1903               	skipnz
  7320  03B0  2A8B               	goto	l1022
  7321  03B1  3A3B               	xorlw	59	; case 99
  7322  03B2  1903               	skipnz
  7323  03B3  2B83               	goto	l4410
  7324  03B4  3A07               	xorlw	7	; case 100
  7325  03B5  1903               	skipnz
  7326  03B6  2BCA               	goto	l4422
  7327  03B7  3A0D               	xorlw	13	; case 105
  7328  03B8  1903               	skipnz
  7329  03B9  2BCA               	goto	l4422
  7330  03BA  3A06               	xorlw	6	; case 111
  7331  03BB  1903               	skipnz
  7332  03BC  2A89               	goto	l1017
  7333  03BD  3A1F               	xorlw	31	; case 112
  7334  03BE  1903               	skipnz
  7335  03BF  2A8B               	goto	l1022
  7336  03C0  3A03               	xorlw	3	; case 115
  7337  03C1  1903               	skipnz
  7338  03C2  2A8E               	goto	l4346
  7339  03C3  3A06               	xorlw	6	; case 117
  7340  03C4  1903               	skipnz
  7341  03C5  2B98               	goto	l4416
  7342  03C6  3A0D               	xorlw	13	; case 120
  7343  03C7  1903               	skipnz
  7344  03C8  2A8C               	goto	l1023
  7345  03C9  2B8F               	goto	l4412
  7346  03CA                     l4422:	
  7347                           
  7348                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  7349  03CA  30C0               	movlw	192
  7350  03CB  053C               	andwf	__doprnt@flag,w
  7351  03CC  00A3               	movwf	??__doprnt
  7352  03CD  3000               	movlw	0
  7353  03CE  053D               	andwf	__doprnt@flag+1,w
  7354  03CF  00A4               	movwf	??__doprnt+1
  7355  03D0  0823               	movf	??__doprnt,w
  7356  03D1  0424               	iorwf	??__doprnt+1,w
  7357  03D2  1D03               	btfss	3,2
  7358  03D3  2BEC               	goto	l4432
  7359                           
  7360                           ;doprnt.c: 1253: {
  7361                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7362  03D4  0822               	movf	__doprnt@ap,w
  7363  03D5  0086               	movwf	6
  7364  03D6  0187               	clrf	7
  7365  03D7  0801               	movf	1,w
  7366  03D8  0084               	movwf	4
  7367  03D9  0185               	clrf	5
  7368  03DA  3002               	movlw	2
  7369  03DB  0781               	addwf	1,f
  7370  03DC  3F00               	moviw [0]fsr0
  7371  03DD  00B6               	movwf	__doprnt@val
  7372  03DE  3F01               	moviw [1]fsr0
  7373  03DF  00B7               	movwf	__doprnt@val+1
  7374                           
  7375                           ;doprnt.c: 1261: if((int)val < 0) {
  7376  03E0  1FB7               	btfss	__doprnt@val+1,7
  7377  03E1  2BF8               	goto	l4434
  7378                           
  7379                           ;doprnt.c: 1262: flag |= 0x03;
  7380  03E2  3003               	movlw	3
  7381  03E3  04BC               	iorwf	__doprnt@flag,f
  7382  03E4  3000               	movlw	0
  7383  03E5  04BD               	iorwf	__doprnt@flag+1,f
  7384                           
  7385                           ;doprnt.c: 1263: val = -val;
  7386  03E6  09B6               	comf	__doprnt@val,f
  7387  03E7  09B7               	comf	__doprnt@val+1,f
  7388  03E8  0AB6               	incf	__doprnt@val,f
  7389  03E9  1903               	skipnz
  7390  03EA  0AB7               	incf	__doprnt@val+1,f
  7391                           
  7392                           ;doprnt.c: 1264: }
  7393                           ;doprnt.c: 1266: }
  7394  03EB  2BF8               	goto	l4434
  7395  03EC                     l4432:	
  7396                           
  7397                           ;doprnt.c: 1268: else
  7398                           ;doprnt.c: 1273: {
  7399                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7400  03EC  0822               	movf	__doprnt@ap,w
  7401  03ED  0086               	movwf	6
  7402  03EE  0187               	clrf	7
  7403  03EF  0801               	movf	1,w
  7404  03F0  0084               	movwf	4
  7405  03F1  0185               	clrf	5
  7406  03F2  3002               	movlw	2
  7407  03F3  0781               	addwf	1,f
  7408  03F4  3F00               	moviw [0]fsr0
  7409  03F5  00B6               	movwf	__doprnt@val
  7410  03F6  3F01               	moviw [1]fsr0
  7411  03F7  00B7               	movwf	__doprnt@val+1
  7412  03F8                     l4434:	
  7413                           
  7414                           ;doprnt.c: 1287: }
  7415                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7416  03F8  0838               	movf	__doprnt@prec,w
  7417  03F9  1D03               	btfss	3,2
  7418  03FA  2C6A               	goto	l4472
  7419  03FB  0836               	movf	__doprnt@val,w
  7420  03FC  0437               	iorwf	__doprnt@val+1,w
  7421  03FD  1D03               	btfss	3,2
  7422  03FE  2C6A               	goto	l4472
  7423                           
  7424                           ;doprnt.c: 1291: prec++;
  7425  03FF  3001               	movlw	1
  7426  0400  00A3               	movwf	??__doprnt
  7427  0401  0823               	movf	??__doprnt,w
  7428  0402  07B8               	addwf	__doprnt@prec,f
  7429                           
  7430                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
  7431  0403  2C6A               	goto	l4472
  7432  0404                     l1059:	
  7433                           ;doprnt.c: 1299: case 0x00:
  7434                           
  7435                           
  7436                           ;doprnt.c: 1302: case 0xC0:
  7437                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7438  0404  01BB               	clrf	__doprnt@c
  7439  0405  0ABB               	incf	__doprnt@c,f
  7440  0406                     L11:	
  7441  0406  3005               	movlw	5
  7442  0407  063B               	xorwf	__doprnt@c,w
  7443  0408  1903               	btfsc	3,2
  7444  0409  2C79               	goto	l4474
  7445                           
  7446                           ;doprnt.c: 1306: if(val < dpowers[c])
  7447  040A  083B               	movf	__doprnt@c,w
  7448  040B  00A3               	movwf	??__doprnt
  7449  040C  01A4               	clrf	??__doprnt+1
  7450  040D  35A3               	lslf	??__doprnt,f
  7451  040E  0DA4               	rlf	??__doprnt+1,f
  7452  040F  300C               	movlw	low (_dpowers| (0+32768))
  7453  0410  0723               	addwf	??__doprnt,w
  7454  0411  0084               	movwf	4
  7455  0412  3088               	movlw	high (_dpowers| (0+32768))
  7456  0413  3D24               	addwfc	??__doprnt+1,w
  7457  0414  0085               	movwf	5
  7458  0415  3F00               	moviw [0]fsr0
  7459  0416  00A5               	movwf	??__doprnt+2
  7460  0417  3F01               	moviw [1]fsr0
  7461  0418  00A6               	movwf	??__doprnt+3
  7462  0419  0826               	movf	??__doprnt+3,w
  7463  041A  0237               	subwf	__doprnt@val+1,w
  7464  041B  1D03               	skipz
  7465  041C  2C1F               	goto	u4955
  7466  041D  0825               	movf	??__doprnt+2,w
  7467  041E  0236               	subwf	__doprnt@val,w
  7468  041F                     u4955:	
  7469  041F  1C03               	btfss	3,0
  7470  0420  2C79               	goto	l4474
  7471                           
  7472                           ;doprnt.c: 1307: break;
  7473  0421  3001               	movlw	1
  7474  0422  00A3               	movwf	??__doprnt
  7475  0423  0823               	movf	??__doprnt,w
  7476  0424  07BB               	addwf	__doprnt@c,f
  7477  0425  2C06               	goto	L11
  7478  0426                     l1064:	
  7479                           ;doprnt.c: 1314: case 0x80:
  7480                           
  7481                           ;doprnt.c: 1309: break;
  7482                           
  7483                           
  7484                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7485  0426  01BB               	clrf	__doprnt@c
  7486  0427  0ABB               	incf	__doprnt@c,f
  7487  0428                     L12:	
  7488  0428  3004               	movlw	4
  7489  0429  063B               	xorwf	__doprnt@c,w
  7490  042A  1903               	btfsc	3,2
  7491  042B  2C79               	goto	l4474
  7492                           
  7493                           ;doprnt.c: 1317: if(val < hexpowers[c])
  7494  042C  083B               	movf	__doprnt@c,w
  7495  042D  00A3               	movwf	??__doprnt
  7496  042E  01A4               	clrf	??__doprnt+1
  7497  042F  35A3               	lslf	??__doprnt,f
  7498  0430  0DA4               	rlf	??__doprnt+1,f
  7499  0431  3016               	movlw	low (_hexpowers| (0+32768))
  7500  0432  0723               	addwf	??__doprnt,w
  7501  0433  0084               	movwf	4
  7502  0434  3088               	movlw	high (_hexpowers| (0+32768))
  7503  0435  3D24               	addwfc	??__doprnt+1,w
  7504  0436  0085               	movwf	5
  7505  0437  3F00               	moviw [0]fsr0
  7506  0438  00A5               	movwf	??__doprnt+2
  7507  0439  3F01               	moviw [1]fsr0
  7508  043A  00A6               	movwf	??__doprnt+3
  7509  043B  0826               	movf	??__doprnt+3,w
  7510  043C  0237               	subwf	__doprnt@val+1,w
  7511  043D  1D03               	skipz
  7512  043E  2C41               	goto	u4985
  7513  043F  0825               	movf	??__doprnt+2,w
  7514  0440  0236               	subwf	__doprnt@val,w
  7515  0441                     u4985:	
  7516  0441  1C03               	btfss	3,0
  7517  0442  2C79               	goto	l4474
  7518                           
  7519                           ;doprnt.c: 1318: break;
  7520  0443  3001               	movlw	1
  7521  0444  00A3               	movwf	??__doprnt
  7522  0445  0823               	movf	??__doprnt,w
  7523  0446  07BB               	addwf	__doprnt@c,f
  7524  0447  2C28               	goto	L12
  7525  0448                     l1068:	
  7526                           ;doprnt.c: 1326: case 0x40:
  7527                           
  7528                           ;doprnt.c: 1320: break;
  7529                           
  7530                           
  7531                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
  7532  0448  01BB               	clrf	__doprnt@c
  7533  0449  0ABB               	incf	__doprnt@c,f
  7534  044A                     L13:	
  7535  044A  3006               	movlw	6
  7536  044B  063B               	xorwf	__doprnt@c,w
  7537  044C  1903               	btfsc	3,2
  7538  044D  2C79               	goto	l4474
  7539                           
  7540                           ;doprnt.c: 1329: if(val < octpowers[c])
  7541  044E  083B               	movf	__doprnt@c,w
  7542  044F  00A3               	movwf	??__doprnt
  7543  0450  01A4               	clrf	??__doprnt+1
  7544  0451  35A3               	lslf	??__doprnt,f
  7545  0452  0DA4               	rlf	??__doprnt+1,f
  7546  0453  3000               	movlw	low (_octpowers| (0+32768))
  7547  0454  0723               	addwf	??__doprnt,w
  7548  0455  0084               	movwf	4
  7549  0456  3088               	movlw	high (_octpowers| (0+32768))
  7550  0457  3D24               	addwfc	??__doprnt+1,w
  7551  0458  0085               	movwf	5
  7552  0459  3F00               	moviw [0]fsr0
  7553  045A  00A5               	movwf	??__doprnt+2
  7554  045B  3F01               	moviw [1]fsr0
  7555  045C  00A6               	movwf	??__doprnt+3
  7556  045D  0826               	movf	??__doprnt+3,w
  7557  045E  0237               	subwf	__doprnt@val+1,w
  7558  045F  1D03               	skipz
  7559  0460  2C63               	goto	u5015
  7560  0461  0825               	movf	??__doprnt+2,w
  7561  0462  0236               	subwf	__doprnt@val,w
  7562  0463                     u5015:	
  7563  0463  1C03               	btfss	3,0
  7564  0464  2C79               	goto	l4474
  7565                           
  7566                           ;doprnt.c: 1330: break;
  7567  0465  3001               	movlw	1
  7568  0466  00A3               	movwf	??__doprnt
  7569  0467  0823               	movf	??__doprnt,w
  7570  0468  07BB               	addwf	__doprnt@c,f
  7571  0469  2C4A               	goto	L13
  7572  046A                     l4472:	
  7573                           ;doprnt.c: 1336: }
  7574                           
  7575                           ;doprnt.c: 1332: break;
  7576                           
  7577  046A  083C               	movf	__doprnt@flag,w
  7578  046B  39C0               	andlw	192
  7579                           
  7580                           ; Switch size 1, requested type "space"
  7581                           ; Number of cases is 4, Range of values is 0 to 192
  7582                           ; switch strategies available:
  7583                           ; Name         Instructions Cycles
  7584                           ; simple_byte           13     7 (average)
  7585                           ; jumptable            260     6 (fixed)
  7586                           ;	Chosen strategy is simple_byte
  7587  046C  3A00               	xorlw	0	; case 0
  7588  046D  1903               	skipnz
  7589  046E  2C04               	goto	l1059
  7590  046F  3A40               	xorlw	64	; case 64
  7591  0470  1903               	skipnz
  7592  0471  2C48               	goto	l1068
  7593  0472  3AC0               	xorlw	192	; case 128
  7594  0473  1903               	skipnz
  7595  0474  2C26               	goto	l1064
  7596  0475  3A40               	xorlw	64	; case 192
  7597  0476  1903               	skipnz
  7598  0477  2C04               	goto	l1059
  7599  0478  2C79               	goto	l4474
  7600  0479                     l4474:	
  7601                           
  7602                           ;doprnt.c: 1339: if(c < prec)
  7603  0479  083B               	movf	__doprnt@c,w
  7604  047A  3A80               	xorlw	128
  7605  047B  00A3               	movwf	??__doprnt
  7606  047C  0838               	movf	__doprnt@prec,w
  7607  047D  3A80               	xorlw	128
  7608  047E  02A3               	subwf	??__doprnt,f
  7609  047F  1803               	skipnc
  7610  0480  2C86               	goto	l4478
  7611                           
  7612                           ;doprnt.c: 1340: c = prec;
  7613  0481  0838               	movf	__doprnt@prec,w
  7614  0482  00A3               	movwf	??__doprnt
  7615  0483  0823               	movf	??__doprnt,w
  7616  0484  00BB               	movwf	__doprnt@c
  7617  0485  2C92               	goto	l4482
  7618  0486                     l4478:	
  7619                           
  7620                           ;doprnt.c: 1341: else if(prec < c)
  7621  0486  0838               	movf	__doprnt@prec,w
  7622  0487  3A80               	xorlw	128
  7623  0488  00A3               	movwf	??__doprnt
  7624  0489  083B               	movf	__doprnt@c,w
  7625  048A  3A80               	xorlw	128
  7626  048B  02A3               	subwf	??__doprnt,f
  7627  048C  1803               	skipnc
  7628  048D  2C92               	goto	l4482
  7629                           
  7630                           ;doprnt.c: 1342: prec = c;
  7631  048E  083B               	movf	__doprnt@c,w
  7632  048F  00A3               	movwf	??__doprnt
  7633  0490  0823               	movf	??__doprnt,w
  7634  0491  00B8               	movwf	__doprnt@prec
  7635  0492                     l4482:	
  7636                           
  7637                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7638  0492  0839               	movf	__doprnt@width,w
  7639  0493  043A               	iorwf	__doprnt@width+1,w
  7640  0494  1903               	btfsc	3,2
  7641  0495  2CA4               	goto	l4488
  7642  0496  3003               	movlw	3
  7643  0497  053C               	andwf	__doprnt@flag,w
  7644  0498  00A3               	movwf	??__doprnt
  7645  0499  3000               	movlw	0
  7646  049A  053D               	andwf	__doprnt@flag+1,w
  7647  049B  00A4               	movwf	??__doprnt+1
  7648  049C  0823               	movf	??__doprnt,w
  7649  049D  0424               	iorwf	??__doprnt+1,w
  7650  049E  1903               	btfsc	3,2
  7651  049F  2CA4               	goto	l4488
  7652                           
  7653                           ;doprnt.c: 1346: width--;
  7654  04A0  30FF               	movlw	255
  7655  04A1  07B9               	addwf	__doprnt@width,f
  7656  04A2  30FF               	movlw	255
  7657  04A3  3DBA               	addwfc	__doprnt@width+1,f
  7658  04A4                     l4488:	
  7659                           
  7660                           ;doprnt.c: 1348: if(flag & 0x4000) {
  7661  04A4  1F3D               	btfss	__doprnt@flag+1,6
  7662  04A5  2CC5               	goto	l4496
  7663                           
  7664                           ;doprnt.c: 1349: if(width > prec)
  7665  04A6  0838               	movf	__doprnt@prec,w
  7666  04A7  00A3               	movwf	??__doprnt
  7667  04A8  01A4               	clrf	??__doprnt+1
  7668  04A9  1BA3               	btfsc	??__doprnt,7
  7669  04AA  03A4               	decf	??__doprnt+1,f
  7670  04AB  0824               	movf	??__doprnt+1,w
  7671  04AC  3A80               	xorlw	128
  7672  04AD  00A5               	movwf	??__doprnt+2
  7673  04AE  083A               	movf	__doprnt@width+1,w
  7674  04AF  3A80               	xorlw	128
  7675  04B0  0225               	subwf	??__doprnt+2,w
  7676  04B1  1D03               	skipz
  7677  04B2  2CB5               	goto	u5085
  7678  04B3  0839               	movf	__doprnt@width,w
  7679  04B4  0223               	subwf	??__doprnt,w
  7680  04B5                     u5085:	
  7681  04B5  1803               	skipnc
  7682  04B6  2CC2               	goto	l4494
  7683                           
  7684                           ;doprnt.c: 1350: width -= prec;
  7685  04B7  0020               	movlb	0	; select bank0
  7686  04B8  0838               	movf	__doprnt@prec,w
  7687  04B9  00A3               	movwf	??__doprnt
  7688  04BA  01A4               	clrf	??__doprnt+1
  7689  04BB  1BA3               	btfsc	??__doprnt,7
  7690  04BC  03A4               	decf	??__doprnt+1,f
  7691  04BD  0823               	movf	??__doprnt,w
  7692  04BE  02B9               	subwf	__doprnt@width,f
  7693  04BF  0824               	movf	??__doprnt+1,w
  7694  04C0  3BBA               	subwfb	__doprnt@width+1,f
  7695  04C1  2CC5               	goto	l4496
  7696  04C2                     l4494:	
  7697                           
  7698                           ;doprnt.c: 1351: else
  7699                           ;doprnt.c: 1352: width = 0;
  7700  04C2  0020               	movlb	0	; select bank0
  7701  04C3  01B9               	clrf	__doprnt@width
  7702  04C4  01BA               	clrf	__doprnt@width+1
  7703  04C5                     l4496:	
  7704                           
  7705                           ;doprnt.c: 1353: }
  7706                           ;doprnt.c: 1357: if((flag & (
  7707                           ;doprnt.c: 1359: 0x04|
  7708                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
  7709  04C5  30C4               	movlw	196
  7710  04C6  053C               	andwf	__doprnt@flag,w
  7711  04C7  00A3               	movwf	??__doprnt
  7712  04C8  3008               	movlw	8
  7713  04C9  053D               	andwf	__doprnt@flag+1,w
  7714  04CA  00A4               	movwf	??__doprnt+1
  7715  04CB  3040               	movlw	64
  7716  04CC  0623               	xorwf	??__doprnt,w
  7717  04CD  3008               	movlw	8
  7718  04CE  1903               	skipnz
  7719  04CF  0624               	xorwf	??__doprnt+1,w
  7720  04D0  1D03               	btfss	3,2
  7721  04D1  2CD8               	goto	l4502
  7722                           
  7723                           ;doprnt.c: 1362: if(width)
  7724  04D2  0839               	movf	__doprnt@width,w
  7725  04D3  043A               	iorwf	__doprnt@width+1,w
  7726  04D4  1903               	btfsc	3,2
  7727  04D5  2CF9               	goto	l4510
  7728                           
  7729                           ;doprnt.c: 1363: width--;
  7730  04D6  30FF               	movlw	255
  7731  04D7  2CF2               	goto	L3
  7732  04D8                     l4502:	
  7733                           ;doprnt.c: 1364: } else
  7734                           
  7735                           
  7736                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  7737  04D8  30C0               	movlw	192
  7738  04D9  053C               	andwf	__doprnt@flag,w
  7739  04DA  00A3               	movwf	??__doprnt
  7740  04DB  3008               	movlw	8
  7741  04DC  053D               	andwf	__doprnt@flag+1,w
  7742  04DD  00A4               	movwf	??__doprnt+1
  7743  04DE  3080               	movlw	128
  7744  04DF  0623               	xorwf	??__doprnt,w
  7745  04E0  3008               	movlw	8
  7746  04E1  1903               	skipnz
  7747  04E2  0624               	xorwf	??__doprnt+1,w
  7748  04E3  1D03               	btfss	3,2
  7749  04E4  2CF9               	goto	l4510
  7750                           
  7751                           ;doprnt.c: 1372: if(width > 2)
  7752  04E5  083A               	movf	__doprnt@width+1,w
  7753  04E6  3A80               	xorlw	128
  7754  04E7  00A3               	movwf	??__doprnt
  7755  04E8  3080               	movlw	128
  7756  04E9  0223               	subwf	??__doprnt,w
  7757  04EA  1D03               	skipz
  7758  04EB  2CEE               	goto	u5125
  7759  04EC  3003               	movlw	3
  7760  04ED  0239               	subwf	__doprnt@width,w
  7761  04EE                     u5125:	
  7762  04EE  1C03               	skipc
  7763  04EF  2CF6               	goto	l4508
  7764                           
  7765                           ;doprnt.c: 1373: width -= 2;
  7766  04F0  30FE               	movlw	254
  7767  04F1  0020               	movlb	0	; select bank0
  7768  04F2                     L3:	
  7769  04F2  07B9               	addwf	__doprnt@width,f
  7770  04F3  30FF               	movlw	255
  7771  04F4  3DBA               	addwfc	__doprnt@width+1,f
  7772  04F5  2CF9               	goto	l4510
  7773  04F6                     l4508:	
  7774                           
  7775                           ;doprnt.c: 1374: else
  7776                           ;doprnt.c: 1375: width = 0;
  7777  04F6  0020               	movlb	0	; select bank0
  7778  04F7  01B9               	clrf	__doprnt@width
  7779  04F8  01BA               	clrf	__doprnt@width+1
  7780  04F9                     l4510:	
  7781                           
  7782                           ;doprnt.c: 1376: }
  7783                           ;doprnt.c: 1381: if(width > c)
  7784  04F9  083B               	movf	__doprnt@c,w
  7785  04FA  00A3               	movwf	??__doprnt
  7786  04FB  01A4               	clrf	??__doprnt+1
  7787  04FC  1BA3               	btfsc	??__doprnt,7
  7788  04FD  03A4               	decf	??__doprnt+1,f
  7789  04FE  0824               	movf	??__doprnt+1,w
  7790  04FF  3A80               	xorlw	128
  7791  0500  00A5               	movwf	??__doprnt+2
  7792  0501  083A               	movf	__doprnt@width+1,w
  7793  0502  3A80               	xorlw	128
  7794  0503  0225               	subwf	??__doprnt+2,w
  7795  0504  1D03               	skipz
  7796  0505  2D08               	goto	u5135
  7797  0506  0839               	movf	__doprnt@width,w
  7798  0507  0223               	subwf	??__doprnt,w
  7799  0508                     u5135:	
  7800  0508  1803               	skipnc
  7801  0509  2D15               	goto	l4514
  7802                           
  7803                           ;doprnt.c: 1382: width -= c;
  7804  050A  0020               	movlb	0	; select bank0
  7805  050B  083B               	movf	__doprnt@c,w
  7806  050C  00A3               	movwf	??__doprnt
  7807  050D  01A4               	clrf	??__doprnt+1
  7808  050E  1BA3               	btfsc	??__doprnt,7
  7809  050F  03A4               	decf	??__doprnt+1,f
  7810  0510  0823               	movf	??__doprnt,w
  7811  0511  02B9               	subwf	__doprnt@width,f
  7812  0512  0824               	movf	??__doprnt+1,w
  7813  0513  3BBA               	subwfb	__doprnt@width+1,f
  7814  0514  2D18               	goto	l4516
  7815  0515                     l4514:	
  7816                           
  7817                           ;doprnt.c: 1383: else
  7818                           ;doprnt.c: 1384: width = 0;
  7819  0515  0020               	movlb	0	; select bank0
  7820  0516  01B9               	clrf	__doprnt@width
  7821  0517  01BA               	clrf	__doprnt@width+1
  7822  0518                     l4516:	
  7823                           
  7824                           ;doprnt.c: 1387: if(flag & 0x04) {
  7825  0518  1D3C               	btfss	__doprnt@flag,2
  7826  0519  2DF0               	goto	l4574
  7827                           
  7828                           ;doprnt.c: 1392: if(flag & 0x03)
  7829  051A  3003               	movlw	3
  7830  051B  053C               	andwf	__doprnt@flag,w
  7831  051C  00A3               	movwf	??__doprnt
  7832  051D  3000               	movlw	0
  7833  051E  053D               	andwf	__doprnt@flag+1,w
  7834  051F  00A4               	movwf	??__doprnt+1
  7835  0520  0823               	movf	??__doprnt,w
  7836  0521  0424               	iorwf	??__doprnt+1,w
  7837  0522  1903               	btfsc	3,2
  7838  0523  2D3A               	goto	l1088
  7839                           
  7840                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  7841  0524  0A3E               	incf	__doprnt@pb,w
  7842  0525  0086               	movwf	6
  7843  0526  0187               	clrf	7
  7844  0527  0016               	moviw fsr1++
  7845  0528  0401               	iorwf	1,w
  7846  0529  1903               	btfsc	3,2
  7847  052A  2D38               	goto	l4524
  7848  052B  302D               	movlw	45
  7849  052C  00A3               	movwf	??__doprnt
  7850  052D  0823               	movf	??__doprnt,w
  7851  052E  00F0               	movwf	putch@data
  7852  052F  0A3E               	incf	__doprnt@pb,w
  7853  0530  0086               	movwf	6
  7854  0531  0187               	clrf	7
  7855  0532  3F41               	moviw [1]fsr1
  7856  0533  008A               	movwf	10
  7857  0534  3F40               	moviw [0]fsr1
  7858  0535  000A               	callw
  7859  0536  3181               	pagesel	$
  7860  0537  2DBE               	goto	l1091
  7861  0538                     l4524:	
  7862  0538  302D               	movlw	45
  7863  0539  2D51               	goto	L19
  7864  053A                     l1088:	
  7865                           
  7866                           ;doprnt.c: 1396: else
  7867                           ;doprnt.c: 1399: if(flag & 0x01)
  7868  053A  1C3C               	btfss	__doprnt@flag,0
  7869  053B  2D53               	goto	l4536
  7870                           
  7871                           ;doprnt.c: 1400: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  7872  053C  0A3E               	incf	__doprnt@pb,w
  7873  053D  0086               	movwf	6
  7874  053E  0187               	clrf	7
  7875  053F  0016               	moviw fsr1++
  7876  0540  0401               	iorwf	1,w
  7877  0541  1903               	btfsc	3,2
  7878  0542  2D50               	goto	l4532
  7879  0543  3020               	movlw	32
  7880  0544  00A3               	movwf	??__doprnt
  7881  0545  0823               	movf	??__doprnt,w
  7882  0546  00F0               	movwf	putch@data
  7883  0547  0A3E               	incf	__doprnt@pb,w
  7884  0548  0086               	movwf	6
  7885  0549  0187               	clrf	7
  7886  054A  3F41               	moviw [1]fsr1
  7887  054B  008A               	movwf	10
  7888  054C  3F40               	moviw [0]fsr1
  7889  054D  000A               	callw
  7890  054E  3181               	pagesel	$
  7891  054F  2DBE               	goto	l1091
  7892  0550                     l4532:	
  7893  0550  3020               	movlw	32
  7894  0551                     L19:	
  7895  0551  0020               	movlb	0	; select bank0
  7896  0552  2DAD               	goto	L14
  7897  0553                     l4536:	
  7898                           
  7899                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  7900  0553  30C0               	movlw	192
  7901  0554  053C               	andwf	__doprnt@flag,w
  7902  0555  00A3               	movwf	??__doprnt
  7903  0556  3008               	movlw	8
  7904  0557  053D               	andwf	__doprnt@flag+1,w
  7905  0558  00A4               	movwf	??__doprnt+1
  7906  0559  3080               	movlw	128
  7907  055A  0623               	xorwf	??__doprnt,w
  7908  055B  3008               	movlw	8
  7909  055C  1903               	skipnz
  7910  055D  0624               	xorwf	??__doprnt+1,w
  7911  055E  1D03               	btfss	3,2
  7912  055F  2DBE               	goto	l1091
  7913                           
  7914                           ;doprnt.c: 1404: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  7915  0560  0A3E               	incf	__doprnt@pb,w
  7916  0561  0086               	movwf	6
  7917  0562  0187               	clrf	7
  7918  0563  0016               	moviw fsr1++
  7919  0564  0401               	iorwf	1,w
  7920  0565  1903               	btfsc	3,2
  7921  0566  2D74               	goto	l4542
  7922  0567  3030               	movlw	48
  7923  0568  00A3               	movwf	??__doprnt
  7924  0569  0823               	movf	??__doprnt,w
  7925  056A  00F0               	movwf	putch@data
  7926  056B  0A3E               	incf	__doprnt@pb,w
  7927  056C  0086               	movwf	6
  7928  056D  0187               	clrf	7
  7929  056E  3F41               	moviw [1]fsr1
  7930  056F  008A               	movwf	10
  7931  0570  3F40               	moviw [0]fsr1
  7932  0571  000A               	callw
  7933  0572  3181               	pagesel	$
  7934  0573  2D87               	goto	l4546
  7935  0574                     l4542:	
  7936  0574  3030               	movlw	48
  7937  0575  0020               	movlb	0	; select bank0
  7938  0576  00A3               	movwf	??__doprnt
  7939  0577  083E               	movf	__doprnt@pb,w
  7940  0578  0086               	movwf	6
  7941  0579  0187               	clrf	7
  7942  057A  0801               	movf	1,w
  7943  057B  0086               	movwf	6
  7944  057C  3001               	movlw	1	; select bank2/3
  7945  057D  0087               	movwf	7
  7946  057E  0823               	movf	??__doprnt,w
  7947  057F  0081               	movwf	1
  7948  0580  3001               	movlw	1
  7949  0581  00A3               	movwf	??__doprnt
  7950  0582  083E               	movf	__doprnt@pb,w
  7951  0583  0086               	movwf	6
  7952  0584  0187               	clrf	7
  7953  0585  0823               	movf	??__doprnt,w
  7954  0586  0781               	addwf	1,f
  7955  0587                     l4546:	
  7956                           
  7957                           ;doprnt.c: 1406: if(pb->func) (pb->func(flag & 0x20 ? 'X' : 'x')); else ((*pb->ptr++ = f
      +                          lag & 0x20 ? 'X' : 'x'));
  7958  0587  0020               	movlb	0	; select bank0
  7959  0588  0A3E               	incf	__doprnt@pb,w
  7960  0589  0086               	movwf	6
  7961  058A  0187               	clrf	7
  7962  058B  0016               	moviw fsr1++
  7963  058C  0401               	iorwf	1,w
  7964  058D  1903               	btfsc	3,2
  7965  058E  2DA4               	goto	l1099
  7966  058F  1ABC               	btfsc	__doprnt@flag,5
  7967  0590  2D93               	goto	l4552
  7968  0591  3078               	movlw	120
  7969  0592  2D94               	goto	L4
  7970  0593                     l4552:	
  7971  0593  3058               	movlw	88
  7972  0594                     L4:	
  7973  0594  00A7               	movwf	__doprnt$1464
  7974  0595  3000               	movlw	0
  7975  0596  00A8               	movwf	__doprnt$1464+1
  7976  0597  0827               	movf	__doprnt$1464,w
  7977  0598  00A3               	movwf	??__doprnt
  7978  0599  0823               	movf	??__doprnt,w
  7979  059A  00F0               	movwf	putch@data
  7980  059B  0A3E               	incf	__doprnt@pb,w
  7981  059C  0086               	movwf	6
  7982  059D  0187               	clrf	7
  7983  059E  3F41               	moviw [1]fsr1
  7984  059F  008A               	movwf	10
  7985  05A0  3F40               	moviw [0]fsr1
  7986  05A1  000A               	callw
  7987  05A2  3181               	pagesel	$
  7988  05A3  2DBE               	goto	l1091
  7989  05A4                     l1099:	
  7990  05A4  1ABC               	btfsc	__doprnt@flag,5
  7991  05A5  2DA8               	goto	l4558
  7992  05A6  3078               	movlw	120
  7993  05A7  2DA9               	goto	L5
  7994  05A8                     l4558:	
  7995  05A8  3058               	movlw	88
  7996  05A9                     L5:	
  7997  05A9  00A9               	movwf	__doprnt$1465
  7998  05AA  3000               	movlw	0
  7999  05AB  00AA               	movwf	__doprnt$1465+1
  8000  05AC  0829               	movf	__doprnt$1465,w
  8001  05AD                     L14:	
  8002  05AD  00A3               	movwf	??__doprnt
  8003  05AE  083E               	movf	__doprnt@pb,w
  8004  05AF  0086               	movwf	6
  8005  05B0  0187               	clrf	7
  8006  05B1  0801               	movf	1,w
  8007  05B2  0086               	movwf	6
  8008  05B3  3001               	movlw	1	; select bank2/3
  8009  05B4  0087               	movwf	7
  8010  05B5  0823               	movf	??__doprnt,w
  8011  05B6  0081               	movwf	1
  8012  05B7  3001               	movlw	1
  8013  05B8  00A3               	movwf	??__doprnt
  8014  05B9  083E               	movf	__doprnt@pb,w
  8015  05BA  0086               	movwf	6
  8016  05BB  0187               	clrf	7
  8017  05BC  0823               	movf	??__doprnt,w
  8018  05BD  0781               	addwf	1,f
  8019  05BE                     l1091:	
  8020                           
  8021                           ;doprnt.c: 1412: }
  8022                           ;doprnt.c: 1415: if(width)
  8023  05BE  0020               	movlb	0	; select bank0
  8024  05BF                     L15:	
  8025  05BF  0839               	movf	__doprnt@width,w
  8026  05C0  043A               	iorwf	__doprnt@width+1,w
  8027  05C1  1903               	btfsc	3,2
  8028  05C2  2F98               	goto	l4670
  8029                           
  8030                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  8031                           
  8032                           ;doprnt.c: 1416: do
  8033  05C3  0A3E               	incf	__doprnt@pb,w
  8034  05C4  0086               	movwf	6
  8035  05C5  0187               	clrf	7
  8036  05C6  0016               	moviw fsr1++
  8037  05C7  0401               	iorwf	1,w
  8038  05C8  1903               	btfsc	3,2
  8039  05C9  2DD7               	goto	l4568
  8040  05CA  3030               	movlw	48
  8041  05CB  00A3               	movwf	??__doprnt
  8042  05CC  0823               	movf	??__doprnt,w
  8043  05CD  00F0               	movwf	putch@data
  8044  05CE  0A3E               	incf	__doprnt@pb,w
  8045  05CF  0086               	movwf	6
  8046  05D0  0187               	clrf	7
  8047  05D1  3F41               	moviw [1]fsr1
  8048  05D2  008A               	movwf	10
  8049  05D3  3F40               	moviw [0]fsr1
  8050  05D4  000A               	callw
  8051  05D5  3181               	pagesel	$
  8052  05D6  2DEA               	goto	l4572
  8053  05D7                     l4568:	
  8054  05D7  3030               	movlw	48
  8055  05D8  0020               	movlb	0	; select bank0
  8056  05D9  00A3               	movwf	??__doprnt
  8057  05DA  083E               	movf	__doprnt@pb,w
  8058  05DB  0086               	movwf	6
  8059  05DC  0187               	clrf	7
  8060  05DD  0801               	movf	1,w
  8061  05DE  0086               	movwf	6
  8062  05DF  3001               	movlw	1	; select bank2/3
  8063  05E0  0087               	movwf	7
  8064  05E1  0823               	movf	??__doprnt,w
  8065  05E2  0081               	movwf	1
  8066  05E3  3001               	movlw	1
  8067  05E4  00A3               	movwf	??__doprnt
  8068  05E5  083E               	movf	__doprnt@pb,w
  8069  05E6  0086               	movwf	6
  8070  05E7  0187               	clrf	7
  8071  05E8  0823               	movf	??__doprnt,w
  8072  05E9  0781               	addwf	1,f
  8073  05EA                     l4572:	
  8074                           
  8075                           ;doprnt.c: 1418: while(--width);
  8076  05EA  30FF               	movlw	255
  8077  05EB  0020               	movlb	0	; select bank0
  8078  05EC  07B9               	addwf	__doprnt@width,f
  8079  05ED  30FF               	movlw	255
  8080  05EE  3DBA               	addwfc	__doprnt@width+1,f
  8081  05EF  2DBF               	goto	L15
  8082  05F0                     l4574:	
  8083                           ;doprnt.c: 1420: } else
  8084                           
  8085                           
  8086                           ;doprnt.c: 1422: {
  8087                           ;doprnt.c: 1424: if(width
  8088                           ;doprnt.c: 1426: && !(flag & 0x08)
  8089                           ;doprnt.c: 1428: )
  8090  05F0  0839               	movf	__doprnt@width,w
  8091  05F1  043A               	iorwf	__doprnt@width+1,w
  8092  05F2  1D03               	btfss	3,2
  8093  05F3  19BC               	btfsc	__doprnt@flag,3
  8094  05F4  2E25               	goto	l4588
  8095  05F5                     l4578:	
  8096                           ;doprnt.c: 1429: do
  8097                           
  8098                           
  8099                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  8100  05F5  0A3E               	incf	__doprnt@pb,w
  8101  05F6  0086               	movwf	6
  8102  05F7  0187               	clrf	7
  8103  05F8  0016               	moviw fsr1++
  8104  05F9  0401               	iorwf	1,w
  8105  05FA  1903               	btfsc	3,2
  8106  05FB  2E09               	goto	l4582
  8107  05FC  3020               	movlw	32
  8108  05FD  00A3               	movwf	??__doprnt
  8109  05FE  0823               	movf	??__doprnt,w
  8110  05FF  00F0               	movwf	putch@data
  8111  0600  0A3E               	incf	__doprnt@pb,w
  8112  0601  0086               	movwf	6
  8113  0602  0187               	clrf	7
  8114  0603  3F41               	moviw [1]fsr1
  8115  0604  008A               	movwf	10
  8116  0605  3F40               	moviw [0]fsr1
  8117  0606  000A               	callw
  8118  0607  3181               	pagesel	$
  8119  0608  2E1C               	goto	l4586
  8120  0609                     l4582:	
  8121  0609  3020               	movlw	32
  8122  060A  0020               	movlb	0	; select bank0
  8123  060B  00A3               	movwf	??__doprnt
  8124  060C  083E               	movf	__doprnt@pb,w
  8125  060D  0086               	movwf	6
  8126  060E  0187               	clrf	7
  8127  060F  0801               	movf	1,w
  8128  0610  0086               	movwf	6
  8129  0611  3001               	movlw	1	; select bank2/3
  8130  0612  0087               	movwf	7
  8131  0613  0823               	movf	??__doprnt,w
  8132  0614  0081               	movwf	1
  8133  0615  3001               	movlw	1
  8134  0616  00A3               	movwf	??__doprnt
  8135  0617  083E               	movf	__doprnt@pb,w
  8136  0618  0086               	movwf	6
  8137  0619  0187               	clrf	7
  8138  061A  0823               	movf	??__doprnt,w
  8139  061B  0781               	addwf	1,f
  8140  061C                     l4586:	
  8141                           
  8142                           ;doprnt.c: 1431: while(--width);
  8143  061C  30FF               	movlw	255
  8144  061D  0020               	movlb	0	; select bank0
  8145  061E  07B9               	addwf	__doprnt@width,f
  8146  061F  30FF               	movlw	255
  8147  0620  3DBA               	addwfc	__doprnt@width+1,f
  8148  0621  0839               	movf	__doprnt@width,w
  8149  0622  043A               	iorwf	__doprnt@width+1,w
  8150  0623  1D03               	btfss	3,2
  8151  0624  2DF5               	goto	l4578
  8152  0625                     l4588:	
  8153                           
  8154                           ;doprnt.c: 1438: if(flag & 0x03)
  8155  0625  3003               	movlw	3
  8156  0626  053C               	andwf	__doprnt@flag,w
  8157  0627  00A3               	movwf	??__doprnt
  8158  0628  3000               	movlw	0
  8159  0629  053D               	andwf	__doprnt@flag+1,w
  8160  062A  00A4               	movwf	??__doprnt+1
  8161  062B  0823               	movf	??__doprnt,w
  8162  062C  0424               	iorwf	??__doprnt+1,w
  8163  062D  1903               	btfsc	3,2
  8164  062E  2E45               	goto	l1120
  8165                           
  8166                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  8167  062F  0A3E               	incf	__doprnt@pb,w
  8168  0630  0086               	movwf	6
  8169  0631  0187               	clrf	7
  8170  0632  0016               	moviw fsr1++
  8171  0633  0401               	iorwf	1,w
  8172  0634  1903               	btfsc	3,2
  8173  0635  2E43               	goto	l4594
  8174  0636  302D               	movlw	45
  8175  0637  00A3               	movwf	??__doprnt
  8176  0638  0823               	movf	??__doprnt,w
  8177  0639  00F0               	movwf	putch@data
  8178  063A  0A3E               	incf	__doprnt@pb,w
  8179  063B  0086               	movwf	6
  8180  063C  0187               	clrf	7
  8181  063D  3F41               	moviw [1]fsr1
  8182  063E  008A               	movwf	10
  8183  063F  3F40               	moviw [0]fsr1
  8184  0640  000A               	callw
  8185  0641  3181               	pagesel	$
  8186  0642  2E6E               	goto	l4606
  8187  0643                     l4594:	
  8188  0643  302D               	movlw	45
  8189  0644  2E5C               	goto	L16
  8190  0645                     l1120:	
  8191                           
  8192                           ;doprnt.c: 1443: else if(flag & 0x01)
  8193  0645  1C3C               	btfss	__doprnt@flag,0
  8194  0646  2E6E               	goto	l4606
  8195                           
  8196                           ;doprnt.c: 1444: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  8197  0647  0A3E               	incf	__doprnt@pb,w
  8198  0648  0086               	movwf	6
  8199  0649  0187               	clrf	7
  8200  064A  0016               	moviw fsr1++
  8201  064B  0401               	iorwf	1,w
  8202  064C  1903               	btfsc	3,2
  8203  064D  2E5B               	goto	l4602
  8204  064E  3020               	movlw	32
  8205  064F  00A3               	movwf	??__doprnt
  8206  0650  0823               	movf	??__doprnt,w
  8207  0651  00F0               	movwf	putch@data
  8208  0652  0A3E               	incf	__doprnt@pb,w
  8209  0653  0086               	movwf	6
  8210  0654  0187               	clrf	7
  8211  0655  3F41               	moviw [1]fsr1
  8212  0656  008A               	movwf	10
  8213  0657  3F40               	moviw [0]fsr1
  8214  0658  000A               	callw
  8215  0659  3181               	pagesel	$
  8216  065A  2E6E               	goto	l4606
  8217  065B                     l4602:	
  8218  065B  3020               	movlw	32
  8219  065C                     L16:	
  8220  065C  0020               	movlb	0	; select bank0
  8221  065D  00A3               	movwf	??__doprnt
  8222  065E  083E               	movf	__doprnt@pb,w
  8223  065F  0086               	movwf	6
  8224  0660  0187               	clrf	7
  8225  0661  0801               	movf	1,w
  8226  0662  0086               	movwf	6
  8227  0663  3001               	movlw	1	; select bank2/3
  8228  0664  0087               	movwf	7
  8229  0665  0823               	movf	??__doprnt,w
  8230  0666  0081               	movwf	1
  8231  0667  3001               	movlw	1
  8232  0668  00A3               	movwf	??__doprnt
  8233  0669  083E               	movf	__doprnt@pb,w
  8234  066A  0086               	movwf	6
  8235  066B  0187               	clrf	7
  8236  066C  0823               	movf	??__doprnt,w
  8237  066D  0781               	addwf	1,f
  8238  066E                     l4606:	
  8239                           
  8240                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
  8241  066E  30C0               	movlw	192
  8242  066F  0020               	movlb	0	; select bank0
  8243  0670  053C               	andwf	__doprnt@flag,w
  8244  0671  00A3               	movwf	??__doprnt
  8245  0672  3008               	movlw	8
  8246  0673  053D               	andwf	__doprnt@flag+1,w
  8247  0674  00A4               	movwf	??__doprnt+1
  8248  0675  3040               	movlw	64
  8249  0676  0623               	xorwf	??__doprnt,w
  8250  0677  3008               	movlw	8
  8251  0678  1903               	skipnz
  8252  0679  0624               	xorwf	??__doprnt+1,w
  8253  067A  1D03               	btfss	3,2
  8254  067B  2E93               	goto	l4616
  8255                           
  8256                           ;doprnt.c: 1449: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  8257  067C  0A3E               	incf	__doprnt@pb,w
  8258  067D  0086               	movwf	6
  8259  067E  0187               	clrf	7
  8260  067F  0016               	moviw fsr1++
  8261  0680  0401               	iorwf	1,w
  8262  0681  1903               	btfsc	3,2
  8263  0682  2E90               	goto	l4612
  8264  0683  3030               	movlw	48
  8265  0684  00A3               	movwf	??__doprnt
  8266  0685  0823               	movf	??__doprnt,w
  8267  0686  00F0               	movwf	putch@data
  8268  0687  0A3E               	incf	__doprnt@pb,w
  8269  0688  0086               	movwf	6
  8270  0689  0187               	clrf	7
  8271  068A  3F41               	moviw [1]fsr1
  8272  068B  008A               	movwf	10
  8273  068C  3F40               	moviw [0]fsr1
  8274  068D  000A               	callw
  8275  068E  3181               	pagesel	$
  8276  068F  2F98               	goto	l4670
  8277  0690                     l4612:	
  8278  0690  3030               	movlw	48
  8279  0691  0020               	movlb	0	; select bank0
  8280  0692  2F87               	goto	L17
  8281  0693                     l4616:	
  8282                           
  8283                           ;doprnt.c: 1450: else
  8284                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  8285  0693  30C0               	movlw	192
  8286  0694  053C               	andwf	__doprnt@flag,w
  8287  0695  00A3               	movwf	??__doprnt
  8288  0696  3008               	movlw	8
  8289  0697  053D               	andwf	__doprnt@flag+1,w
  8290  0698  00A4               	movwf	??__doprnt+1
  8291  0699  3080               	movlw	128
  8292  069A  0623               	xorwf	??__doprnt,w
  8293  069B  3008               	movlw	8
  8294  069C  1903               	skipnz
  8295  069D  0624               	xorwf	??__doprnt+1,w
  8296  069E  1D03               	btfss	3,2
  8297  069F  2F98               	goto	l4670
  8298                           
  8299                           ;doprnt.c: 1458: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  8300  06A0  0A3E               	incf	__doprnt@pb,w
  8301  06A1  0086               	movwf	6
  8302  06A2  0187               	clrf	7
  8303  06A3  0016               	moviw fsr1++
  8304  06A4  0401               	iorwf	1,w
  8305  06A5  1903               	btfsc	3,2
  8306  06A6  2EB4               	goto	l4622
  8307  06A7  3030               	movlw	48
  8308  06A8  00A3               	movwf	??__doprnt
  8309  06A9  0823               	movf	??__doprnt,w
  8310  06AA  00F0               	movwf	putch@data
  8311  06AB  0A3E               	incf	__doprnt@pb,w
  8312  06AC  0086               	movwf	6
  8313  06AD  0187               	clrf	7
  8314  06AE  3F41               	moviw [1]fsr1
  8315  06AF  008A               	movwf	10
  8316  06B0  3F40               	moviw [0]fsr1
  8317  06B1  000A               	callw
  8318  06B2  3181               	pagesel	$
  8319  06B3  2EC7               	goto	l4626
  8320  06B4                     l4622:	
  8321  06B4  3030               	movlw	48
  8322  06B5  0020               	movlb	0	; select bank0
  8323  06B6  00A3               	movwf	??__doprnt
  8324  06B7  083E               	movf	__doprnt@pb,w
  8325  06B8  0086               	movwf	6
  8326  06B9  0187               	clrf	7
  8327  06BA  0801               	movf	1,w
  8328  06BB  0086               	movwf	6
  8329  06BC  3001               	movlw	1	; select bank2/3
  8330  06BD  0087               	movwf	7
  8331  06BE  0823               	movf	??__doprnt,w
  8332  06BF  0081               	movwf	1
  8333  06C0  3001               	movlw	1
  8334  06C1  00A3               	movwf	??__doprnt
  8335  06C2  083E               	movf	__doprnt@pb,w
  8336  06C3  0086               	movwf	6
  8337  06C4  0187               	clrf	7
  8338  06C5  0823               	movf	??__doprnt,w
  8339  06C6  0781               	addwf	1,f
  8340  06C7                     l4626:	
  8341                           
  8342                           ;doprnt.c: 1460: if(pb->func) (pb->func(flag & 0x20 ? 'X' : 'x')); else ((*pb->ptr++ = f
      +                          lag & 0x20 ? 'X' : 'x'));
  8343  06C7  0020               	movlb	0	; select bank0
  8344  06C8  0A3E               	incf	__doprnt@pb,w
  8345  06C9  0086               	movwf	6
  8346  06CA  0187               	clrf	7
  8347  06CB  0016               	moviw fsr1++
  8348  06CC  0401               	iorwf	1,w
  8349  06CD  1903               	btfsc	3,2
  8350  06CE  2EE4               	goto	l1134
  8351  06CF  1ABC               	btfsc	__doprnt@flag,5
  8352  06D0  2ED3               	goto	l4632
  8353  06D1  3078               	movlw	120
  8354  06D2  2ED4               	goto	L6
  8355  06D3                     l4632:	
  8356  06D3  3058               	movlw	88
  8357  06D4                     L6:	
  8358  06D4  00AB               	movwf	__doprnt$1466
  8359  06D5  3000               	movlw	0
  8360  06D6  00AC               	movwf	__doprnt$1466+1
  8361  06D7  082B               	movf	__doprnt$1466,w
  8362  06D8  00A3               	movwf	??__doprnt
  8363  06D9  0823               	movf	??__doprnt,w
  8364  06DA  00F0               	movwf	putch@data
  8365  06DB  0A3E               	incf	__doprnt@pb,w
  8366  06DC  0086               	movwf	6
  8367  06DD  0187               	clrf	7
  8368  06DE  3F41               	moviw [1]fsr1
  8369  06DF  008A               	movwf	10
  8370  06E0  3F40               	moviw [0]fsr1
  8371  06E1  000A               	callw
  8372  06E2  3181               	pagesel	$
  8373  06E3  2F98               	goto	l4670
  8374  06E4                     l1134:	
  8375  06E4  1ABC               	btfsc	__doprnt@flag,5
  8376  06E5  2EE8               	goto	l4638
  8377  06E6  3078               	movlw	120
  8378  06E7  2EE9               	goto	L7
  8379  06E8                     l4638:	
  8380  06E8  3058               	movlw	88
  8381  06E9                     L7:	
  8382  06E9  00AD               	movwf	__doprnt$1467
  8383  06EA  3000               	movlw	0
  8384  06EB  00AE               	movwf	__doprnt$1467+1
  8385  06EC  082D               	movf	__doprnt$1467,w
  8386  06ED  2F87               	goto	L17
  8387  06EE                     l4644:	
  8388                           ;doprnt.c: 1478: {
  8389                           ;doprnt.c: 1483: case 0x00:
  8390                           
  8391                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
  8392                           
  8393                           ;doprnt.c: 1466: }
  8394                           ;doprnt.c: 1469: }
  8395                           ;doprnt.c: 1474: while(prec--) {
  8396                           
  8397                           
  8398                           ;doprnt.c: 1486: case 0xC0:
  8399                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8400  06EE  300A               	movlw	10
  8401  06EF  00F8               	movwf	___lwmod@divisor
  8402  06F0  3000               	movlw	0
  8403  06F1  00F9               	movwf	___lwmod@divisor+1
  8404  06F2  0838               	movf	__doprnt@prec,w
  8405  06F3  00A3               	movwf	??__doprnt
  8406  06F4  01A4               	clrf	??__doprnt+1
  8407  06F5  35A3               	lslf	??__doprnt,f
  8408  06F6  0DA4               	rlf	??__doprnt+1,f
  8409  06F7  300C               	movlw	low (_dpowers| (0+32768))
  8410  06F8  0723               	addwf	??__doprnt,w
  8411  06F9  0084               	movwf	4
  8412  06FA  3088               	movlw	high (_dpowers| (0+32768))
  8413  06FB  3D24               	addwfc	??__doprnt+1,w
  8414  06FC  0085               	movwf	5
  8415  06FD  3F00               	moviw [0]fsr0
  8416  06FE  00F0               	movwf	___lwdiv@divisor
  8417  06FF  3F01               	moviw [1]fsr0
  8418  0700  00F1               	movwf	___lwdiv@divisor+1
  8419  0701  0837               	movf	__doprnt@val+1,w
  8420  0702  00F3               	movwf	___lwdiv@dividend+1
  8421  0703  0836               	movf	__doprnt@val,w
  8422  0704  00F2               	movwf	___lwdiv@dividend
  8423  0705  3194  2435  3181   	fcall	___lwdiv
  8424  0708  0871               	movf	?___lwdiv+1,w
  8425  0709  00FB               	movwf	___lwmod@dividend+1
  8426  070A  0870               	movf	?___lwdiv,w
  8427  070B  00FA               	movwf	___lwmod@dividend
  8428  070C  3192  22B4  3181   	fcall	___lwmod
  8429  070F  0878               	movf	?___lwmod,w
  8430  0710  2F5C               	goto	L18
  8431  0711                     l4646:	
  8432                           ;doprnt.c: 1497: case 0x80:
  8433                           
  8434                           ;doprnt.c: 1491: break;
  8435                           
  8436                           
  8437                           ;doprnt.c: 1499: {
  8438                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  8439  0711  0838               	movf	__doprnt@prec,w
  8440  0712  00A3               	movwf	??__doprnt
  8441  0713  01A4               	clrf	??__doprnt+1
  8442  0714  35A3               	lslf	??__doprnt,f
  8443  0715  0DA4               	rlf	??__doprnt+1,f
  8444  0716  3016               	movlw	low (_hexpowers| (0+32768))
  8445  0717  0723               	addwf	??__doprnt,w
  8446  0718  0084               	movwf	4
  8447  0719  3088               	movlw	high (_hexpowers| (0+32768))
  8448  071A  3D24               	addwfc	??__doprnt+1,w
  8449  071B  0085               	movwf	5
  8450  071C  3F00               	moviw [0]fsr0
  8451  071D  00F0               	movwf	___lwdiv@divisor
  8452  071E  3F01               	moviw [1]fsr0
  8453  071F  00F1               	movwf	___lwdiv@divisor+1
  8454  0720  0837               	movf	__doprnt@val+1,w
  8455  0721  00F3               	movwf	___lwdiv@dividend+1
  8456  0722  0836               	movf	__doprnt@val,w
  8457  0723  00F2               	movwf	___lwdiv@dividend
  8458  0724  3194  2435  3181   	fcall	___lwdiv
  8459  0727  0870               	movf	?___lwdiv,w
  8460  0728  390F               	andlw	15
  8461  0729  0020               	movlb	0	; select bank0
  8462  072A  00A5               	movwf	??__doprnt+2
  8463  072B  0825               	movf	??__doprnt+2,w
  8464  072C  00B1               	movwf	__doprnt@idx
  8465                           
  8466                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  8467  072D  1ABC               	btfsc	__doprnt@flag,5
  8468  072E  2F33               	goto	l4652
  8469  072F  30B3               	movlw	low (STR_52| (0+32768))
  8470  0730  00AF               	movwf	__doprnt$1473
  8471  0731  3089               	movlw	high (STR_52| (0+32768))
  8472  0732  2F36               	goto	L9
  8473  0733                     l4652:	
  8474  0733  30C4               	movlw	low (STR_44| (0+32768))
  8475  0734  00AF               	movwf	__doprnt$1473
  8476  0735  3089               	movlw	high (STR_44| (0+32768))
  8477  0736                     L9:	
  8478  0736  00B0               	movwf	__doprnt$1473+1
  8479  0737  0830               	movf	__doprnt$1473+1,w
  8480  0738  00A4               	movwf	??__doprnt+1
  8481  0739  082F               	movf	__doprnt$1473,w
  8482  073A  00A3               	movwf	??__doprnt
  8483  073B  0831               	movf	__doprnt@idx,w
  8484  073C  0723               	addwf	??__doprnt,w
  8485  073D  0084               	movwf	4
  8486  073E  0824               	movf	??__doprnt+1,w
  8487  073F  1803               	skipnc
  8488  0740  0A24               	incf	??__doprnt+1,w
  8489  0741  0085               	movwf	5
  8490  0742  0800               	movf	0,w	;code access
  8491  0743  2F5E               	goto	L10
  8492  0744                     l4656:	
  8493                           ;doprnt.c: 1516: case 0x40:
  8494                           
  8495                           ;doprnt.c: 1508: }
  8496                           ;doprnt.c: 1510: break;
  8497                           
  8498                           
  8499                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
  8500  0744  0838               	movf	__doprnt@prec,w
  8501  0745  00A3               	movwf	??__doprnt
  8502  0746  01A4               	clrf	??__doprnt+1
  8503  0747  35A3               	lslf	??__doprnt,f
  8504  0748  0DA4               	rlf	??__doprnt+1,f
  8505  0749  3000               	movlw	low (_octpowers| (0+32768))
  8506  074A  0723               	addwf	??__doprnt,w
  8507  074B  0084               	movwf	4
  8508  074C  3088               	movlw	high (_octpowers| (0+32768))
  8509  074D  3D24               	addwfc	??__doprnt+1,w
  8510  074E  0085               	movwf	5
  8511  074F  3F00               	moviw [0]fsr0
  8512  0750  00F0               	movwf	___lwdiv@divisor
  8513  0751  3F01               	moviw [1]fsr0
  8514  0752  00F1               	movwf	___lwdiv@divisor+1
  8515  0753  0837               	movf	__doprnt@val+1,w
  8516  0754  00F3               	movwf	___lwdiv@dividend+1
  8517  0755  0836               	movf	__doprnt@val,w
  8518  0756  00F2               	movwf	___lwdiv@dividend
  8519  0757  3194  2435  3181   	fcall	___lwdiv
  8520  075A  0870               	movf	?___lwdiv,w
  8521  075B  3907               	andlw	7
  8522  075C                     L18:	
  8523  075C  3E30               	addlw	48
  8524  075D  0020               	movlb	0	; select bank0
  8525  075E                     L10:	
  8526  075E  00A5               	movwf	??__doprnt+2
  8527  075F  0825               	movf	??__doprnt+2,w
  8528  0760  00BB               	movwf	__doprnt@c
  8529                           
  8530                           ;doprnt.c: 1523: }
  8531                           
  8532                           ;doprnt.c: 1520: break;
  8533  0761  2F71               	goto	l4662
  8534  0762                     l4660:	
  8535  0762  083C               	movf	__doprnt@flag,w
  8536  0763  39C0               	andlw	192
  8537                           
  8538                           ; Switch size 1, requested type "space"
  8539                           ; Number of cases is 4, Range of values is 0 to 192
  8540                           ; switch strategies available:
  8541                           ; Name         Instructions Cycles
  8542                           ; simple_byte           13     7 (average)
  8543                           ; jumptable            260     6 (fixed)
  8544                           ;	Chosen strategy is simple_byte
  8545  0764  3A00               	xorlw	0	; case 0
  8546  0765  1903               	skipnz
  8547  0766  2EEE               	goto	l4644
  8548  0767  3A40               	xorlw	64	; case 64
  8549  0768  1903               	skipnz
  8550  0769  2F44               	goto	l4656
  8551  076A  3AC0               	xorlw	192	; case 128
  8552  076B  1903               	skipnz
  8553  076C  2F11               	goto	l4646
  8554  076D  3A40               	xorlw	64	; case 192
  8555  076E  1903               	skipnz
  8556  076F  2EEE               	goto	l4644
  8557  0770  2F71               	goto	l4662
  8558  0771                     l4662:	
  8559                           
  8560                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  8561  0771  0A3E               	incf	__doprnt@pb,w
  8562  0772  0086               	movwf	6
  8563  0773  0187               	clrf	7
  8564  0774  0016               	moviw fsr1++
  8565  0775  0401               	iorwf	1,w
  8566  0776  1903               	btfsc	3,2
  8567  0777  2F85               	goto	l4666
  8568  0778  083B               	movf	__doprnt@c,w
  8569  0779  00A3               	movwf	??__doprnt
  8570  077A  0823               	movf	??__doprnt,w
  8571  077B  00F0               	movwf	putch@data
  8572  077C  0A3E               	incf	__doprnt@pb,w
  8573  077D  0086               	movwf	6
  8574  077E  0187               	clrf	7
  8575  077F  3F41               	moviw [1]fsr1
  8576  0780  008A               	movwf	10
  8577  0781  3F40               	moviw [0]fsr1
  8578  0782  000A               	callw
  8579  0783  3181               	pagesel	$
  8580  0784  2F98               	goto	l4670
  8581  0785                     l4666:	
  8582  0785  0020               	movlb	0	; select bank0
  8583  0786  083B               	movf	__doprnt@c,w
  8584  0787                     L17:	
  8585  0787  00A3               	movwf	??__doprnt
  8586  0788  083E               	movf	__doprnt@pb,w
  8587  0789  0086               	movwf	6
  8588  078A  0187               	clrf	7
  8589  078B  0801               	movf	1,w
  8590  078C  0086               	movwf	6
  8591  078D  3001               	movlw	1	; select bank2/3
  8592  078E  0087               	movwf	7
  8593  078F  0823               	movf	??__doprnt,w
  8594  0790  0081               	movwf	1
  8595  0791  3001               	movlw	1
  8596  0792  00A3               	movwf	??__doprnt
  8597  0793  083E               	movf	__doprnt@pb,w
  8598  0794  0086               	movwf	6
  8599  0795  0187               	clrf	7
  8600  0796  0823               	movf	??__doprnt,w
  8601  0797  0781               	addwf	1,f
  8602  0798                     l4670:	
  8603  0798  30FF               	movlw	255
  8604  0799  0020               	movlb	0	; select bank0
  8605  079A  00A3               	movwf	??__doprnt
  8606  079B  0823               	movf	??__doprnt,w
  8607  079C  07B8               	addwf	__doprnt@prec,f
  8608  079D  0A38               	incf	__doprnt@prec,w
  8609  079E  1D03               	btfss	3,2
  8610  079F  2F62               	goto	l4660
  8611                           
  8612                           ;doprnt.c: 1525: }
  8613                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
  8614  07A0  1DBC               	btfss	__doprnt@flag,3
  8615  07A1  297E               	goto	l4684
  8616  07A2  083A               	movf	__doprnt@width+1,w
  8617  07A3  3A80               	xorlw	128
  8618  07A4  00A3               	movwf	??__doprnt
  8619  07A5  3080               	movlw	128
  8620  07A6  0223               	subwf	??__doprnt,w
  8621  07A7  1D03               	skipz
  8622  07A8  2FAB               	goto	u5465
  8623  07A9  3001               	movlw	1
  8624  07AA  0239               	subwf	__doprnt@width,w
  8625  07AB                     u5465:	
  8626  07AB  1C03               	skipc
  8627  07AC  297E               	goto	l4684
  8628  07AD                     l4674:	
  8629                           ;doprnt.c: 1529: do
  8630                           
  8631                           
  8632                           ;doprnt.c: 1530: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  8633  07AD  0020               	movlb	0	; select bank0
  8634  07AE  0A3E               	incf	__doprnt@pb,w
  8635  07AF  0086               	movwf	6
  8636  07B0  0187               	clrf	7
  8637  07B1  0016               	moviw fsr1++
  8638  07B2  0401               	iorwf	1,w
  8639  07B3  1903               	btfsc	3,2
  8640  07B4  2FC2               	goto	l4678
  8641  07B5  3020               	movlw	32
  8642  07B6  00A3               	movwf	??__doprnt
  8643  07B7  0823               	movf	??__doprnt,w
  8644  07B8  00F0               	movwf	putch@data
  8645  07B9  0A3E               	incf	__doprnt@pb,w
  8646  07BA  0086               	movwf	6
  8647  07BB  0187               	clrf	7
  8648  07BC  3F41               	moviw [1]fsr1
  8649  07BD  008A               	movwf	10
  8650  07BE  3F40               	moviw [0]fsr1
  8651  07BF  000A               	callw
  8652  07C0  3181               	pagesel	$
  8653  07C1  2FD5               	goto	l4682
  8654  07C2                     l4678:	
  8655  07C2  3020               	movlw	32
  8656  07C3  0020               	movlb	0	; select bank0
  8657  07C4  00A3               	movwf	??__doprnt
  8658  07C5  083E               	movf	__doprnt@pb,w
  8659  07C6  0086               	movwf	6
  8660  07C7  0187               	clrf	7
  8661  07C8  0801               	movf	1,w
  8662  07C9  0086               	movwf	6
  8663  07CA  3001               	movlw	1	; select bank2/3
  8664  07CB  0087               	movwf	7
  8665  07CC  0823               	movf	??__doprnt,w
  8666  07CD  0081               	movwf	1
  8667  07CE  3001               	movlw	1
  8668  07CF  00A3               	movwf	??__doprnt
  8669  07D0  083E               	movf	__doprnt@pb,w
  8670  07D1  0086               	movwf	6
  8671  07D2  0187               	clrf	7
  8672  07D3  0823               	movf	??__doprnt,w
  8673  07D4  0781               	addwf	1,f
  8674  07D5                     l4682:	
  8675                           
  8676                           ;doprnt.c: 1531: while(--width);
  8677  07D5  30FF               	movlw	255
  8678  07D6  0020               	movlb	0	; select bank0
  8679  07D7  07B9               	addwf	__doprnt@width,f
  8680  07D8  30FF               	movlw	255
  8681  07D9  3DBA               	addwfc	__doprnt@width+1,f
  8682  07DA  0839               	movf	__doprnt@width,w
  8683  07DB  043A               	iorwf	__doprnt@width+1,w
  8684  07DC  1903               	btfsc	3,2
  8685  07DD  297E               	goto	l4684
  8686  07DE  2FAD               	goto	l4674
  8687  07DF                     l4686:	
  8688                           ;doprnt.c: 1533: }
  8689                           ;doprnt.c: 1535: alldone:
  8690                           
  8691                           
  8692                           ;doprnt.c: 1540: return 0;
  8693  07DF  01A0               	clrf	?__doprnt
  8694  07E0  01A1               	clrf	?__doprnt+1
  8695  07E1  0008               	return
  8696  07E2                     __end_of__doprnt:	
  8697                           
  8698                           	psect	text17
  8699  1025                     __ptext17:	
  8700 ;; *************** function _isdigit *****************
  8701 ;; Defined at:
  8702 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  c               1    wreg     unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  c               1    1[COMMON] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;		None               void
  8709 ;; Registers used:
  8710 ;;		wreg, status,2, status,0
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;Total ram usage:        2 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; This function calls:
  8723 ;;		Nothing
  8724 ;; This function is called by:
  8725 ;;		__doprnt
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           
  8730                           ;psect for function _isdigit
  8731  1025                     _isdigit:	
  8732                           
  8733                           ;incstack = 0
  8734                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8735                           ;isdigit@c stored from wreg
  8736  1025  00F1               	movwf	isdigit@c
  8737  1026  01F0               	clrf	_isdigit$1659
  8738  1027  303A               	movlw	58
  8739  1028  0271               	subwf	isdigit@c,w
  8740  1029  1803               	skipnc
  8741  102A  2831               	goto	l3728
  8742  102B  3030               	movlw	48
  8743  102C  0271               	subwf	isdigit@c,w
  8744  102D  1C03               	skipc
  8745  102E  2831               	goto	l3728
  8746  102F  01F0               	clrf	_isdigit$1659
  8747  1030  0AF0               	incf	_isdigit$1659,f
  8748  1031                     l3728:	
  8749  1031  0C70               	rrf	_isdigit$1659,w
  8750  1032  0008               	return
  8751  1033                     __end_of_isdigit:	
  8752                           
  8753                           	psect	text18
  8754  117B                     __ptext18:	
  8755 ;; *************** function ___wmul *****************
  8756 ;; Defined at:
  8757 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  multiplier      2    0[COMMON] unsigned int 
  8760 ;;  multiplicand    2    2[COMMON] unsigned int 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  product         2    4[COMMON] unsigned int 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  2    0[COMMON] unsigned int 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;Total ram usage:        6 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		__doprnt
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function ___wmul
  8787  117B                     ___wmul:	
  8788                           
  8789                           ;incstack = 0
  8790                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8791  117B  01F4               	clrf	___wmul@product
  8792  117C  01F5               	clrf	___wmul@product+1
  8793  117D                     l3734:	
  8794  117D  1C70               	btfss	___wmul@multiplier,0
  8795  117E  2983               	goto	l1249
  8796  117F  0872               	movf	___wmul@multiplicand,w
  8797  1180  07F4               	addwf	___wmul@product,f
  8798  1181  0873               	movf	___wmul@multiplicand+1,w
  8799  1182  3DF5               	addwfc	___wmul@product+1,f
  8800  1183                     l1249:	
  8801  1183  3001               	movlw	1
  8802  1184                     u3795:	
  8803  1184  35F2               	lslf	___wmul@multiplicand,f
  8804  1185  0DF3               	rlf	___wmul@multiplicand+1,f
  8805  1186  0B89               	decfsz	9,f
  8806  1187  2984               	goto	u3795
  8807  1188  3001               	movlw	1
  8808  1189                     u3805:	
  8809  1189  36F1               	lsrf	___wmul@multiplier+1,f
  8810  118A  0CF0               	rrf	___wmul@multiplier,f
  8811  118B  0B89               	decfsz	9,f
  8812  118C  2989               	goto	u3805
  8813  118D  0870               	movf	___wmul@multiplier,w
  8814  118E  0471               	iorwf	___wmul@multiplier+1,w
  8815  118F  1D03               	btfss	3,2
  8816  1190  297D               	goto	l3734
  8817  1191  0875               	movf	___wmul@product+1,w
  8818  1192  00F1               	movwf	?___wmul+1
  8819  1193  0874               	movf	___wmul@product,w
  8820  1194  00F0               	movwf	?___wmul
  8821  1195  0008               	return
  8822  1196                     __end_of___wmul:	
  8823                           
  8824                           	psect	text19
  8825  12B4                     __ptext19:	
  8826 ;; *************** function ___lwmod *****************
  8827 ;; Defined at:
  8828 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  divisor         2    8[COMMON] unsigned int 
  8831 ;;  dividend        2   10[COMMON] unsigned int 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  counter         1   13[COMMON] unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  2    8[COMMON] unsigned int 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;Total ram usage:        6 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_sb_readTemperature
  8853 ;;		_sb_readHumidity
  8854 ;;		__doprnt
  8855 ;;		_UART_SendDouble
  8856 ;;		_UART_SendInteger
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function ___lwmod
  8862  12B4                     ___lwmod:	
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8866  12B4  0878               	movf	___lwmod@divisor,w
  8867  12B5  0479               	iorwf	___lwmod@divisor+1,w
  8868  12B6  1903               	btfsc	3,2
  8869  12B7  2ADB               	goto	l4006
  8870  12B8  01FD               	clrf	___lwmod@counter
  8871  12B9  0AFD               	incf	___lwmod@counter,f
  8872  12BA                     l3996:	
  8873  12BA  1BF9               	btfsc	___lwmod@divisor+1,7
  8874  12BB  2AC6               	goto	l3998
  8875  12BC  3001               	movlw	1
  8876  12BD                     u4455:	
  8877  12BD  35F8               	lslf	___lwmod@divisor,f
  8878  12BE  0DF9               	rlf	___lwmod@divisor+1,f
  8879  12BF  0B89               	decfsz	9,f
  8880  12C0  2ABD               	goto	u4455
  8881  12C1  3001               	movlw	1
  8882  12C2  00FC               	movwf	??___lwmod
  8883  12C3  087C               	movf	??___lwmod,w
  8884  12C4  07FD               	addwf	___lwmod@counter,f
  8885  12C5  2ABA               	goto	l3996
  8886  12C6                     l3998:	
  8887  12C6  0879               	movf	___lwmod@divisor+1,w
  8888  12C7  027B               	subwf	___lwmod@dividend+1,w
  8889  12C8  1D03               	skipz
  8890  12C9  2ACC               	goto	u4475
  8891  12CA  0878               	movf	___lwmod@divisor,w
  8892  12CB  027A               	subwf	___lwmod@dividend,w
  8893  12CC                     u4475:	
  8894  12CC  1C03               	skipc
  8895  12CD  2AD2               	goto	l4002
  8896  12CE  0878               	movf	___lwmod@divisor,w
  8897  12CF  02FA               	subwf	___lwmod@dividend,f
  8898  12D0  0879               	movf	___lwmod@divisor+1,w
  8899  12D1  3BFB               	subwfb	___lwmod@dividend+1,f
  8900  12D2                     l4002:	
  8901  12D2  3001               	movlw	1
  8902  12D3                     u4485:	
  8903  12D3  36F9               	lsrf	___lwmod@divisor+1,f
  8904  12D4  0CF8               	rrf	___lwmod@divisor,f
  8905  12D5  0B89               	decfsz	9,f
  8906  12D6  2AD3               	goto	u4485
  8907  12D7  3001               	movlw	1
  8908  12D8  02FD               	subwf	___lwmod@counter,f
  8909  12D9  1D03               	btfss	3,2
  8910  12DA  2AC6               	goto	l3998
  8911  12DB                     l4006:	
  8912  12DB  087B               	movf	___lwmod@dividend+1,w
  8913  12DC  00F9               	movwf	?___lwmod+1
  8914  12DD  087A               	movf	___lwmod@dividend,w
  8915  12DE  00F8               	movwf	?___lwmod
  8916  12DF  0008               	return
  8917  12E0                     __end_of___lwmod:	
  8918                           
  8919                           	psect	text20
  8920  1435                     __ptext20:	
  8921 ;; *************** function ___lwdiv *****************
  8922 ;; Defined at:
  8923 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  divisor         2    0[COMMON] unsigned int 
  8926 ;;  dividend        2    2[COMMON] unsigned int 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  quotient        2    5[COMMON] unsigned int 
  8929 ;;  counter         1    7[COMMON] unsigned char 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  2    0[COMMON] unsigned int 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, status,0
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;Total ram usage:        8 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_sb_readTemperature
  8949 ;;		_sb_readHumidity
  8950 ;;		__doprnt
  8951 ;;		_UART_SendDouble
  8952 ;;		_UART_SendInteger
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function ___lwdiv
  8958  1435                     ___lwdiv:	
  8959                           
  8960                           ;incstack = 0
  8961                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8962  1435  01F5               	clrf	___lwdiv@quotient
  8963  1436  01F6               	clrf	___lwdiv@quotient+1
  8964  1437  0870               	movf	___lwdiv@divisor,w
  8965  1438  0471               	iorwf	___lwdiv@divisor+1,w
  8966  1439  1903               	btfsc	3,2
  8967  143A  2C64               	goto	l3984
  8968  143B  01F7               	clrf	___lwdiv@counter
  8969  143C  0AF7               	incf	___lwdiv@counter,f
  8970  143D                     l3972:	
  8971  143D  1BF1               	btfsc	___lwdiv@divisor+1,7
  8972  143E  2C49               	goto	l3974
  8973  143F  3001               	movlw	1
  8974  1440                     u4385:	
  8975  1440  35F0               	lslf	___lwdiv@divisor,f
  8976  1441  0DF1               	rlf	___lwdiv@divisor+1,f
  8977  1442  0B89               	decfsz	9,f
  8978  1443  2C40               	goto	u4385
  8979  1444  3001               	movlw	1
  8980  1445  00F4               	movwf	??___lwdiv
  8981  1446  0874               	movf	??___lwdiv,w
  8982  1447  07F7               	addwf	___lwdiv@counter,f
  8983  1448  2C3D               	goto	l3972
  8984  1449                     l3974:	
  8985  1449  3001               	movlw	1
  8986  144A                     u4405:	
  8987  144A  35F5               	lslf	___lwdiv@quotient,f
  8988  144B  0DF6               	rlf	___lwdiv@quotient+1,f
  8989  144C  0B89               	decfsz	9,f
  8990  144D  2C4A               	goto	u4405
  8991  144E  0871               	movf	___lwdiv@divisor+1,w
  8992  144F  0273               	subwf	___lwdiv@dividend+1,w
  8993  1450  1D03               	skipz
  8994  1451  2C54               	goto	u4415
  8995  1452  0870               	movf	___lwdiv@divisor,w
  8996  1453  0272               	subwf	___lwdiv@dividend,w
  8997  1454                     u4415:	
  8998  1454  1C03               	skipc
  8999  1455  2C5B               	goto	l3980
  9000  1456  0870               	movf	___lwdiv@divisor,w
  9001  1457  02F2               	subwf	___lwdiv@dividend,f
  9002  1458  0871               	movf	___lwdiv@divisor+1,w
  9003  1459  3BF3               	subwfb	___lwdiv@dividend+1,f
  9004  145A  1475               	bsf	___lwdiv@quotient,0
  9005  145B                     l3980:	
  9006  145B  3001               	movlw	1
  9007  145C                     u4425:	
  9008  145C  36F1               	lsrf	___lwdiv@divisor+1,f
  9009  145D  0CF0               	rrf	___lwdiv@divisor,f
  9010  145E  0B89               	decfsz	9,f
  9011  145F  2C5C               	goto	u4425
  9012  1460  3001               	movlw	1
  9013  1461  02F7               	subwf	___lwdiv@counter,f
  9014  1462  1D03               	btfss	3,2
  9015  1463  2C49               	goto	l3974
  9016  1464                     l3984:	
  9017  1464  0876               	movf	___lwdiv@quotient+1,w
  9018  1465  00F1               	movwf	?___lwdiv+1
  9019  1466  0875               	movf	___lwdiv@quotient,w
  9020  1467  00F0               	movwf	?___lwdiv
  9021  1468  0008               	return
  9022  1469                     __end_of___lwdiv:	
  9023                           
  9024                           	psect	text21
  9025  1044                     __ptext21:	
  9026 ;; *************** function ___bmul *****************
  9027 ;; Defined at:
  9028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  multiplier      1    wreg     unsigned char 
  9031 ;;  multiplicand    1    0[COMMON] unsigned char 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  multiplier      1    3[COMMON] unsigned char 
  9034 ;;  product         1    2[COMMON] unsigned char 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      unsigned char 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9044 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;Total ram usage:        4 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		__doprnt
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function ___bmul
  9059  1044                     ___bmul:	
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9063                           ;___bmul@multiplier stored from wreg
  9064  1044  00F3               	movwf	___bmul@multiplier
  9065  1045  01F2               	clrf	___bmul@product
  9066  1046                     l3748:	
  9067  1046  1C73               	btfss	___bmul@multiplier,0
  9068  1047  284C               	goto	l3752
  9069  1048  0870               	movf	___bmul@multiplicand,w
  9070  1049  00F1               	movwf	??___bmul
  9071  104A  0871               	movf	??___bmul,w
  9072  104B  07F2               	addwf	___bmul@product,f
  9073  104C                     l3752:	
  9074  104C  1003               	clrc
  9075  104D  0DF0               	rlf	___bmul@multiplicand,f
  9076  104E  1003               	clrc
  9077  104F  0CF3               	rrf	___bmul@multiplier,f
  9078  1050  0873               	movf	___bmul@multiplier,w
  9079  1051  1D03               	btfss	3,2
  9080  1052  2846               	goto	l3748
  9081  1053  0872               	movf	___bmul@product,w
  9082  1054  0008               	return
  9083  1055                     __end_of___bmul:	
  9084                           
  9085                           	psect	text22
  9086  166C                     __ptext22:	
  9087 ;; *************** function _nrf_write *****************
  9088 ;; Defined at:
  9089 ;;		line 497 in file "nRF_lib/RF24.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  buf             1    wreg     PTR unsigned char 
  9092 ;;		 -> sendPayload(32), 
  9093 ;;  len             1    3[BANK0 ] unsigned char 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  buf             1   13[BANK0 ] PTR unsigned char 
  9096 ;;		 -> sendPayload(32), 
  9097 ;;  timeout         4    8[BANK0 ] unsigned long 
  9098 ;;  tx_ok           1   17[BANK0 ] unsigned char 
  9099 ;;  tx_fail         1   16[BANK0 ] unsigned char 
  9100 ;;  observe_tx      1   15[BANK0 ] unsigned char 
  9101 ;;  result          1   14[BANK0 ] unsigned char 
  9102 ;;  status          1   12[BANK0 ] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      unsigned char 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9112 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;Total ram usage:       15 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    3
  9119 ;; This function calls:
  9120 ;;		_nrf_flush_tx
  9121 ;;		_nrf_getDynamicPayloadSize
  9122 ;;		_nrf_powerDown
  9123 ;;		_nrf_read_register_len
  9124 ;;		_nrf_startWrite
  9125 ;;		_nrf_whatHappened
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           
  9132                           ;psect for function _nrf_write
  9133  166C                     _nrf_write:	
  9134                           
  9135                           ;incstack = 0
  9136                           ; Regs used in _nrf_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9137                           ;nrf_write@buf stored from wreg
  9138  166C  0020               	movlb	0	; select bank0
  9139  166D  00AD               	movwf	nrf_write@buf
  9140                           
  9141                           ;RF24.c: 499: bool result = 0;
  9142  166E  01AE               	clrf	nrf_write@result
  9143                           
  9144                           ;RF24.c: 502: nrf_startWrite(buf,len);
  9145  166F  0823               	movf	nrf_write@len,w
  9146  1670  00A4               	movwf	??_nrf_write
  9147  1671  0824               	movf	??_nrf_write,w
  9148  1672  00A0               	movwf	nrf_startWrite@len
  9149  1673  082D               	movf	nrf_write@buf,w
  9150  1674  3194  2401  3196   	fcall	_nrf_startWrite
  9151                           
  9152                           ;RF24.c: 515: uint8_t observe_tx;
  9153                           ;RF24.c: 516: uint8_t status;
  9154                           ;RF24.c: 518: uint32_t timeout = 500000;
  9155  1677  3000               	movlw	0
  9156  1678  0020               	movlb	0	; select bank0
  9157  1679  00AB               	movwf	nrf_write@timeout+3
  9158  167A  3007               	movlw	7
  9159  167B  00AA               	movwf	nrf_write@timeout+2
  9160  167C  30A1               	movlw	161
  9161  167D  00A9               	movwf	nrf_write@timeout+1
  9162  167E  3020               	movlw	32
  9163  167F  00A8               	movwf	nrf_write@timeout
  9164  1680                     l4828:	
  9165                           ;RF24.c: 520: do
  9166                           
  9167                           
  9168                           ;RF24.c: 521: {
  9169                           ;RF24.c: 522: status = nrf_read_register_len(0x08, &observe_tx, 1);
  9170  1680  302F               	movlw	(low (nrf_write@observe_tx| 0))& (0+255)
  9171  1681  00A4               	movwf	??_nrf_write
  9172  1682  0824               	movf	??_nrf_write,w
  9173  1683  00F2               	movwf	nrf_read_register_len@buf
  9174  1684  01F3               	clrf	nrf_read_register_len@len
  9175  1685  0AF3               	incf	nrf_read_register_len@len,f
  9176  1686  3008               	movlw	8
  9177  1687  3192  2289  3196   	fcall	_nrf_read_register_len
  9178  168A  0020               	movlb	0	; select bank0
  9179  168B  00A5               	movwf	??_nrf_write+1
  9180  168C  0825               	movf	??_nrf_write+1,w
  9181  168D  00AC               	movwf	nrf_write@status
  9182                           
  9183                           ;RF24.c: 523: timeout--;
  9184  168E  3001               	movlw	1
  9185  168F  00A4               	movwf	??_nrf_write
  9186  1690  3000               	movlw	0
  9187  1691  00A5               	movwf	??_nrf_write+1
  9188  1692  3000               	movlw	0
  9189  1693  00A6               	movwf	??_nrf_write+2
  9190  1694  3000               	movlw	0
  9191  1695  00A7               	movwf	??_nrf_write+3
  9192  1696  0824               	movf	??_nrf_write,w
  9193  1697  02A8               	subwf	nrf_write@timeout,f
  9194  1698  0825               	movf	??_nrf_write+1,w
  9195  1699  3BA9               	subwfb	nrf_write@timeout+1,f
  9196  169A  0826               	movf	??_nrf_write+2,w
  9197  169B  3BAA               	subwfb	nrf_write@timeout+2,f
  9198  169C  0827               	movf	??_nrf_write+3,w
  9199  169D  3BAB               	subwfb	nrf_write@timeout+3,f
  9200                           
  9201                           ;RF24.c: 528: }
  9202                           ;RF24.c: 529: while( ! ( status & ( (1<<(5)) | (1<<(4)) ) ) && ( timeout > 0) );
  9203  169E  082C               	movf	nrf_write@status,w
  9204  169F  3930               	andlw	48
  9205  16A0  1D03               	btfss	3,2
  9206  16A1  2EA8               	goto	l4836
  9207  16A2  082B               	movf	nrf_write@timeout+3,w
  9208  16A3  042A               	iorwf	nrf_write@timeout+2,w
  9209  16A4  0429               	iorwf	nrf_write@timeout+1,w
  9210  16A5  0428               	iorwf	nrf_write@timeout,w
  9211  16A6  1D03               	skipz
  9212  16A7  2E80               	goto	l4828
  9213  16A8                     l4836:	
  9214                           
  9215                           ;RF24.c: 540: bool tx_ok, tx_fail;
  9216                           ;RF24.c: 541: nrf_whatHappened(&tx_ok, &tx_fail, &ack_payload_available);
  9217  16A8  3030               	movlw	(low (nrf_write@tx_fail| 0))& (0+255)
  9218  16A9  00A4               	movwf	??_nrf_write
  9219  16AA  0824               	movf	??_nrf_write,w
  9220  16AB  00F9               	movwf	nrf_whatHappened@tx_fail
  9221  16AC  30B3               	movlw	(low (_ack_payload_available| 0))& (0+255)
  9222  16AD  00A5               	movwf	??_nrf_write+1
  9223  16AE  0825               	movf	??_nrf_write+1,w
  9224  16AF  00FA               	movwf	nrf_whatHappened@rx_ready
  9225  16B0  3031               	movlw	(low (nrf_write@tx_ok| 0))& (0+255)
  9226  16B1  3192  2214  3196   	fcall	_nrf_whatHappened
  9227                           
  9228                           ;RF24.c: 545: result = tx_ok;
  9229  16B4  0020               	movlb	0	; select bank0
  9230  16B5  0831               	movf	nrf_write@tx_ok,w
  9231  16B6  00A4               	movwf	??_nrf_write
  9232  16B7  0824               	movf	??_nrf_write,w
  9233  16B8  00AE               	movwf	nrf_write@result
  9234                           
  9235                           ;RF24.c: 551: if ( ack_payload_available )
  9236  16B9  0021               	movlb	1	; select bank1
  9237  16BA  0833               	movf	_ack_payload_available^(0+128),w
  9238  16BB  1903               	btfsc	3,2
  9239  16BC  2EC5               	goto	l242
  9240                           
  9241                           ;RF24.c: 552: {
  9242                           ;RF24.c: 553: ack_payload_length = nrf_getDynamicPayloadSize();
  9243  16BD  3191  212B  3196   	fcall	_nrf_getDynamicPayloadSize
  9244  16C0  0020               	movlb	0	; select bank0
  9245  16C1  00A4               	movwf	??_nrf_write
  9246  16C2  0824               	movf	??_nrf_write,w
  9247  16C3  0021               	movlb	1	; select bank1
  9248  16C4  00A5               	movwf	_ack_payload_length^(0+128)
  9249  16C5                     l242:	
  9250                           
  9251                           ;RF24.c: 563: }
  9252                           ;RF24.c: 568: nrf_powerDown();
  9253  16C5  3190  200B  3196   	fcall	_nrf_powerDown
  9254                           
  9255                           ;RF24.c: 571: nrf_flush_tx();
  9256  16C8  3190  207C         	fcall	_nrf_flush_tx
  9257                           
  9258                           ;RF24.c: 573: return result;
  9259  16CA  0020               	movlb	0	; select bank0
  9260  16CB  082E               	movf	nrf_write@result,w
  9261  16CC  0008               	return
  9262  16CD                     __end_of_nrf_write:	
  9263                           
  9264                           	psect	text23
  9265  1214                     __ptext23:	
  9266 ;; *************** function _nrf_whatHappened *****************
  9267 ;; Defined at:
  9268 ;;		line 660 in file "nRF_lib/RF24.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  tx_ok           1    wreg     PTR unsigned char 
  9271 ;;		 -> nrf_write@tx_ok(1), 
  9272 ;;  tx_fail         1    9[COMMON] PTR unsigned char 
  9273 ;;		 -> nrf_write@tx_fail(1), 
  9274 ;;  rx_ready        1   10[COMMON] PTR unsigned char 
  9275 ;;		 -> ack_payload_available(1), 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  tx_ok           1    0[BANK0 ] PTR unsigned char 
  9278 ;;		 -> nrf_write@tx_ok(1), 
  9279 ;;  status          1    1[BANK0 ] unsigned char 
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;Total ram usage:        6 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    2
  9296 ;; This function calls:
  9297 ;;		_nrf_write_register
  9298 ;; This function is called by:
  9299 ;;		_nrf_write
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           
  9304                           ;psect for function _nrf_whatHappened
  9305  1214                     _nrf_whatHappened:	
  9306                           
  9307                           ;incstack = 0
  9308                           ; Regs used in _nrf_whatHappened: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9309                           ;nrf_whatHappened@tx_ok stored from wreg
  9310  1214  0020               	movlb	0	; select bank0
  9311  1215  00A0               	movwf	nrf_whatHappened@tx_ok
  9312                           
  9313                           ;RF24.c: 664: uint8_t status = nrf_write_register(0x07, (1<<(6)) | (1<<(5)) | (1<<(4)) )
      +                          ;
  9314  1216  3070               	movlw	112
  9315  1217  00FB               	movwf	??_nrf_whatHappened
  9316  1218  087B               	movf	??_nrf_whatHappened,w
  9317  1219  00F5               	movwf	nrf_write_register@value
  9318  121A  3007               	movlw	7
  9319  121B  3191  2196         	fcall	_nrf_write_register
  9320  121D  00FC               	movwf	??_nrf_whatHappened+1
  9321  121E  087C               	movf	??_nrf_whatHappened+1,w
  9322  121F  0020               	movlb	0	; select bank0
  9323  1220  00A1               	movwf	nrf_whatHappened@status
  9324                           
  9325                           ;RF24.c: 667: *tx_ok = status & (1<<(5));
  9326  1221  0821               	movf	nrf_whatHappened@status,w
  9327  1222  3920               	andlw	32
  9328  1223  00FB               	movwf	??_nrf_whatHappened
  9329  1224  0820               	movf	nrf_whatHappened@tx_ok,w
  9330  1225  0086               	movwf	6
  9331  1226  0187               	clrf	7
  9332  1227  087B               	movf	??_nrf_whatHappened,w
  9333  1228  0081               	movwf	1
  9334                           
  9335                           ;RF24.c: 668: *tx_fail = status & (1<<(4));
  9336  1229  0821               	movf	nrf_whatHappened@status,w
  9337  122A  3910               	andlw	16
  9338  122B  00FB               	movwf	??_nrf_whatHappened
  9339  122C  0879               	movf	nrf_whatHappened@tx_fail,w
  9340  122D  0086               	movwf	6
  9341  122E  0187               	clrf	7
  9342  122F  087B               	movf	??_nrf_whatHappened,w
  9343  1230  0081               	movwf	1
  9344                           
  9345                           ;RF24.c: 669: *rx_ready = status & (1<<(6));
  9346  1231  0821               	movf	nrf_whatHappened@status,w
  9347  1232  3940               	andlw	64
  9348  1233  00FB               	movwf	??_nrf_whatHappened
  9349  1234  087A               	movf	nrf_whatHappened@rx_ready,w
  9350  1235  0086               	movwf	6
  9351  1236  0187               	clrf	7
  9352  1237  087B               	movf	??_nrf_whatHappened,w
  9353  1238  0081               	movwf	1
  9354  1239  0008               	return
  9355  123A                     __end_of_nrf_whatHappened:	
  9356                           
  9357                           	psect	text24
  9358  1401                     __ptext24:	
  9359 ;; *************** function _nrf_startWrite *****************
  9360 ;; Defined at:
  9361 ;;		line 577 in file "nRF_lib/RF24.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  buf             1    wreg     PTR unsigned char 
  9364 ;;		 -> sendPayload(32), 
  9365 ;;  len             1    0[BANK0 ] unsigned char 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  buf             1    2[BANK0 ] PTR unsigned char 
  9368 ;;		 -> sendPayload(32), 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9378 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;Total ram usage:        3 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; Hardware stack levels required when called:    2
  9385 ;; This function calls:
  9386 ;;		_nrf_ce
  9387 ;;		_nrf_read_register
  9388 ;;		_nrf_write_payload
  9389 ;;		_nrf_write_register
  9390 ;; This function is called by:
  9391 ;;		_nrf_write
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           
  9396                           ;psect for function _nrf_startWrite
  9397  1401                     _nrf_startWrite:	
  9398                           
  9399                           ;incstack = 0
  9400                           ; Regs used in _nrf_startWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9401                           ;nrf_startWrite@buf stored from wreg
  9402  1401  0020               	movlb	0	; select bank0
  9403  1402  00A2               	movwf	nrf_startWrite@buf
  9404                           
  9405                           ;RF24.c: 580: nrf_write_register(0x00, ( nrf_read_register(0x00) | (1<<(1)) ) & ~(1<<(0)
      +                          ) );
  9406  1403  3000               	movlw	0
  9407  1404  3191  2145  3194   	fcall	_nrf_read_register
  9408  1407  3802               	iorlw	2
  9409  1408  39FE               	andlw	254
  9410  1409  0020               	movlb	0	; select bank0
  9411  140A  00A1               	movwf	??_nrf_startWrite
  9412  140B  0821               	movf	??_nrf_startWrite,w
  9413  140C  00F5               	movwf	nrf_write_register@value
  9414  140D  3000               	movlw	0
  9415  140E  3191  2196  3194   	fcall	_nrf_write_register
  9416                           
  9417                           ;RF24.c: 581: _delay((unsigned long)((150)*(32000000/4000000.0)));
  9418  1411  30EF               	movlw	239
  9419  1412  0020               	movlb	0	; select bank0
  9420  1413  00A1               	movwf	??_nrf_startWrite
  9421  1414                     u6447:	
  9422  1414  3200               	nop2
  9423  1415  0BA1               	decfsz	??_nrf_startWrite,f
  9424  1416  2C14               	goto	u6447
  9425  1417  3200               	nop2	;nop
  9426  1418  3200               	nop2	;nop
  9427                           
  9428                           ;RF24.c: 584: nrf_write_payload( buf, len );
  9429  1419  0020               	movlb	0	; select bank0
  9430  141A  0820               	movf	nrf_startWrite@len,w
  9431  141B  00A1               	movwf	??_nrf_startWrite
  9432  141C  0821               	movf	??_nrf_startWrite,w
  9433  141D  00F2               	movwf	nrf_write_payload@len
  9434  141E  0822               	movf	nrf_startWrite@buf,w
  9435  141F  3196  2610  3194   	fcall	_nrf_write_payload
  9436                           
  9437                           ;RF24.c: 587: nrf_ce(1);
  9438  1422  3001               	movlw	1
  9439  1423  00F0               	movwf	nrf_ce@level
  9440  1424  3000               	movlw	0
  9441  1425  00F1               	movwf	nrf_ce@level+1
  9442  1426  319F  27CD  3194   	fcall	_nrf_ce
  9443                           
  9444                           ;RF24.c: 588: _delay((unsigned long)((15)*(32000000/4000000.0)));
  9445  1429  3027               	movlw	39
  9446  142A  0020               	movlb	0	; select bank0
  9447  142B  00A1               	movwf	??_nrf_startWrite
  9448  142C                     u6457:	
  9449  142C  0BA1               	decfsz	??_nrf_startWrite,f
  9450  142D  2C2C               	goto	u6457
  9451  142E  3200               	nop2	;nop
  9452                           
  9453                           ;RF24.c: 589: nrf_ce(0);
  9454  142F  3000               	movlw	0
  9455  1430  00F0               	movwf	nrf_ce@level
  9456  1431  00F1               	movwf	nrf_ce@level+1
  9457  1432  319F  27CD         	fcall	_nrf_ce
  9458  1434  0008               	return
  9459  1435                     __end_of_nrf_startWrite:	
  9460                           
  9461                           	psect	text25
  9462  1610                     __ptext25:	
  9463 ;; *************** function _nrf_write_payload *****************
  9464 ;; Defined at:
  9465 ;;		line 105 in file "nRF_lib/RF24.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  buf             1    wreg     PTR unsigned char 
  9468 ;;		 -> sendPayload(32), 
  9469 ;;  len             1    2[COMMON] unsigned char 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  buf             1    6[COMMON] PTR unsigned char 
  9472 ;;		 -> sendPayload(32), 
  9473 ;;  data_len        1   13[COMMON] unsigned char 
  9474 ;;  i               1   12[COMMON] unsigned char 
  9475 ;;  blank_len       1   11[COMMON] unsigned char 
  9476 ;;  status          1    5[COMMON] unsigned char 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      unsigned char 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9486 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;Total ram usage:       12 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    1
  9493 ;; This function calls:
  9494 ;;		_nrf_csn
  9495 ;;		_spi_fast_shift
  9496 ;; This function is called by:
  9497 ;;		_nrf_startWrite
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           
  9502                           ;psect for function _nrf_write_payload
  9503  1610                     _nrf_write_payload:	
  9504                           
  9505                           ;RF24.c: 107: uint8_t status;
  9506                           ;RF24.c: 111: uint8_t data_len = (((len) < (payload_size)) ? (len) : (payload_size));
  9507                           
  9508                           ;incstack = 0
  9509                           ; Regs used in _nrf_write_payload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9510  1610  0021               	movlb	1	; select bank1
  9511  1611  0828               	movf	_payload_size^(0+128),w
  9512  1612  0272               	subwf	nrf_write_payload@len,w
  9513  1613  1C03               	skipc
  9514  1614  2E17               	goto	l3632
  9515  1615  0828               	movf	_payload_size^(0+128),w
  9516  1616  2E18               	goto	L20
  9517  1617                     l3632:	
  9518  1617  0872               	movf	nrf_write_payload@len,w
  9519  1618                     L20:	
  9520  1618  00F3               	movwf	??_nrf_write_payload
  9521  1619  01F4               	clrf	??_nrf_write_payload+1
  9522  161A  0873               	movf	??_nrf_write_payload,w
  9523  161B  00F7               	movwf	_nrf_write_payload$190
  9524  161C  0874               	movf	??_nrf_write_payload+1,w
  9525  161D  00F8               	movwf	_nrf_write_payload$190+1
  9526  161E  0877               	movf	_nrf_write_payload$190,w
  9527  161F  00F3               	movwf	??_nrf_write_payload
  9528  1620  0873               	movf	??_nrf_write_payload,w
  9529  1621  00FD               	movwf	nrf_write_payload@data_len
  9530                           
  9531                           ;RF24.c: 112: uint8_t blank_len = dynamic_payloads_enabled ? 0 : payload_size - data_len
      +                          ;
  9532  1622  0826               	movf	_dynamic_payloads_enabled^(0+128),w
  9533  1623  1D03               	btfss	3,2
  9534  1624  2E35               	goto	l3638
  9535  1625  087D               	movf	nrf_write_payload@data_len,w
  9536  1626  00F3               	movwf	??_nrf_write_payload
  9537  1627  01F4               	clrf	??_nrf_write_payload+1
  9538  1628  09F3               	comf	??_nrf_write_payload,f
  9539  1629  09F4               	comf	??_nrf_write_payload+1,f
  9540  162A  0AF3               	incf	??_nrf_write_payload,f
  9541  162B  1903               	skipnz
  9542  162C  0AF4               	incf	??_nrf_write_payload+1,f
  9543  162D  0828               	movf	_payload_size^(0+128),w
  9544  162E  0773               	addwf	??_nrf_write_payload,w
  9545  162F  00F9               	movwf	_nrf_write_payload$192
  9546  1630  0874               	movf	??_nrf_write_payload+1,w
  9547  1631  1803               	skipnc
  9548  1632  0A74               	incf	??_nrf_write_payload+1,w
  9549  1633  00FA               	movwf	_nrf_write_payload$192+1
  9550  1634  2E37               	goto	l3640
  9551  1635                     l3638:	
  9552  1635  01F9               	clrf	_nrf_write_payload$192
  9553  1636  01FA               	clrf	_nrf_write_payload$192+1
  9554  1637                     l3640:	
  9555  1637  0879               	movf	_nrf_write_payload$192,w
  9556  1638  00F3               	movwf	??_nrf_write_payload
  9557  1639  0873               	movf	??_nrf_write_payload,w
  9558  163A  00FB               	movwf	nrf_write_payload@blank_len
  9559                           
  9560                           ;RF24.c: 116: uint8_t i=0;
  9561  163B  01FC               	clrf	nrf_write_payload@i
  9562                           
  9563                           ;RF24.c: 118: nrf_csn(0);
  9564  163C  3000               	movlw	0
  9565  163D  00F0               	movwf	nrf_csn@mode
  9566  163E  00F1               	movwf	nrf_csn@mode+1
  9567  163F  319F  27C6  3196   	fcall	_nrf_csn
  9568                           
  9569                           ;RF24.c: 119: status = spi_fast_shift( 0xA0 );
  9570  1642  30A0               	movlw	160
  9571  1643  3190  2000  3196   	fcall	_spi_fast_shift
  9572  1646  00F3               	movwf	??_nrf_write_payload
  9573  1647  0873               	movf	??_nrf_write_payload,w
  9574  1648  00F5               	movwf	nrf_write_payload@status
  9575  1649                     l3652:	
  9576                           ;RF24.c: 120: while ( data_len-- ){
  9577                           
  9578  1649  3001               	movlw	1
  9579  164A  02FD               	subwf	nrf_write_payload@data_len,f
  9580  164B  0A7D               	incf	nrf_write_payload@data_len,w
  9581  164C  1903               	btfsc	3,2
  9582  164D  2E60               	goto	l3656
  9583                           
  9584                           ;RF24.c: 121: spi_fast_shift((unsigned char) sendPayload[i++]);
  9585  164E  087C               	movf	nrf_write_payload@i,w
  9586  164F  3E40               	addlw	(low (_sendPayload| (0+256)))& (0+255)
  9587  1650  0086               	movwf	6
  9588  1651  3001               	movlw	1	; select bank2/3
  9589  1652  0087               	movwf	7
  9590  1653  0801               	movf	1,w
  9591  1654  3190  2000  3196   	fcall	_spi_fast_shift
  9592  1657  3001               	movlw	1
  9593  1658  00F3               	movwf	??_nrf_write_payload
  9594  1659  0873               	movf	??_nrf_write_payload,w
  9595  165A  07FC               	addwf	nrf_write_payload@i,f
  9596  165B  2E49               	goto	l3652
  9597  165C                     l3654:	
  9598                           ;RF24.c: 122: }
  9599                           ;RF24.c: 123: while ( blank_len-- ){
  9600                           
  9601                           
  9602                           ;RF24.c: 124: spi_fast_shift(0);
  9603  165C  3000               	movlw	0
  9604  165D  3190  2000  3196   	fcall	_spi_fast_shift
  9605  1660                     l3656:	
  9606  1660  3001               	movlw	1
  9607  1661  02FB               	subwf	nrf_write_payload@blank_len,f
  9608  1662  0A7B               	incf	nrf_write_payload@blank_len,w
  9609  1663  1D03               	btfss	3,2
  9610  1664  2E5C               	goto	l3654
  9611                           
  9612                           ;RF24.c: 125: }
  9613                           ;RF24.c: 126: nrf_csn(1);
  9614  1665  3001               	movlw	1
  9615  1666  00F0               	movwf	nrf_csn@mode
  9616  1667  3000               	movlw	0
  9617  1668  00F1               	movwf	nrf_csn@mode+1
  9618  1669  319F  27C6         	fcall	_nrf_csn
  9619  166B  0008               	return
  9620  166C                     __end_of_nrf_write_payload:	
  9621                           ;RF24.c: 128: return status;
  9622                           ;	Return value of _nrf_write_payload is never used
  9623                           
  9624                           
  9625                           	psect	text26
  9626  1289                     __ptext26:	
  9627 ;; *************** function _nrf_read_register_len *****************
  9628 ;; Defined at:
  9629 ;;		line 42 in file "nRF_lib/RF24.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  reg             1    wreg     unsigned char 
  9632 ;;  buf             1    2[COMMON] PTR unsigned char 
  9633 ;;		 -> nrf_write@observe_tx(1), nrf_print_address_register@buffer(5), 
  9634 ;;  len             1    3[COMMON] unsigned char 
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;  reg             1    5[COMMON] unsigned char 
  9637 ;;  status          1    6[COMMON] unsigned char 
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  1    wreg      unsigned char 
  9640 ;; Registers used:
  9641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;Total ram usage:        5 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:    1
  9654 ;; This function calls:
  9655 ;;		_nrf_csn
  9656 ;;		_spi_fast_shift
  9657 ;; This function is called by:
  9658 ;;		_nrf_write
  9659 ;;		_nrf_print_address_register
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function _nrf_read_register_len
  9665  1289                     _nrf_read_register_len:	
  9666                           
  9667                           ;incstack = 0
  9668                           ; Regs used in _nrf_read_register_len: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9669                           ;nrf_read_register_len@reg stored from wreg
  9670  1289  00F5               	movwf	nrf_read_register_len@reg
  9671                           
  9672                           ;RF24.c: 44: uint8_t status;
  9673                           ;RF24.c: 46: nrf_csn(0);
  9674  128A  3000               	movlw	0
  9675  128B  00F0               	movwf	nrf_csn@mode
  9676  128C  00F1               	movwf	nrf_csn@mode+1
  9677  128D  319F  27C6  3192   	fcall	_nrf_csn
  9678                           
  9679                           ;RF24.c: 47: status = spi_fast_shift( 0x00 | ( 0x1F & reg ) );
  9680  1290  0875               	movf	nrf_read_register_len@reg,w
  9681  1291  391F               	andlw	31
  9682  1292  3190  2000  3192   	fcall	_spi_fast_shift
  9683  1295  00F4               	movwf	??_nrf_read_register_len
  9684  1296  0874               	movf	??_nrf_read_register_len,w
  9685  1297  00F6               	movwf	nrf_read_register_len@status
  9686  1298                     l4022:	
  9687                           ;RF24.c: 48: while ( len-- )
  9688                           
  9689  1298  3001               	movlw	1
  9690  1299  02F3               	subwf	nrf_read_register_len@len,f
  9691  129A  0A73               	incf	nrf_read_register_len@len,w
  9692  129B  1903               	btfsc	3,2
  9693  129C  2AAC               	goto	l4024
  9694                           
  9695                           ;RF24.c: 49: *buf++ = spi_fast_shift(0xff);
  9696  129D  30FF               	movlw	255
  9697  129E  3190  2000  3192   	fcall	_spi_fast_shift
  9698  12A1  00F4               	movwf	??_nrf_read_register_len
  9699  12A2  0872               	movf	nrf_read_register_len@buf,w
  9700  12A3  0086               	movwf	6
  9701  12A4  0187               	clrf	7
  9702  12A5  0874               	movf	??_nrf_read_register_len,w
  9703  12A6  0081               	movwf	1
  9704  12A7  3001               	movlw	1
  9705  12A8  00F4               	movwf	??_nrf_read_register_len
  9706  12A9  0874               	movf	??_nrf_read_register_len,w
  9707  12AA  07F2               	addwf	nrf_read_register_len@buf,f
  9708  12AB  2A98               	goto	l4022
  9709  12AC                     l4024:	
  9710                           
  9711                           ;RF24.c: 51: nrf_csn(1);
  9712  12AC  3001               	movlw	1
  9713  12AD  00F0               	movwf	nrf_csn@mode
  9714  12AE  3000               	movlw	0
  9715  12AF  00F1               	movwf	nrf_csn@mode+1
  9716  12B0  319F  27C6         	fcall	_nrf_csn
  9717                           
  9718                           ;RF24.c: 53: return status;
  9719  12B2  0876               	movf	nrf_read_register_len@status,w
  9720  12B3  0008               	return
  9721  12B4                     __end_of_nrf_read_register_len:	
  9722                           
  9723                           	psect	text27
  9724  100B                     __ptext27:	
  9725 ;; *************** function _nrf_powerDown *****************
  9726 ;; Defined at:
  9727 ;;		line 483 in file "nRF_lib/RF24.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0, pclath, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;Total ram usage:        1 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    2
  9748 ;; This function calls:
  9749 ;;		_nrf_read_register
  9750 ;;		_nrf_write_register
  9751 ;; This function is called by:
  9752 ;;		_nrf_write
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           
  9757                           ;psect for function _nrf_powerDown
  9758  100B                     _nrf_powerDown:	
  9759                           
  9760                           ;RF24.c: 485: nrf_write_register(0x00, nrf_read_register(0x00) & ~(1<<(1)));
  9761                           
  9762                           ;incstack = 0
  9763                           ; Regs used in _nrf_powerDown: [wreg+status,2+status,0+pclath+cstack]
  9764  100B  3000               	movlw	0
  9765  100C  3191  2145  3190   	fcall	_nrf_read_register
  9766  100F  39FD               	andlw	253
  9767  1010  00F9               	movwf	??_nrf_powerDown
  9768  1011  0879               	movf	??_nrf_powerDown,w
  9769  1012  00F5               	movwf	nrf_write_register@value
  9770  1013  3000               	movlw	0
  9771  1014  3191  2196         	fcall	_nrf_write_register
  9772  1016  0008               	return
  9773  1017                     __end_of_nrf_powerDown:	
  9774                           
  9775                           	psect	text28
  9776  112B                     __ptext28:	
  9777 ;; *************** function _nrf_getDynamicPayloadSize *****************
  9778 ;; Defined at:
  9779 ;;		line 594 in file "nRF_lib/RF24.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;		None
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  result          1    3[COMMON] unsigned char 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      unsigned char 
  9786 ;; Registers used:
  9787 ;;		wreg, status,2, status,0, pclath, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;Total ram usage:        2 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    1
  9800 ;; This function calls:
  9801 ;;		_nrf_csn
  9802 ;;		_spi_fast_shift
  9803 ;; This function is called by:
  9804 ;;		_nrf_write
  9805 ;;		_main
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           
  9810                           ;psect for function _nrf_getDynamicPayloadSize
  9811  112B                     _nrf_getDynamicPayloadSize:	
  9812                           
  9813                           ;RF24.c: 596: uint8_t result = 0;
  9814                           
  9815                           ;incstack = 0
  9816                           ; Regs used in _nrf_getDynamicPayloadSize: [wreg+status,2+status,0+pclath+cstack]
  9817  112B  01F3               	clrf	nrf_getDynamicPayloadSize@result
  9818                           
  9819                           ;RF24.c: 598: nrf_csn(0);
  9820  112C  3000               	movlw	0
  9821  112D  00F0               	movwf	nrf_csn@mode
  9822  112E  00F1               	movwf	nrf_csn@mode+1
  9823  112F  319F  27C6  3191   	fcall	_nrf_csn
  9824                           
  9825                           ;RF24.c: 599: spi_fast_shift( 0x60 );
  9826  1132  3060               	movlw	96
  9827  1133  3190  2000  3191   	fcall	_spi_fast_shift
  9828                           
  9829                           ;RF24.c: 600: result = spi_fast_shift(0xff);
  9830  1136  30FF               	movlw	255
  9831  1137  3190  2000  3191   	fcall	_spi_fast_shift
  9832  113A  00F2               	movwf	??_nrf_getDynamicPayloadSize
  9833  113B  0872               	movf	??_nrf_getDynamicPayloadSize,w
  9834  113C  00F3               	movwf	nrf_getDynamicPayloadSize@result
  9835                           
  9836                           ;RF24.c: 601: nrf_csn(1);
  9837  113D  3001               	movlw	1
  9838  113E  00F0               	movwf	nrf_csn@mode
  9839  113F  3000               	movlw	0
  9840  1140  00F1               	movwf	nrf_csn@mode+1
  9841  1141  319F  27C6         	fcall	_nrf_csn
  9842                           
  9843                           ;RF24.c: 603: return result;
  9844  1143  0873               	movf	nrf_getDynamicPayloadSize@result,w
  9845  1144  0008               	return
  9846  1145                     __end_of_nrf_getDynamicPayloadSize:	
  9847                           
  9848                           	psect	text29
  9849  1FF4                     __ptext29:	
  9850 ;; *************** function _nrf_stopListening *****************
  9851 ;; Defined at:
  9852 ;;		line 474 in file "nRF_lib/RF24.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, status,2, status,0, pclath, cstack
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;Total ram usage:        0 bytes
  9871 ;; Hardware stack levels used:    1
  9872 ;; Hardware stack levels required when called:    2
  9873 ;; This function calls:
  9874 ;;		_nrf_ce
  9875 ;;		_nrf_flush_rx
  9876 ;;		_nrf_flush_tx
  9877 ;; This function is called by:
  9878 ;;		_main
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           
  9883                           ;psect for function _nrf_stopListening
  9884  1FF4                     _nrf_stopListening:	
  9885                           
  9886                           ;RF24.c: 476: nrf_ce(0);
  9887                           
  9888                           ;incstack = 0
  9889                           ; Regs used in _nrf_stopListening: [wreg+status,2+status,0+pclath+cstack]
  9890  1FF4  3000               	movlw	0
  9891  1FF5  00F0               	movwf	nrf_ce@level
  9892  1FF6  00F1               	movwf	nrf_ce@level+1
  9893  1FF7  319F  27CD  319F   	fcall	_nrf_ce
  9894                           
  9895                           ;RF24.c: 477: nrf_flush_tx();
  9896  1FFA  3190  207C  319F   	fcall	_nrf_flush_tx
  9897                           
  9898                           ;RF24.c: 478: nrf_flush_rx();
  9899  1FFD  3190  2068         	fcall	_nrf_flush_rx
  9900  1FFF  0008               	return
  9901  2000                     __end_of_nrf_stopListening:	
  9902                           
  9903                           	psect	text30
  9904  1469                     __ptext30:	
  9905 ;; *************** function _nrf_startListening *****************
  9906 ;; Defined at:
  9907 ;;		line 452 in file "nRF_lib/RF24.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;		None
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9925 ;;Total ram usage:        2 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    2
  9928 ;; This function calls:
  9929 ;;		_nrf_ce
  9930 ;;		_nrf_flush_rx
  9931 ;;		_nrf_flush_tx
  9932 ;;		_nrf_read_register
  9933 ;;		_nrf_write_register
  9934 ;;		_nrf_write_register_len
  9935 ;; This function is called by:
  9936 ;;		_main
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           
  9941                           ;psect for function _nrf_startListening
  9942  1469                     _nrf_startListening:	
  9943                           
  9944                           ;RF24.c: 454: nrf_write_register(0x00, nrf_read_register(0x00) | (1<<(1)) | (1<<(0)));
  9945                           
  9946                           ;incstack = 0
  9947                           ; Regs used in _nrf_startListening: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9948  1469  3000               	movlw	0
  9949  146A  3191  2145  3194   	fcall	_nrf_read_register
  9950  146D  3803               	iorlw	3
  9951  146E  00F9               	movwf	??_nrf_startListening
  9952  146F  0879               	movf	??_nrf_startListening,w
  9953  1470  00F5               	movwf	nrf_write_register@value
  9954  1471  3000               	movlw	0
  9955  1472  3191  2196  3194   	fcall	_nrf_write_register
  9956                           
  9957                           ;RF24.c: 458: if (pipe0_reading_address) {
  9958  1475  3070               	movlw	112
  9959  1476  00F9               	movwf	??_nrf_startListening
  9960  1477  0879               	movf	??_nrf_startListening,w
  9961  1478  00F5               	movwf	nrf_write_register@value
  9962  1479  3007               	movlw	7
  9963  147A  3191  2196  3194   	fcall	_nrf_write_register
  9964                           
  9965                           ;RF24.c: 459: nrf_write_register_len(0x0A, pipe0_reading_address, 5);
  9966  147D  30AE               	movlw	(low (_pipe0_reading_address| 0))& (0+255)
  9967  147E  00F9               	movwf	??_nrf_startListening
  9968  147F  0879               	movf	??_nrf_startListening,w
  9969  1480  00F2               	movwf	nrf_write_register_len@buf
  9970  1481  3005               	movlw	5
  9971  1482  00FA               	movwf	??_nrf_startListening+1
  9972  1483  087A               	movf	??_nrf_startListening+1,w
  9973  1484  00F3               	movwf	nrf_write_register_len@len
  9974  1485  300A               	movlw	10
  9975  1486  3192  2261  3194   	fcall	_nrf_write_register_len
  9976                           
  9977                           ;RF24.c: 460: }
  9978                           ;RF24.c: 462: nrf_flush_rx();
  9979  1489  3190  2068  3194   	fcall	_nrf_flush_rx
  9980                           
  9981                           ;RF24.c: 463: nrf_flush_tx();
  9982  148C  3190  207C  3194   	fcall	_nrf_flush_tx
  9983                           
  9984                           ;RF24.c: 466: nrf_ce(1);
  9985  148F  3001               	movlw	1
  9986  1490  00F0               	movwf	nrf_ce@level
  9987  1491  3000               	movlw	0
  9988  1492  00F1               	movwf	nrf_ce@level+1
  9989  1493  319F  27CD  3194   	fcall	_nrf_ce
  9990                           
  9991                           ;RF24.c: 469: _delay((unsigned long)((130)*(32000000/4000000.0)));
  9992  1496  30CF               	movlw	207
  9993  1497  00F9               	movwf	??_nrf_startListening
  9994  1498                     u6467:	
  9995  1498  3200               	nop2
  9996  1499  0BF9               	decfsz	??_nrf_startListening,f
  9997  149A  2C98               	goto	u6467
  9998  149B  3200               	nop2	;nop
  9999  149C  3200               	nop2	;nop
 10000  149D  0008               	return
 10001  149E                     __end_of_nrf_startListening:	
 10002                           
 10003                           	psect	text31
 10004  10BA                     __ptext31:	
 10005 ;; *************** function _nrf_setRetries *****************
 10006 ;; Defined at:
 10007 ;;		line 1057 in file "nRF_lib/RF24.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  delay           1    wreg     unsigned char 
 10010 ;;  count           1    9[COMMON] unsigned char 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  delay           1   13[COMMON] unsigned char 
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2, status,0, pclath, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10022 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;Total ram usage:        5 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    2
 10029 ;; This function calls:
 10030 ;;		_nrf_write_register
 10031 ;; This function is called by:
 10032 ;;		_main
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           
 10037                           ;psect for function _nrf_setRetries
 10038  10BA                     _nrf_setRetries:	
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _nrf_setRetries: [wreg+status,2+status,0+pclath+cstack]
 10042                           ;nrf_setRetries@delay stored from wreg
 10043  10BA  00FD               	movwf	nrf_setRetries@delay
 10044                           
 10045                           ;RF24.c: 1059: nrf_write_register(0x04,(delay&0xf)<<4 | (count&0xf)<<0);
 10046  10BB  300F               	movlw	15
 10047  10BC  0579               	andwf	nrf_setRetries@count,w
 10048  10BD  00FA               	movwf	??_nrf_setRetries
 10049  10BE  087D               	movf	nrf_setRetries@delay,w
 10050  10BF  390F               	andlw	15
 10051  10C0  00FB               	movwf	??_nrf_setRetries+1
 10052  10C1  3003               	movlw	3
 10053  10C2                     u5875:	
 10054  10C2  35FB               	lslf	??_nrf_setRetries+1,f
 10055  10C3  3EFF               	addlw	-1
 10056  10C4  1D03               	skipz
 10057  10C5  28C2               	goto	u5875
 10058  10C6  357B               	lslf	??_nrf_setRetries+1,w
 10059  10C7  047A               	iorwf	??_nrf_setRetries,w
 10060  10C8  00FC               	movwf	??_nrf_setRetries+2
 10061  10C9  087C               	movf	??_nrf_setRetries+2,w
 10062  10CA  00F5               	movwf	nrf_write_register@value
 10063  10CB  3004               	movlw	4
 10064  10CC  3191  2196         	fcall	_nrf_write_register
 10065  10CE  0008               	return
 10066  10CF                     __end_of_nrf_setRetries:	
 10067                           
 10068                           	psect	text32
 10069  1033                     __ptext32:	
 10070 ;; *************** function _nrf_setAutoAck_all *****************
 10071 ;; Defined at:
 10072 ;;		line 831 in file "nRF_lib/RF24.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  enable          1    wreg     unsigned char 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  enable          1   10[COMMON] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, status,2, status,0, pclath, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;Total ram usage:        2 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    2
 10093 ;; This function calls:
 10094 ;;		_nrf_write_register
 10095 ;; This function is called by:
 10096 ;;		_main
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           
 10101                           ;psect for function _nrf_setAutoAck_all
 10102  1033                     _nrf_setAutoAck_all:	
 10103                           
 10104                           ;incstack = 0
 10105                           ; Regs used in _nrf_setAutoAck_all: [wreg+status,2+status,0+pclath+cstack]
 10106                           ;nrf_setAutoAck_all@enable stored from wreg
 10107  1033  00FA               	movwf	nrf_setAutoAck_all@enable
 10108                           
 10109                           ;RF24.c: 833: if ( enable )
 10110  1034  087A               	movf	nrf_setAutoAck_all@enable,w
 10111  1035  1903               	btfsc	3,2
 10112  1036  283F               	goto	l4910
 10113                           
 10114                           ;RF24.c: 834: nrf_write_register(0x01, 0b111111);
 10115  1037  303F               	movlw	63
 10116  1038  00F9               	movwf	??_nrf_setAutoAck_all
 10117  1039  0879               	movf	??_nrf_setAutoAck_all,w
 10118  103A  00F5               	movwf	nrf_write_register@value
 10119  103B  3001               	movlw	1
 10120  103C  3191  2196         	fcall	_nrf_write_register
 10121  103E  0008               	return
 10122  103F                     l4910:	
 10123                           
 10124                           ;RF24.c: 835: else
 10125                           ;RF24.c: 836: nrf_write_register(0x01, 0);
 10126  103F  01F5               	clrf	nrf_write_register@value
 10127  1040  3001               	movlw	1
 10128  1041  3191  2196         	fcall	_nrf_write_register
 10129  1043  0008               	return
 10130  1044                     __end_of_nrf_setAutoAck_all:	
 10131                           
 10132                           	psect	text33
 10133  1017                     __ptext33:	
 10134 ;; *************** function _nrf_read *****************
 10135 ;; Defined at:
 10136 ;;		line 649 in file "nRF_lib/RF24.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  buf             1    wreg     PTR void 
 10139 ;;		 -> receivePayload(32), 
 10140 ;;  len             1    0[BANK0 ] unsigned char 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  buf             1    2[BANK0 ] PTR void 
 10143 ;;		 -> receivePayload(32), 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      unsigned char 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10153 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;Total ram usage:        3 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:    2
 10160 ;; This function calls:
 10161 ;;		_nrf_read_payload
 10162 ;;		_nrf_read_register
 10163 ;; This function is called by:
 10164 ;;		_main
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           
 10169                           ;psect for function _nrf_read
 10170  1017                     _nrf_read:	
 10171                           
 10172                           ;incstack = 0
 10173                           ; Regs used in _nrf_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10174                           ;nrf_read@buf stored from wreg
 10175  1017  0020               	movlb	0	; select bank0
 10176  1018  00A2               	movwf	nrf_read@buf
 10177                           
 10178                           ;RF24.c: 652: nrf_read_payload( buf, len );
 10179  1019  0820               	movf	nrf_read@len,w
 10180  101A  00A1               	movwf	??_nrf_read
 10181  101B  0821               	movf	??_nrf_read,w
 10182  101C  00F2               	movwf	nrf_read_payload@len
 10183  101D  0822               	movf	nrf_read@buf,w
 10184  101E  3196  26CD  3190   	fcall	_nrf_read_payload
 10185                           
 10186                           ;RF24.c: 655: return nrf_read_register(0x17) & (1<<(0));
 10187                           ;	Return value of _nrf_read is never used
 10188  1021  3017               	movlw	23
 10189  1022  3191  2145         	fcall	_nrf_read_register
 10190  1024  0008               	return
 10191  1025                     __end_of_nrf_read:	
 10192                           
 10193                           	psect	text34
 10194  16CD                     __ptext34:	
 10195 ;; *************** function _nrf_read_payload *****************
 10196 ;; Defined at:
 10197 ;;		line 133 in file "nRF_lib/RF24.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  buf             1    wreg     PTR unsigned char 
 10200 ;;		 -> receivePayload(32), 
 10201 ;;  len             1    2[COMMON] unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  buf             1   11[COMMON] PTR unsigned char 
 10204 ;;		 -> receivePayload(32), 
 10205 ;;  data_len        1   13[COMMON] unsigned char 
 10206 ;;  i               1   12[COMMON] unsigned char 
 10207 ;;  blank_len       1   10[COMMON] unsigned char 
 10208 ;;  status          1    5[COMMON] unsigned char 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      unsigned char 
 10211 ;; Registers used:
 10212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:       12 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    1
 10225 ;; This function calls:
 10226 ;;		_nrf_csn
 10227 ;;		_spi_fast_shift
 10228 ;; This function is called by:
 10229 ;;		_nrf_read
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _nrf_read_payload
 10235  16CD                     _nrf_read_payload:	
 10236                           
 10237                           ;incstack = 0
 10238                           ; Regs used in _nrf_read_payload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10239                           ;nrf_read_payload@buf stored from wreg
 10240  16CD  00FB               	movwf	nrf_read_payload@buf
 10241                           
 10242                           ;RF24.c: 135: uint8_t status;
 10243                           ;RF24.c: 138: uint8_t data_len = (((len) < (payload_size)) ? (len) : (payload_size));
 10244  16CE  0021               	movlb	1	; select bank1
 10245  16CF  0828               	movf	_payload_size^(0+128),w
 10246  16D0  0272               	subwf	nrf_read_payload@len,w
 10247  16D1  1C03               	skipc
 10248  16D2  2ED5               	goto	l4048
 10249  16D3  0828               	movf	_payload_size^(0+128),w
 10250  16D4  2ED6               	goto	L21
 10251  16D5                     l4048:	
 10252  16D5  0872               	movf	nrf_read_payload@len,w
 10253  16D6                     L21:	
 10254  16D6  00F3               	movwf	??_nrf_read_payload
 10255  16D7  01F4               	clrf	??_nrf_read_payload+1
 10256  16D8  0873               	movf	??_nrf_read_payload,w
 10257  16D9  00F6               	movwf	_nrf_read_payload$199
 10258  16DA  0874               	movf	??_nrf_read_payload+1,w
 10259  16DB  00F7               	movwf	_nrf_read_payload$199+1
 10260  16DC  0876               	movf	_nrf_read_payload$199,w
 10261  16DD  00F3               	movwf	??_nrf_read_payload
 10262  16DE  0873               	movf	??_nrf_read_payload,w
 10263  16DF  00FD               	movwf	nrf_read_payload@data_len
 10264                           
 10265                           ;RF24.c: 139: uint8_t blank_len = dynamic_payloads_enabled ? 0 : payload_size - data_len
      +                          ;
 10266  16E0  0826               	movf	_dynamic_payloads_enabled^(0+128),w
 10267  16E1  1D03               	btfss	3,2
 10268  16E2  2EF3               	goto	l4054
 10269  16E3  087D               	movf	nrf_read_payload@data_len,w
 10270  16E4  00F3               	movwf	??_nrf_read_payload
 10271  16E5  01F4               	clrf	??_nrf_read_payload+1
 10272  16E6  09F3               	comf	??_nrf_read_payload,f
 10273  16E7  09F4               	comf	??_nrf_read_payload+1,f
 10274  16E8  0AF3               	incf	??_nrf_read_payload,f
 10275  16E9  1903               	skipnz
 10276  16EA  0AF4               	incf	??_nrf_read_payload+1,f
 10277  16EB  0828               	movf	_payload_size^(0+128),w
 10278  16EC  0773               	addwf	??_nrf_read_payload,w
 10279  16ED  00F8               	movwf	_nrf_read_payload$201
 10280  16EE  0874               	movf	??_nrf_read_payload+1,w
 10281  16EF  1803               	skipnc
 10282  16F0  0A74               	incf	??_nrf_read_payload+1,w
 10283  16F1  00F9               	movwf	_nrf_read_payload$201+1
 10284  16F2  2EF5               	goto	l4056
 10285  16F3                     l4054:	
 10286  16F3  01F8               	clrf	_nrf_read_payload$201
 10287  16F4  01F9               	clrf	_nrf_read_payload$201+1
 10288  16F5                     l4056:	
 10289  16F5  0878               	movf	_nrf_read_payload$201,w
 10290  16F6  00F3               	movwf	??_nrf_read_payload
 10291  16F7  0873               	movf	??_nrf_read_payload,w
 10292  16F8  00FA               	movwf	nrf_read_payload@blank_len
 10293                           
 10294                           ;RF24.c: 142: uint8_t i =0;
 10295  16F9  01FC               	clrf	nrf_read_payload@i
 10296                           
 10297                           ;RF24.c: 144: nrf_csn(0);
 10298  16FA  3000               	movlw	0
 10299  16FB  00F0               	movwf	nrf_csn@mode
 10300  16FC  00F1               	movwf	nrf_csn@mode+1
 10301  16FD  319F  27C6  3196   	fcall	_nrf_csn
 10302                           
 10303                           ;RF24.c: 145: status = spi_fast_shift( 0x61 );
 10304  1700  3061               	movlw	97
 10305  1701  3190  2000  3196   	fcall	_spi_fast_shift
 10306  1704  00F3               	movwf	??_nrf_read_payload
 10307  1705  0873               	movf	??_nrf_read_payload,w
 10308  1706  00F5               	movwf	nrf_read_payload@status
 10309  1707                     l4068:	
 10310                           ;RF24.c: 146: while ( data_len-- )
 10311                           
 10312  1707  3001               	movlw	1
 10313  1708  02FD               	subwf	nrf_read_payload@data_len,f
 10314  1709  0A7D               	incf	nrf_read_payload@data_len,w
 10315  170A  1903               	btfsc	3,2
 10316  170B  2F23               	goto	l4072
 10317                           
 10318                           ;RF24.c: 147: buf[i++] = spi_fast_shift(0xff);
 10319  170C  30FF               	movlw	255
 10320  170D  3190  2000  3196   	fcall	_spi_fast_shift
 10321  1710  00F3               	movwf	??_nrf_read_payload
 10322  1711  087C               	movf	nrf_read_payload@i,w
 10323  1712  077B               	addwf	nrf_read_payload@buf,w
 10324  1713  00F4               	movwf	??_nrf_read_payload+1
 10325  1714  0874               	movf	??_nrf_read_payload+1,w
 10326  1715  0086               	movwf	6
 10327  1716  3001               	movlw	1	; select bank2/3
 10328  1717  0087               	movwf	7
 10329  1718  0873               	movf	??_nrf_read_payload,w
 10330  1719  0081               	movwf	1
 10331  171A  3001               	movlw	1
 10332  171B  00F3               	movwf	??_nrf_read_payload
 10333  171C  0873               	movf	??_nrf_read_payload,w
 10334  171D  07FC               	addwf	nrf_read_payload@i,f
 10335  171E  2F07               	goto	l4068
 10336  171F                     l4070:	
 10337                           ;RF24.c: 148: while ( blank_len-- )
 10338                           
 10339                           
 10340                           ;RF24.c: 149: spi_fast_shift(0xff);
 10341  171F  30FF               	movlw	255
 10342  1720  3190  2000  3196   	fcall	_spi_fast_shift
 10343  1723                     l4072:	
 10344  1723  3001               	movlw	1
 10345  1724  02FA               	subwf	nrf_read_payload@blank_len,f
 10346  1725  0A7A               	incf	nrf_read_payload@blank_len,w
 10347  1726  1D03               	btfss	3,2
 10348  1727  2F1F               	goto	l4070
 10349                           
 10350                           ;RF24.c: 150: nrf_csn(1);
 10351  1728  3001               	movlw	1
 10352  1729  00F0               	movwf	nrf_csn@mode
 10353  172A  3000               	movlw	0
 10354  172B  00F1               	movwf	nrf_csn@mode+1
 10355  172C  319F  27C6         	fcall	_nrf_csn
 10356  172E  0008               	return
 10357  172F                     __end_of_nrf_read_payload:	
 10358                           ;RF24.c: 152: return status;
 10359                           ;	Return value of _nrf_read_payload is never used
 10360                           
 10361                           
 10362                           	psect	text35
 10363  1FE8                     __ptext35:	
 10364 ;; *************** function _nrf_powerUp *****************
 10365 ;; Defined at:
 10366 ;;		line 490 in file "nRF_lib/RF24.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2, status,0, pclath, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;Total ram usage:        1 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    2
 10387 ;; This function calls:
 10388 ;;		_nrf_read_register
 10389 ;;		_nrf_write_register
 10390 ;; This function is called by:
 10391 ;;		_main
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           
 10396                           ;psect for function _nrf_powerUp
 10397  1FE8                     _nrf_powerUp:	
 10398                           
 10399                           ;RF24.c: 492: nrf_write_register(0x00, nrf_read_register(0x00) | (1<<(1)));
 10400                           
 10401                           ;incstack = 0
 10402                           ; Regs used in _nrf_powerUp: [wreg+status,2+status,0+pclath+cstack]
 10403  1FE8  3000               	movlw	0
 10404  1FE9  3191  2145  319F   	fcall	_nrf_read_register
 10405  1FEC  3802               	iorlw	2
 10406  1FED  00F9               	movwf	??_nrf_powerUp
 10407  1FEE  0879               	movf	??_nrf_powerUp,w
 10408  1FEF  00F5               	movwf	nrf_write_register@value
 10409  1FF0  3000               	movlw	0
 10410  1FF1  3191  2196         	fcall	_nrf_write_register
 10411  1FF3  0008               	return
 10412  1FF4                     __end_of_nrf_powerUp:	
 10413                           
 10414                           	psect	text36
 10415  149E                     __ptext36:	
 10416 ;; *************** function _nrf_openWritingPipe *****************
 10417 ;; Defined at:
 10418 ;;		line 674 in file "nRF_lib/RF24.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  address         1    wreg     PTR unsigned char 
 10421 ;;		 -> main@nRF_pipe_writing(5), 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  address         1   13[COMMON] PTR unsigned char 
 10424 ;;		 -> main@nRF_pipe_writing(5), 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;Total ram usage:        5 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    2
 10441 ;; This function calls:
 10442 ;;		_nrf_write_register
 10443 ;;		_nrf_write_register_len
 10444 ;; This function is called by:
 10445 ;;		_main
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           
 10450                           ;psect for function _nrf_openWritingPipe
 10451  149E                     _nrf_openWritingPipe:	
 10452                           
 10453                           ;incstack = 0
 10454                           ; Regs used in _nrf_openWritingPipe: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10455                           ;nrf_openWritingPipe@address stored from wreg
 10456  149E  00FD               	movwf	nrf_openWritingPipe@address
 10457                           
 10458                           ;RF24.c: 679: nrf_write_register_len(0x0A, address, 5);
 10459  149F  087D               	movf	nrf_openWritingPipe@address,w
 10460  14A0  00F9               	movwf	??_nrf_openWritingPipe
 10461  14A1  0879               	movf	??_nrf_openWritingPipe,w
 10462  14A2  00F2               	movwf	nrf_write_register_len@buf
 10463  14A3  3005               	movlw	5
 10464  14A4  00FA               	movwf	??_nrf_openWritingPipe+1
 10465  14A5  087A               	movf	??_nrf_openWritingPipe+1,w
 10466  14A6  00F3               	movwf	nrf_write_register_len@len
 10467  14A7  300A               	movlw	10
 10468  14A8  3192  2261  3194   	fcall	_nrf_write_register_len
 10469                           
 10470                           ;RF24.c: 680: nrf_write_register_len(0x10, address, 5);
 10471  14AB  087D               	movf	nrf_openWritingPipe@address,w
 10472  14AC  00F9               	movwf	??_nrf_openWritingPipe
 10473  14AD  0879               	movf	??_nrf_openWritingPipe,w
 10474  14AE  00F2               	movwf	nrf_write_register_len@buf
 10475  14AF  3005               	movlw	5
 10476  14B0  00FA               	movwf	??_nrf_openWritingPipe+1
 10477  14B1  087A               	movf	??_nrf_openWritingPipe+1,w
 10478  14B2  00F3               	movwf	nrf_write_register_len@len
 10479  14B3  3010               	movlw	16
 10480  14B4  3192  2261  3194   	fcall	_nrf_write_register_len
 10481                           
 10482                           ;RF24.c: 682: const uint8_t max_payload_size = 32;
 10483                           ;RF24.c: 683: nrf_write_register(0x11,(((payload_size) < (max_payload_size)) ? (payload_
      +                          size) : (max_payload_size)));
 10484  14B7  3048               	movlw	low (nrf_openWritingPipe@max_payload_size| (0+32768))
 10485  14B8  0084               	movwf	4
 10486  14B9  3088               	movlw	high (nrf_openWritingPipe@max_payload_size| (0+32768))
 10487  14BA  0085               	movwf	5
 10488  14BB  0800               	movf	0,w	;code access
 10489  14BC  0021               	movlb	1	; select bank1
 10490  14BD  0228               	subwf	_payload_size^(0+128),w
 10491  14BE  1C03               	skipc
 10492  14BF  2CC6               	goto	l4880
 10493  14C0  3048               	movlw	low (nrf_openWritingPipe@max_payload_size| (0+32768))
 10494  14C1  0084               	movwf	4
 10495  14C2  3088               	movlw	high (nrf_openWritingPipe@max_payload_size| (0+32768))
 10496  14C3  0085               	movwf	5
 10497  14C4  0800               	movf	0,w	;code access
 10498  14C5  2CC7               	goto	L22
 10499  14C6                     l4880:	
 10500  14C6  0828               	movf	_payload_size^(0+128),w
 10501  14C7                     L22:	
 10502  14C7  00F9               	movwf	??_nrf_openWritingPipe
 10503  14C8  01FA               	clrf	??_nrf_openWritingPipe+1
 10504  14C9  0879               	movf	??_nrf_openWritingPipe,w
 10505  14CA  00FB               	movwf	_nrf_openWritingPipe$347
 10506  14CB  087A               	movf	??_nrf_openWritingPipe+1,w
 10507  14CC  00FC               	movwf	_nrf_openWritingPipe$347+1
 10508  14CD  087B               	movf	_nrf_openWritingPipe$347,w
 10509  14CE  00F9               	movwf	??_nrf_openWritingPipe
 10510  14CF  0879               	movf	??_nrf_openWritingPipe,w
 10511  14D0  00F5               	movwf	nrf_write_register@value
 10512  14D1  3011               	movlw	17
 10513  14D2  3191  2196         	fcall	_nrf_write_register
 10514  14D4  0008               	return
 10515  14D5                     __end_of_nrf_openWritingPipe:	
 10516                           
 10517                           	psect	text37
 10518  1793                     __ptext37:	
 10519 ;; *************** function _nrf_openReadingPipe *****************
 10520 ;; Defined at:
 10521 ;;		line 701 in file "nRF_lib/RF24.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  child           1    wreg     unsigned char 
 10524 ;;  address         1    9[COMMON] PTR unsigned char 
 10525 ;;		 -> main@nRF_pipe_reading(5), 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  child           1   12[COMMON] unsigned char 
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;Total ram usage:        4 bytes
 10542 ;; Hardware stack levels used:    1
 10543 ;; Hardware stack levels required when called:    2
 10544 ;; This function calls:
 10545 ;;		_nrf_read_register
 10546 ;;		_nrf_write_register
 10547 ;;		_nrf_write_register_len
 10548 ;; This function is called by:
 10549 ;;		_main
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           
 10554                           ;psect for function _nrf_openReadingPipe
 10555  1793                     _nrf_openReadingPipe:	
 10556                           
 10557                           ;incstack = 0
 10558                           ; Regs used in _nrf_openReadingPipe: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10559                           ;nrf_openReadingPipe@child stored from wreg
 10560  1793  00FC               	movwf	nrf_openReadingPipe@child
 10561                           
 10562                           ;RF24.c: 706: if (child == 0) {
 10563  1794  087C               	movf	nrf_openReadingPipe@child,w
 10564  1795  1D03               	btfss	3,2
 10565  1796  2FB3               	goto	l4888
 10566                           
 10567                           ;RF24.c: 707: pipe0_reading_address[0] = address[0];
 10568  1797  0879               	movf	nrf_openReadingPipe@address,w
 10569  1798  0086               	movwf	6
 10570  1799  0187               	clrf	7
 10571  179A  0801               	movf	1,w
 10572  179B  00FA               	movwf	??_nrf_openReadingPipe
 10573  179C  087A               	movf	??_nrf_openReadingPipe,w
 10574  179D  0021               	movlb	1	; select bank1
 10575  179E  00AE               	movwf	_pipe0_reading_address^(0+128)
 10576                           
 10577                           ;RF24.c: 708: pipe0_reading_address[1] = address[1];
 10578  179F  0879               	movf	nrf_openReadingPipe@address,w
 10579  17A0  0086               	movwf	6
 10580  17A1  0187               	clrf	7
 10581  17A2  3F41               	moviw [1]fsr1
 10582  17A3  00AF               	movwf	(_pipe0_reading_address^(0+128)+1)
 10583                           
 10584                           ;RF24.c: 709: pipe0_reading_address[2] = address[2];
 10585  17A4  0879               	movf	nrf_openReadingPipe@address,w
 10586  17A5  0086               	movwf	6
 10587  17A6  0187               	clrf	7
 10588  17A7  3F42               	moviw [2]fsr1
 10589  17A8  00B0               	movwf	(_pipe0_reading_address^(0+128)+2)
 10590                           
 10591                           ;RF24.c: 710: pipe0_reading_address[3] = address[3];
 10592  17A9  0879               	movf	nrf_openReadingPipe@address,w
 10593  17AA  0086               	movwf	6
 10594  17AB  0187               	clrf	7
 10595  17AC  3F43               	moviw [3]fsr1
 10596  17AD  00B1               	movwf	(_pipe0_reading_address^(0+128)+3)
 10597                           
 10598                           ;RF24.c: 711: pipe0_reading_address[4] = address[4];
 10599  17AE  0879               	movf	nrf_openReadingPipe@address,w
 10600  17AF  0086               	movwf	6
 10601  17B0  0187               	clrf	7
 10602  17B1  3F44               	moviw [4]fsr1
 10603  17B2  00B2               	movwf	(_pipe0_reading_address^(0+128)+4)
 10604  17B3                     l4888:	
 10605                           
 10606                           ;RF24.c: 712: }
 10607                           ;RF24.c: 713: if (child <= 6)
 10608  17B3  3007               	movlw	7
 10609  17B4  027C               	subwf	nrf_openReadingPipe@child,w
 10610  17B5  1803               	skipnc
 10611  17B6  0008               	return
 10612                           
 10613                           ;RF24.c: 714: {
 10614                           ;RF24.c: 716: if ( child < 2 )
 10615  17B7  3002               	movlw	2
 10616  17B8  027C               	subwf	nrf_openReadingPipe@child,w
 10617  17B9  1803               	skipnc
 10618  17BA  2FC4               	goto	l4894
 10619                           
 10620                           ;RF24.c: 717: nrf_write_register_len(child_pipe[child], address, 5);
 10621  17BB  0879               	movf	nrf_openReadingPipe@address,w
 10622  17BC  00FA               	movwf	??_nrf_openReadingPipe
 10623  17BD  087A               	movf	??_nrf_openReadingPipe,w
 10624  17BE  00F2               	movwf	nrf_write_register_len@buf
 10625  17BF  3005               	movlw	5
 10626  17C0  00FB               	movwf	??_nrf_openReadingPipe+1
 10627  17C1  087B               	movf	??_nrf_openReadingPipe+1,w
 10628  17C2  00F3               	movwf	nrf_write_register_len@len
 10629  17C3  2FCA               	goto	L23
 10630  17C4                     l4894:	
 10631                           
 10632                           ;RF24.c: 718: else
 10633                           ;RF24.c: 719: nrf_write_register_len(child_pipe[child], address, 1);
 10634  17C4  0879               	movf	nrf_openReadingPipe@address,w
 10635  17C5  00FA               	movwf	??_nrf_openReadingPipe
 10636  17C6  087A               	movf	??_nrf_openReadingPipe,w
 10637  17C7  00F2               	movwf	nrf_write_register_len@buf
 10638  17C8  01F3               	clrf	nrf_write_register_len@len
 10639  17C9  0AF3               	incf	nrf_write_register_len@len,f
 10640  17CA                     L23:	
 10641  17CA  087C               	movf	nrf_openReadingPipe@child,w
 10642  17CB  3E2C               	addlw	low (_child_pipe| (0+32768))
 10643  17CC  0084               	movwf	4
 10644  17CD  3088               	movlw	high (_child_pipe| (0+32768))
 10645  17CE  1803               	skipnc
 10646  17CF  3E01               	addlw	1
 10647  17D0  0085               	movwf	5
 10648  17D1  0800               	movf	0,w	;code access
 10649  17D2  3192  2261  3197   	fcall	_nrf_write_register_len
 10650                           
 10651                           ;RF24.c: 721: nrf_write_register(child_payload_size[child], payload_size);
 10652  17D5  0021               	movlb	1	; select bank1
 10653  17D6  0828               	movf	_payload_size^(0+128),w
 10654  17D7  00FA               	movwf	??_nrf_openReadingPipe
 10655  17D8  087A               	movf	??_nrf_openReadingPipe,w
 10656  17D9  00F5               	movwf	nrf_write_register@value
 10657  17DA  087C               	movf	nrf_openReadingPipe@child,w
 10658  17DB  3E26               	addlw	low (_child_payload_size| (0+32768))
 10659  17DC  0084               	movwf	4
 10660  17DD  3088               	movlw	high (_child_payload_size| (0+32768))
 10661  17DE  1803               	skipnc
 10662  17DF  3E01               	addlw	1
 10663  17E0  0085               	movwf	5
 10664  17E1  0800               	movf	0,w	;code access
 10665  17E2  3191  2196  3197   	fcall	_nrf_write_register
 10666                           
 10667                           ;RF24.c: 726: nrf_write_register(0x02, nrf_read_register(0x02) | (1<<(child_pipe_enable[
      +                          child])));
 10668  17E5  3001               	movlw	1
 10669  17E6  00FA               	movwf	??_nrf_openReadingPipe
 10670  17E7  087C               	movf	nrf_openReadingPipe@child,w
 10671  17E8  3E32               	addlw	low (_child_pipe_enable| (0+32768))
 10672  17E9  0084               	movwf	4
 10673  17EA  3088               	movlw	high (_child_pipe_enable| (0+32768))
 10674  17EB  1803               	skipnc
 10675  17EC  3E01               	addlw	1
 10676  17ED  0085               	movwf	5
 10677  17EE  0800               	movf	0,w	;code access
 10678  17EF  0A89               	incf	9,f
 10679  17F0  2FF2               	goto	u5844
 10680  17F1                     u5845:	
 10681  17F1  35FA               	lslf	??_nrf_openReadingPipe,f
 10682  17F2                     u5844:	
 10683  17F2  0B89               	decfsz	9,f
 10684  17F3  2FF1               	goto	u5845
 10685  17F4  3002               	movlw	2
 10686  17F5  3191  2145  3197   	fcall	_nrf_read_register
 10687  17F8  047A               	iorwf	??_nrf_openReadingPipe,w
 10688  17F9  00FB               	movwf	??_nrf_openReadingPipe+1
 10689  17FA  087B               	movf	??_nrf_openReadingPipe+1,w
 10690  17FB  00F5               	movwf	nrf_write_register@value
 10691  17FC  3002               	movlw	2
 10692  17FD  3191  2196         	fcall	_nrf_write_register
 10693  17FF  0008               	return
 10694  1800                     __end_of_nrf_openReadingPipe:	
 10695                           
 10696                           	psect	text38
 10697  1261                     __ptext38:	
 10698 ;; *************** function _nrf_write_register_len *****************
 10699 ;; Defined at:
 10700 ;;		line 70 in file "nRF_lib/RF24.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  reg             1    wreg     unsigned char 
 10703 ;;  buf             1    2[COMMON] PTR const unsigned char 
 10704 ;;		 -> main@nRF_pipe_reading(5), main@nRF_pipe_writing(5), pipe0_reading_address(5), 
 10705 ;;  len             1    3[COMMON] unsigned char 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  reg             1    6[COMMON] unsigned char 
 10708 ;;  status          1    5[COMMON] unsigned char 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      unsigned char 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;Total ram usage:        5 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    1
 10725 ;; This function calls:
 10726 ;;		_nrf_csn
 10727 ;;		_spi_fast_shift
 10728 ;; This function is called by:
 10729 ;;		_nrf_startListening
 10730 ;;		_nrf_openWritingPipe
 10731 ;;		_nrf_openReadingPipe
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           
 10736                           ;psect for function _nrf_write_register_len
 10737  1261                     _nrf_write_register_len:	
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _nrf_write_register_len: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10741                           ;nrf_write_register_len@reg stored from wreg
 10742  1261  00F6               	movwf	nrf_write_register_len@reg
 10743                           
 10744                           ;RF24.c: 72: uint8_t status;
 10745                           ;RF24.c: 74: nrf_csn(0);
 10746  1262  3000               	movlw	0
 10747  1263  00F0               	movwf	nrf_csn@mode
 10748  1264  00F1               	movwf	nrf_csn@mode+1
 10749  1265  319F  27C6  3192   	fcall	_nrf_csn
 10750                           
 10751                           ;RF24.c: 75: status = spi_fast_shift( 0x20 | ( 0x1F & reg ) );
 10752  1268  0876               	movf	nrf_write_register_len@reg,w
 10753  1269  391F               	andlw	31
 10754  126A  3820               	iorlw	32
 10755  126B  3190  2000  3192   	fcall	_spi_fast_shift
 10756  126E  00F4               	movwf	??_nrf_write_register_len
 10757  126F  0874               	movf	??_nrf_write_register_len,w
 10758  1270  00F5               	movwf	nrf_write_register_len@status
 10759  1271                     l4038:	
 10760                           ;RF24.c: 76: while ( len-- )
 10761                           
 10762  1271  3001               	movlw	1
 10763  1272  02F3               	subwf	nrf_write_register_len@len,f
 10764  1273  0A73               	incf	nrf_write_register_len@len,w
 10765  1274  1903               	btfsc	3,2
 10766  1275  2A82               	goto	l4040
 10767                           
 10768                           ;RF24.c: 77: spi_fast_shift(*buf++);
 10769  1276  0872               	movf	nrf_write_register_len@buf,w
 10770  1277  0086               	movwf	6
 10771  1278  0187               	clrf	7
 10772  1279  0801               	movf	1,w
 10773  127A  3190  2000  3192   	fcall	_spi_fast_shift
 10774  127D  3001               	movlw	1
 10775  127E  00F4               	movwf	??_nrf_write_register_len
 10776  127F  0874               	movf	??_nrf_write_register_len,w
 10777  1280  07F2               	addwf	nrf_write_register_len@buf,f
 10778  1281  2A71               	goto	l4038
 10779  1282                     l4040:	
 10780                           
 10781                           ;RF24.c: 79: nrf_csn(1);
 10782  1282  3001               	movlw	1
 10783  1283  00F0               	movwf	nrf_csn@mode
 10784  1284  3000               	movlw	0
 10785  1285  00F1               	movwf	nrf_csn@mode+1
 10786  1286  319F  27C6         	fcall	_nrf_csn
 10787  1288  0008               	return
 10788  1289                     __end_of_nrf_write_register_len:	
 10789                           ;RF24.c: 81: return status;
 10790                           ;	Return value of _nrf_write_register_len is never used
 10791                           
 10792                           
 10793                           	psect	text39
 10794  136B                     __ptext39:	
 10795 ;; *************** function _nrf_enableDynamicPayloads *****************
 10796 ;; Defined at:
 10797 ;;		line 742 in file "nRF_lib/RF24.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;		None
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0, pclath, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;Total ram usage:        1 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; Hardware stack levels required when called:    2
 10818 ;; This function calls:
 10819 ;;		_nrf_read_register
 10820 ;;		_nrf_toggle_features
 10821 ;;		_nrf_write_register
 10822 ;; This function is called by:
 10823 ;;		_main
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function _nrf_enableDynamicPayloads
 10829  136B                     _nrf_enableDynamicPayloads:	
 10830                           
 10831                           ;RF24.c: 745: nrf_write_register(0x1D, nrf_read_register(0x1D) | (1<<(2)) );
 10832                           
 10833                           ;incstack = 0
 10834                           ; Regs used in _nrf_enableDynamicPayloads: [wreg+status,2+status,0+pclath+cstack]
 10835  136B  301D               	movlw	29
 10836  136C  3191  2145  3193   	fcall	_nrf_read_register
 10837  136F  3804               	iorlw	4
 10838  1370  00F9               	movwf	??_nrf_enableDynamicPayloads
 10839  1371  0879               	movf	??_nrf_enableDynamicPayloads,w
 10840  1372  00F5               	movwf	nrf_write_register@value
 10841  1373  301D               	movlw	29
 10842  1374  3191  2196  3193   	fcall	_nrf_write_register
 10843                           
 10844                           ;RF24.c: 748: if ( ! nrf_read_register(0x1D) )
 10845  1377  301D               	movlw	29
 10846  1378  3191  2145  3193   	fcall	_nrf_read_register
 10847  137B  3A00               	xorlw	0
 10848  137C  1D03               	skipz
 10849  137D  2B8D               	goto	l289
 10850                           
 10851                           ;RF24.c: 749: {
 10852                           ;RF24.c: 751: nrf_toggle_features();
 10853  137E  3190  20A5  3193   	fcall	_nrf_toggle_features
 10854                           
 10855                           ;RF24.c: 752: nrf_write_register(0x1D, nrf_read_register(0x1D) | (1<<(2)) );
 10856  1381  301D               	movlw	29
 10857  1382  3191  2145  3193   	fcall	_nrf_read_register
 10858  1385  3804               	iorlw	4
 10859  1386  00F9               	movwf	??_nrf_enableDynamicPayloads
 10860  1387  0879               	movf	??_nrf_enableDynamicPayloads,w
 10861  1388  00F5               	movwf	nrf_write_register@value
 10862  1389  301D               	movlw	29
 10863  138A  3191  2196  3193   	fcall	_nrf_write_register
 10864  138D                     l289:	
 10865                           
 10866                           ;RF24.c: 753: }
 10867                           ;RF24.c: 763: nrf_write_register(0x1C, nrf_read_register(0x1C) | (1<<(5)) | (1<<(4)) | (
      +                          1<<(3)) | (1<<(2)) | (1<<(1)) | (1<<(0)));
 10868  138D  301C               	movlw	28
 10869  138E  3191  2145  3193   	fcall	_nrf_read_register
 10870  1391  383F               	iorlw	63
 10871  1392  00F9               	movwf	??_nrf_enableDynamicPayloads
 10872  1393  0879               	movf	??_nrf_enableDynamicPayloads,w
 10873  1394  00F5               	movwf	nrf_write_register@value
 10874  1395  301C               	movlw	28
 10875  1396  3191  2196         	fcall	_nrf_write_register
 10876                           
 10877                           ;RF24.c: 765: dynamic_payloads_enabled = 1;
 10878  1398  0021               	movlb	1	; select bank1
 10879  1399  01A6               	clrf	_dynamic_payloads_enabled^(0+128)
 10880  139A  0AA6               	incf	_dynamic_payloads_enabled^(0+128),f
 10881  139B  0008               	return
 10882  139C                     __end_of_nrf_enableDynamicPayloads:	
 10883                           
 10884                           	psect	text40
 10885  10A5                     __ptext40:	
 10886 ;; *************** function _nrf_toggle_features *****************
 10887 ;; Defined at:
 10888 ;;		line 732 in file "nRF_lib/RF24.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;		None
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;		None
 10893 ;; Return value:  Size  Location     Type
 10894 ;;                  1    wreg      void 
 10895 ;; Registers used:
 10896 ;;		wreg, status,2, status,0, pclath, cstack
 10897 ;; Tracked objects:
 10898 ;;		On entry : 0/0
 10899 ;;		On exit  : 0/0
 10900 ;;		Unchanged: 0/0
 10901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;Total ram usage:        0 bytes
 10907 ;; Hardware stack levels used:    1
 10908 ;; Hardware stack levels required when called:    1
 10909 ;; This function calls:
 10910 ;;		_nrf_csn
 10911 ;;		_spi_fast_shift
 10912 ;; This function is called by:
 10913 ;;		_nrf_enableDynamicPayloads
 10914 ;;		_nrf_enableAckPayload
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           
 10919                           ;psect for function _nrf_toggle_features
 10920  10A5                     _nrf_toggle_features:	
 10921                           
 10922                           ;RF24.c: 734: nrf_csn(0);
 10923                           
 10924                           ;incstack = 0
 10925                           ; Regs used in _nrf_toggle_features: [wreg+status,2+status,0+pclath+cstack]
 10926  10A5  3000               	movlw	0
 10927  10A6  00F0               	movwf	nrf_csn@mode
 10928  10A7  00F1               	movwf	nrf_csn@mode+1
 10929  10A8  319F  27C6  3190   	fcall	_nrf_csn
 10930                           
 10931                           ;RF24.c: 735: spi_fast_shift( 0x50 );
 10932  10AB  3050               	movlw	80
 10933  10AC  3190  2000  3190   	fcall	_spi_fast_shift
 10934                           
 10935                           ;RF24.c: 736: spi_fast_shift( 0x73 );
 10936  10AF  3073               	movlw	115
 10937  10B0  3190  2000  3190   	fcall	_spi_fast_shift
 10938                           
 10939                           ;RF24.c: 737: nrf_csn(1);
 10940  10B3  3001               	movlw	1
 10941  10B4  00F0               	movwf	nrf_csn@mode
 10942  10B5  3000               	movlw	0
 10943  10B6  00F1               	movwf	nrf_csn@mode+1
 10944  10B7  319F  27C6         	fcall	_nrf_csn
 10945  10B9  0008               	return
 10946  10BA                     __end_of_nrf_toggle_features:	
 10947                           
 10948                           	psect	text41
 10949  156B                     __ptext41:	
 10950 ;; *************** function _nrf_begin *****************
 10951 ;; Defined at:
 10952 ;;		line 387 in file "nRF_lib/RF24.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;		None
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      void 
 10959 ;; Registers used:
 10960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;Total ram usage:        2 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    3
 10973 ;; This function calls:
 10974 ;;		_nrf_ce
 10975 ;;		_nrf_csn
 10976 ;;		_nrf_flush_rx
 10977 ;;		_nrf_flush_tx
 10978 ;;		_nrf_setCRCLength
 10979 ;;		_nrf_setChannel
 10980 ;;		_nrf_setDataRate
 10981 ;;		_nrf_setPALevel
 10982 ;;		_nrf_write_register
 10983 ;; This function is called by:
 10984 ;;		_main
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           
 10989                           ;psect for function _nrf_begin
 10990  156B                     _nrf_begin:	
 10991                           
 10992                           ;RF24.c: 390: (TRISCbits.TRISC3=0);
 10993                           
 10994                           ;incstack = 0
 10995                           ; Regs used in _nrf_begin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10996  156B  0021               	movlb	1	; select bank1
 10997  156C  118E               	bcf	14,3	;volatile
 10998                           
 10999                           ;RF24.c: 391: (TRISCbits.TRISC3=0);
 11000  156D  118E               	bcf	14,3	;volatile
 11001                           
 11002                           ;RF24.c: 398: nrf_ce(0);
 11003  156E  3000               	movlw	0
 11004  156F  00F0               	movwf	nrf_ce@level
 11005  1570  00F1               	movwf	nrf_ce@level+1
 11006  1571  319F  27CD  3195   	fcall	_nrf_ce
 11007                           
 11008                           ;RF24.c: 399: nrf_csn(1);
 11009  1574  3001               	movlw	1
 11010  1575  00F0               	movwf	nrf_csn@mode
 11011  1576  3000               	movlw	0
 11012  1577  00F1               	movwf	nrf_csn@mode+1
 11013  1578  319F  27C6  3195   	fcall	_nrf_csn
 11014                           
 11015                           ;RF24.c: 407: _delay((unsigned long)((5)*(32000000/4000.0))) ;
 11016  157B  3034               	movlw	52
 11017  157C  0020               	movlb	0	; select bank0
 11018  157D  00A1               	movwf	??_nrf_begin+1
 11019  157E  30F1               	movlw	241
 11020  157F  00A0               	movwf	??_nrf_begin
 11021  1580                     u6477:	
 11022  1580  0BA0               	decfsz	??_nrf_begin,f
 11023  1581  2D80               	goto	u6477
 11024  1582  0BA1               	decfsz	??_nrf_begin+1,f
 11025  1583  2D80               	goto	u6477
 11026  1584  3200               	nop2
 11027                           
 11028                           ;RF24.c: 412: nrf_write_register(0x04,(0b00000100 << 4) | (0b00001111 << 0));
 11029  1585  304F               	movlw	79
 11030  1586  0020               	movlb	0	; select bank0
 11031  1587  00A0               	movwf	??_nrf_begin
 11032  1588  0820               	movf	??_nrf_begin,w
 11033  1589  00F5               	movwf	nrf_write_register@value
 11034  158A  3004               	movlw	4
 11035  158B  3191  2196  3195   	fcall	_nrf_write_register
 11036                           
 11037                           ;RF24.c: 415: nrf_setPALevel( RF24_PA_MAX ) ;
 11038  158E  3003               	movlw	3
 11039  158F  3193  230D  3195   	fcall	_nrf_setPALevel
 11040                           
 11041                           ;RF24.c: 421: if( nrf_setDataRate( RF24_250KBPS ) )
 11042  1592  3002               	movlw	2
 11043  1593  3193  23CD  3195   	fcall	_nrf_setDataRate
 11044  1596  3A00               	xorlw	0
 11045  1597  1903               	skipnz
 11046  1598  2D9C               	goto	l4798
 11047                           
 11048                           ;RF24.c: 422: {
 11049                           ;RF24.c: 423: p_variant = 1 ;
 11050  1599  0021               	movlb	1	; select bank1
 11051  159A  01A7               	clrf	_p_variant^(0+128)
 11052  159B  0AA7               	incf	_p_variant^(0+128),f
 11053  159C                     l4798:	
 11054                           
 11055                           ;RF24.c: 424: }
 11056                           ;RF24.c: 428: nrf_setDataRate( RF24_1MBPS ) ;
 11057  159C  3000               	movlw	0
 11058  159D  3193  23CD  3195   	fcall	_nrf_setDataRate
 11059                           
 11060                           ;RF24.c: 431: nrf_setCRCLength( RF24_CRC_16 ) ;
 11061  15A0  3002               	movlw	2
 11062  15A1  3191  2160  3195   	fcall	_nrf_setCRCLength
 11063                           
 11064                           ;RF24.c: 434: nrf_write_register(0x1C,0);
 11065  15A4  01F5               	clrf	nrf_write_register@value
 11066  15A5  301C               	movlw	28
 11067  15A6  3191  2196  3195   	fcall	_nrf_write_register
 11068                           
 11069                           ;RF24.c: 438: nrf_write_register(0x07,(1<<(6)) | (1<<(5)) | (1<<(4)) );
 11070  15A9  3070               	movlw	112
 11071  15AA  0020               	movlb	0	; select bank0
 11072  15AB  00A0               	movwf	??_nrf_begin
 11073  15AC  0820               	movf	??_nrf_begin,w
 11074  15AD  00F5               	movwf	nrf_write_register@value
 11075  15AE  3007               	movlw	7
 11076  15AF  3191  2196  3195   	fcall	_nrf_write_register
 11077                           
 11078                           ;RF24.c: 443: nrf_setChannel(76);
 11079  15B2  304C               	movlw	76
 11080  15B3  3191  21B2  3195   	fcall	_nrf_setChannel
 11081                           
 11082                           ;RF24.c: 446: nrf_flush_rx();
 11083  15B6  3190  2068  3195   	fcall	_nrf_flush_rx
 11084                           
 11085                           ;RF24.c: 447: nrf_flush_tx();
 11086  15B9  3190  207C         	fcall	_nrf_flush_tx
 11087  15BB  0008               	return
 11088  15BC                     __end_of_nrf_begin:	
 11089                           
 11090                           	psect	text42
 11091  130D                     __ptext42:	
 11092 ;; *************** function _nrf_setPALevel *****************
 11093 ;; Defined at:
 11094 ;;		line 874 in file "nRF_lib/RF24.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  level           1    wreg     enum E3270
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;  level           1   11[COMMON] enum E3270
 11099 ;;  setup           1   10[COMMON] unsigned char 
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  1    wreg      void 
 11102 ;; Registers used:
 11103 ;;		wreg, status,2, status,0, pclath, cstack
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;Total ram usage:        3 bytes
 11114 ;; Hardware stack levels used:    1
 11115 ;; Hardware stack levels required when called:    2
 11116 ;; This function calls:
 11117 ;;		_nrf_read_register
 11118 ;;		_nrf_write_register
 11119 ;; This function is called by:
 11120 ;;		_nrf_begin
 11121 ;;		_main
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           
 11126                           ;psect for function _nrf_setPALevel
 11127  130D                     _nrf_setPALevel:	
 11128                           
 11129                           ;incstack = 0
 11130                           ; Regs used in _nrf_setPALevel: [wreg+status,2+status,0+pclath+cstack]
 11131                           ;nrf_setPALevel@level stored from wreg
 11132  130D  00FB               	movwf	nrf_setPALevel@level
 11133                           
 11134                           ;RF24.c: 876: uint8_t setup = nrf_read_register(0x06) ;
 11135  130E  3006               	movlw	6
 11136  130F  3191  2145  3193   	fcall	_nrf_read_register
 11137  1312  00F9               	movwf	??_nrf_setPALevel
 11138  1313  0879               	movf	??_nrf_setPALevel,w
 11139  1314  00FA               	movwf	nrf_setPALevel@setup
 11140                           
 11141                           ;RF24.c: 877: setup &= ~((1<<(1)) | (1<<(2))) ;
 11142  1315  30F9               	movlw	249
 11143  1316  00F9               	movwf	??_nrf_setPALevel
 11144  1317  0879               	movf	??_nrf_setPALevel,w
 11145  1318  05FA               	andwf	nrf_setPALevel@setup,f
 11146                           
 11147                           ;RF24.c: 880: if ( level == RF24_PA_MAX )
 11148  1319  3003               	movlw	3
 11149  131A  067B               	xorwf	nrf_setPALevel@level,w
 11150  131B  1903               	btfsc	3,2
 11151  131C  2B2F               	goto	l4134
 11152                           
 11153                           ;RF24.c: 884: else if ( level == RF24_PA_HIGH )
 11154                           
 11155                           ;RF24.c: 883: }
 11156                           
 11157                           ;RF24.c: 881: {
 11158                           ;RF24.c: 882: setup |= ((1<<(1)) | (1<<(2))) ;
 11159  131D  3002               	movlw	2
 11160  131E  067B               	xorwf	nrf_setPALevel@level,w
 11161  131F  1D03               	btfss	3,2
 11162  1320  2B23               	goto	l4124
 11163                           
 11164                           ;RF24.c: 885: {
 11165                           ;RF24.c: 886: setup |= (1<<(2)) ;
 11166  1321  157A               	bsf	nrf_setPALevel@setup,2
 11167                           
 11168                           ;RF24.c: 887: }
 11169  1322  2B33               	goto	l4136
 11170  1323                     l4124:	
 11171                           
 11172                           ;RF24.c: 888: else if ( level == RF24_PA_LOW )
 11173  1323  037B               	decf	nrf_setPALevel@level,w
 11174  1324  1D03               	btfss	3,2
 11175  1325  2B28               	goto	l4128
 11176                           
 11177                           ;RF24.c: 889: {
 11178                           ;RF24.c: 890: setup |= (1<<(1));
 11179  1326  14FA               	bsf	nrf_setPALevel@setup,1
 11180                           
 11181                           ;RF24.c: 891: }
 11182  1327  2B33               	goto	l4136
 11183  1328                     l4128:	
 11184                           
 11185                           ;RF24.c: 892: else if ( level == RF24_PA_MIN )
 11186  1328  087B               	movf	nrf_setPALevel@level,w
 11187  1329  1903               	btfsc	3,2
 11188  132A  2B33               	goto	l4136
 11189                           
 11190                           ;RF24.c: 896: else if ( level == RF24_PA_ERROR )
 11191                           
 11192                           ;RF24.c: 893: {
 11193                           ;RF24.c: 895: }
 11194  132B  3004               	movlw	4
 11195  132C  067B               	xorwf	nrf_setPALevel@level,w
 11196  132D  1D03               	btfss	3,2
 11197  132E  2B33               	goto	l4136
 11198  132F                     l4134:	
 11199                           
 11200                           ;RF24.c: 897: {
 11201                           ;RF24.c: 899: setup |= ((1<<(1)) | (1<<(2))) ;
 11202  132F  3006               	movlw	6
 11203  1330  00F9               	movwf	??_nrf_setPALevel
 11204  1331  0879               	movf	??_nrf_setPALevel,w
 11205  1332  04FA               	iorwf	nrf_setPALevel@setup,f
 11206  1333                     l4136:	
 11207                           
 11208                           ;RF24.c: 900: }
 11209                           ;RF24.c: 902: nrf_write_register( 0x06, setup ) ;
 11210  1333  087A               	movf	nrf_setPALevel@setup,w
 11211  1334  00F9               	movwf	??_nrf_setPALevel
 11212  1335  0879               	movf	??_nrf_setPALevel,w
 11213  1336  00F5               	movwf	nrf_write_register@value
 11214  1337  3006               	movlw	6
 11215  1338  3191  2196         	fcall	_nrf_write_register
 11216  133A  0008               	return
 11217  133B                     __end_of_nrf_setPALevel:	
 11218                           
 11219                           	psect	text43
 11220  13CD                     __ptext43:	
 11221 ;; *************** function _nrf_setDataRate *****************
 11222 ;; Defined at:
 11223 ;;		line 935 in file "nRF_lib/RF24.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;  speed           1    wreg     enum E3277
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;  speed           1   11[COMMON] enum E3277
 11228 ;;  setup           1   12[COMMON] unsigned char 
 11229 ;;  result          1   10[COMMON] unsigned char 
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  1    wreg      unsigned char 
 11232 ;; Registers used:
 11233 ;;		wreg, status,2, status,0, pclath, cstack
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11240 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11242 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;Total ram usage:        4 bytes
 11244 ;; Hardware stack levels used:    1
 11245 ;; Hardware stack levels required when called:    2
 11246 ;; This function calls:
 11247 ;;		_nrf_read_register
 11248 ;;		_nrf_write_register
 11249 ;; This function is called by:
 11250 ;;		_nrf_begin
 11251 ;;		_main
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           
 11256                           ;psect for function _nrf_setDataRate
 11257  13CD                     _nrf_setDataRate:	
 11258                           
 11259                           ;incstack = 0
 11260                           ; Regs used in _nrf_setDataRate: [wreg+status,2+status,0+pclath+cstack]
 11261                           ;nrf_setDataRate@speed stored from wreg
 11262  13CD  00FB               	movwf	nrf_setDataRate@speed
 11263                           
 11264                           ;RF24.c: 937: bool result = 0;
 11265  13CE  01FA               	clrf	nrf_setDataRate@result
 11266                           
 11267                           ;RF24.c: 938: uint8_t setup = nrf_read_register(0x06) ;
 11268  13CF  3006               	movlw	6
 11269  13D0  3191  2145  3193   	fcall	_nrf_read_register
 11270  13D3  00F9               	movwf	??_nrf_setDataRate
 11271  13D4  0879               	movf	??_nrf_setDataRate,w
 11272  13D5  00FC               	movwf	nrf_setDataRate@setup
 11273                           
 11274                           ;RF24.c: 941: wide_band = 0 ;
 11275  13D6  0021               	movlb	1	; select bank1
 11276  13D7  01AD               	clrf	_wide_band^(0+128)
 11277                           
 11278                           ;RF24.c: 942: setup &= ~((1<<(5)) | (1<<(3))) ;
 11279  13D8  30D7               	movlw	215
 11280  13D9  00F9               	movwf	??_nrf_setDataRate
 11281  13DA  0879               	movf	??_nrf_setDataRate,w
 11282  13DB  05FC               	andwf	nrf_setDataRate@setup,f
 11283                           
 11284                           ;RF24.c: 943: if( speed == RF24_250KBPS )
 11285  13DC  3002               	movlw	2
 11286  13DD  067B               	xorwf	nrf_setDataRate@speed,w
 11287  13DE  1D03               	btfss	3,2
 11288  13DF  2BE3               	goto	l4152
 11289                           
 11290                           ;RF24.c: 944: {
 11291                           ;RF24.c: 947: wide_band = 0 ;
 11292  13E0  01AD               	clrf	_wide_band^(0+128)
 11293                           
 11294                           ;RF24.c: 948: setup |= (1<<(5)) ;
 11295  13E1  16FC               	bsf	nrf_setDataRate@setup,5
 11296                           
 11297                           ;RF24.c: 949: }
 11298  13E2  2BEB               	goto	l4158
 11299  13E3                     l4152:	
 11300                           
 11301                           ;RF24.c: 950: else
 11302                           ;RF24.c: 951: {
 11303                           ;RF24.c: 954: if ( speed == RF24_2MBPS )
 11304  13E3  037B               	decf	nrf_setDataRate@speed,w
 11305  13E4  1D03               	btfss	3,2
 11306  13E5  2BEA               	goto	l4156
 11307                           
 11308                           ;RF24.c: 955: {
 11309                           ;RF24.c: 956: wide_band = 1 ;
 11310  13E6  01AD               	clrf	_wide_band^(0+128)
 11311  13E7  0AAD               	incf	_wide_band^(0+128),f
 11312                           
 11313                           ;RF24.c: 957: setup |= (1<<(3));
 11314  13E8  15FC               	bsf	nrf_setDataRate@setup,3
 11315                           
 11316                           ;RF24.c: 958: }
 11317  13E9  2BEB               	goto	l4158
 11318  13EA                     l4156:	
 11319                           
 11320                           ;RF24.c: 959: else
 11321                           ;RF24.c: 960: {
 11322                           ;RF24.c: 962: wide_band = 0 ;
 11323  13EA  01AD               	clrf	_wide_band^(0+128)
 11324  13EB                     l4158:	
 11325                           
 11326                           ;RF24.c: 963: }
 11327                           ;RF24.c: 964: }
 11328                           ;RF24.c: 965: nrf_write_register(0x06,setup);
 11329  13EB  087C               	movf	nrf_setDataRate@setup,w
 11330  13EC  00F9               	movwf	??_nrf_setDataRate
 11331  13ED  0879               	movf	??_nrf_setDataRate,w
 11332  13EE  00F5               	movwf	nrf_write_register@value
 11333  13EF  3006               	movlw	6
 11334  13F0  3191  2196  3193   	fcall	_nrf_write_register
 11335                           
 11336                           ;RF24.c: 968: if ( nrf_read_register(0x06) == setup )
 11337  13F3  3006               	movlw	6
 11338  13F4  3191  2145  3193   	fcall	_nrf_read_register
 11339  13F7  067C               	xorwf	nrf_setDataRate@setup,w
 11340  13F8  1D03               	skipz
 11341  13F9  2BFD               	goto	l4164
 11342                           
 11343                           ;RF24.c: 969: {
 11344                           ;RF24.c: 970: result = 1;
 11345  13FA  01FA               	clrf	nrf_setDataRate@result
 11346  13FB  0AFA               	incf	nrf_setDataRate@result,f
 11347                           
 11348                           ;RF24.c: 971: }
 11349  13FC  2BFF               	goto	l4166
 11350  13FD                     l4164:	
 11351                           
 11352                           ;RF24.c: 972: else
 11353                           ;RF24.c: 973: {
 11354                           ;RF24.c: 974: wide_band = 0;
 11355  13FD  0021               	movlb	1	; select bank1
 11356  13FE  01AD               	clrf	_wide_band^(0+128)
 11357  13FF                     l4166:	
 11358                           
 11359                           ;RF24.c: 975: }
 11360                           ;RF24.c: 977: return result;
 11361  13FF  087A               	movf	nrf_setDataRate@result,w
 11362  1400  0008               	return
 11363  1401                     __end_of_nrf_setDataRate:	
 11364                           
 11365                           	psect	text44
 11366  11B2                     __ptext44:	
 11367 ;; *************** function _nrf_setChannel *****************
 11368 ;; Defined at:
 11369 ;;		line 262 in file "nRF_lib/RF24.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  channel         1    wreg     unsigned char 
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;  channel         1   13[COMMON] unsigned char 
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  1    wreg      void 
 11376 ;; Registers used:
 11377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;Total ram usage:        5 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; Hardware stack levels required when called:    2
 11390 ;; This function calls:
 11391 ;;		_nrf_write_register
 11392 ;; This function is called by:
 11393 ;;		_nrf_begin
 11394 ;;		_main
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           
 11399                           ;psect for function _nrf_setChannel
 11400  11B2                     _nrf_setChannel:	
 11401                           
 11402                           ;incstack = 0
 11403                           ; Regs used in _nrf_setChannel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11404                           ;nrf_setChannel@channel stored from wreg
 11405  11B2  00FD               	movwf	nrf_setChannel@channel
 11406                           
 11407                           ;RF24.c: 267: const uint8_t max_channel = 127;
 11408                           ;RF24.c: 268: nrf_write_register(0x05, (((channel) < (max_channel)) ? (channel) : (max_c
      +                          hannel)));
 11409  11B3  3049               	movlw	low (nrf_setChannel@max_channel| (0+32768))
 11410  11B4  0084               	movwf	4
 11411  11B5  3088               	movlw	high (nrf_setChannel@max_channel| (0+32768))
 11412  11B6  0085               	movwf	5
 11413  11B7  0800               	movf	0,w	;code access
 11414  11B8  027D               	subwf	nrf_setChannel@channel,w
 11415  11B9  1C03               	skipc
 11416  11BA  29C1               	goto	l4108
 11417  11BB  3049               	movlw	low (nrf_setChannel@max_channel| (0+32768))
 11418  11BC  0084               	movwf	4
 11419  11BD  3088               	movlw	high (nrf_setChannel@max_channel| (0+32768))
 11420  11BE  0085               	movwf	5
 11421  11BF  0800               	movf	0,w	;code access
 11422  11C0  29C2               	goto	L24
 11423  11C1                     l4108:	
 11424  11C1  087D               	movf	nrf_setChannel@channel,w
 11425  11C2                     L24:	
 11426  11C2  00F9               	movwf	??_nrf_setChannel
 11427  11C3  01FA               	clrf	??_nrf_setChannel+1
 11428  11C4  0879               	movf	??_nrf_setChannel,w
 11429  11C5  00FB               	movwf	_nrf_setChannel$242
 11430  11C6  087A               	movf	??_nrf_setChannel+1,w
 11431  11C7  00FC               	movwf	_nrf_setChannel$242+1
 11432  11C8  087B               	movf	_nrf_setChannel$242,w
 11433  11C9  00F9               	movwf	??_nrf_setChannel
 11434  11CA  0879               	movf	??_nrf_setChannel,w
 11435  11CB  00F5               	movwf	nrf_write_register@value
 11436  11CC  3005               	movlw	5
 11437  11CD  3191  2196         	fcall	_nrf_write_register
 11438  11CF  0008               	return
 11439  11D0                     __end_of_nrf_setChannel:	
 11440                           
 11441                           	psect	text45
 11442  1160                     __ptext45:	
 11443 ;; *************** function _nrf_setCRCLength *****************
 11444 ;; Defined at:
 11445 ;;		line 1009 in file "nRF_lib/RF24.c"
 11446 ;; Parameters:    Size  Location     Type
 11447 ;;  length          1    wreg     enum E3282
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  length          1   10[COMMON] enum E3282
 11450 ;;  config          1   11[COMMON] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0, pclath, cstack
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;Total ram usage:        3 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    2
 11467 ;; This function calls:
 11468 ;;		_nrf_read_register
 11469 ;;		_nrf_write_register
 11470 ;; This function is called by:
 11471 ;;		_nrf_begin
 11472 ;;		_main
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           
 11477                           ;psect for function _nrf_setCRCLength
 11478  1160                     _nrf_setCRCLength:	
 11479                           
 11480                           ;incstack = 0
 11481                           ; Regs used in _nrf_setCRCLength: [wreg+status,2+status,0+pclath+cstack]
 11482                           ;nrf_setCRCLength@length stored from wreg
 11483  1160  00FA               	movwf	nrf_setCRCLength@length
 11484                           
 11485                           ;RF24.c: 1011: uint8_t config = nrf_read_register(0x00) & ~( (1<<(2)) | (1<<(3))) ;
 11486  1161  3000               	movlw	0
 11487  1162  3191  2145  3191   	fcall	_nrf_read_register
 11488  1165  39F3               	andlw	243
 11489  1166  00F9               	movwf	??_nrf_setCRCLength
 11490  1167  0879               	movf	??_nrf_setCRCLength,w
 11491  1168  00FB               	movwf	nrf_setCRCLength@config
 11492                           
 11493                           ;RF24.c: 1014: if ( length == RF24_CRC_DISABLED )
 11494  1169  087A               	movf	nrf_setCRCLength@length,w
 11495  116A  1903               	btfsc	3,2
 11496  116B  2973               	goto	l4180
 11497                           
 11498                           ;RF24.c: 1018: else if ( length == RF24_CRC_8 )
 11499                           
 11500                           ;RF24.c: 1015: {
 11501                           ;RF24.c: 1017: }
 11502  116C  037A               	decf	nrf_setCRCLength@length,w
 11503  116D  1D03               	btfss	3,2
 11504  116E  2971               	goto	l371
 11505                           
 11506                           ;RF24.c: 1019: {
 11507                           ;RF24.c: 1020: config |= (1<<(3));
 11508  116F  15FB               	bsf	nrf_setCRCLength@config,3
 11509                           
 11510                           ;RF24.c: 1021: }
 11511  1170  2973               	goto	l4180
 11512  1171                     l371:	
 11513                           
 11514                           ;RF24.c: 1022: else
 11515                           ;RF24.c: 1023: {
 11516                           ;RF24.c: 1024: config |= (1<<(3));
 11517  1171  15FB               	bsf	nrf_setCRCLength@config,3
 11518                           
 11519                           ;RF24.c: 1025: config |= (1<<(2));
 11520  1172  157B               	bsf	nrf_setCRCLength@config,2
 11521  1173                     l4180:	
 11522                           
 11523                           ;RF24.c: 1026: }
 11524                           ;RF24.c: 1027: nrf_write_register( 0x00, config ) ;
 11525  1173  087B               	movf	nrf_setCRCLength@config,w
 11526  1174  00F9               	movwf	??_nrf_setCRCLength
 11527  1175  0879               	movf	??_nrf_setCRCLength,w
 11528  1176  00F5               	movwf	nrf_write_register@value
 11529  1177  3000               	movlw	0
 11530  1178  3191  2196         	fcall	_nrf_write_register
 11531  117A  0008               	return
 11532  117B                     __end_of_nrf_setCRCLength:	
 11533                           
 11534                           	psect	text46
 11535  1145                     __ptext46:	
 11536 ;; *************** function _nrf_read_register *****************
 11537 ;; Defined at:
 11538 ;;		line 58 in file "nRF_lib/RF24.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  reg             1    wreg     unsigned char 
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;  reg             1    3[COMMON] unsigned char 
 11543 ;;  result          1    4[COMMON] unsigned char 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      unsigned char 
 11546 ;; Registers used:
 11547 ;;		wreg, status,2, status,0, pclath, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;Total ram usage:        3 bytes
 11558 ;; Hardware stack levels used:    1
 11559 ;; Hardware stack levels required when called:    1
 11560 ;; This function calls:
 11561 ;;		_nrf_csn
 11562 ;;		_spi_fast_shift
 11563 ;; This function is called by:
 11564 ;;		_nrf_startListening
 11565 ;;		_nrf_powerDown
 11566 ;;		_nrf_powerUp
 11567 ;;		_nrf_startWrite
 11568 ;;		_nrf_read
 11569 ;;		_nrf_openReadingPipe
 11570 ;;		_nrf_enableDynamicPayloads
 11571 ;;		_nrf_setPALevel
 11572 ;;		_nrf_setDataRate
 11573 ;;		_nrf_setCRCLength
 11574 ;;		_nrf_print_byte_register
 11575 ;;		_nrf_enableAckPayload
 11576 ;;		_nrf_setAutoAck
 11577 ;;		_nrf_testCarrier
 11578 ;;		_nrf_testRPD
 11579 ;;		_nrf_getPALevel
 11580 ;;		_nrf_getDataRate
 11581 ;;		_nrf_getCRCLength
 11582 ;;		_nrf_disableCRC
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           
 11587                           ;psect for function _nrf_read_register
 11588  1145                     _nrf_read_register:	
 11589                           
 11590                           ;incstack = 0
 11591                           ; Regs used in _nrf_read_register: [wreg+status,2+status,0+pclath+cstack]
 11592                           ;nrf_read_register@reg stored from wreg
 11593  1145  00F3               	movwf	nrf_read_register@reg
 11594                           
 11595                           ;RF24.c: 60: nrf_csn(0);
 11596  1146  3000               	movlw	0
 11597  1147  00F0               	movwf	nrf_csn@mode
 11598  1148  00F1               	movwf	nrf_csn@mode+1
 11599  1149  319F  27C6  3191   	fcall	_nrf_csn
 11600                           
 11601                           ;RF24.c: 61: spi_fast_shift( 0x00 | ( 0x1F & reg ) );
 11602  114C  0873               	movf	nrf_read_register@reg,w
 11603  114D  391F               	andlw	31
 11604  114E  3190  2000  3191   	fcall	_spi_fast_shift
 11605                           
 11606                           ;RF24.c: 62: uint8_t result = spi_fast_shift(0xff);
 11607  1151  30FF               	movlw	255
 11608  1152  3190  2000  3191   	fcall	_spi_fast_shift
 11609  1155  00F2               	movwf	??_nrf_read_register
 11610  1156  0872               	movf	??_nrf_read_register,w
 11611  1157  00F4               	movwf	nrf_read_register@result
 11612                           
 11613                           ;RF24.c: 64: nrf_csn(1);
 11614  1158  3001               	movlw	1
 11615  1159  00F0               	movwf	nrf_csn@mode
 11616  115A  3000               	movlw	0
 11617  115B  00F1               	movwf	nrf_csn@mode+1
 11618  115C  319F  27C6         	fcall	_nrf_csn
 11619                           
 11620                           ;RF24.c: 65: return result;
 11621  115E  0874               	movf	nrf_read_register@result,w
 11622  115F  0008               	return
 11623  1160                     __end_of_nrf_read_register:	
 11624                           
 11625                           	psect	text47
 11626  107C                     __ptext47:	
 11627 ;; *************** function _nrf_flush_tx *****************
 11628 ;; Defined at:
 11629 ;;		line 170 in file "nRF_lib/RF24.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;		None
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  status          1    3[COMMON] unsigned char 
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      unsigned char 
 11636 ;; Registers used:
 11637 ;;		wreg, status,2, status,0, pclath, cstack
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;Total ram usage:        2 bytes
 11648 ;; Hardware stack levels used:    1
 11649 ;; Hardware stack levels required when called:    1
 11650 ;; This function calls:
 11651 ;;		_nrf_csn
 11652 ;;		_spi_fast_shift
 11653 ;; This function is called by:
 11654 ;;		_nrf_begin
 11655 ;;		_nrf_startListening
 11656 ;;		_nrf_stopListening
 11657 ;;		_nrf_write
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           
 11662                           ;psect for function _nrf_flush_tx
 11663  107C                     _nrf_flush_tx:	
 11664                           
 11665                           ;RF24.c: 172: uint8_t status;
 11666                           ;RF24.c: 174: nrf_csn(0);
 11667                           
 11668                           ;incstack = 0
 11669                           ; Regs used in _nrf_flush_tx: [wreg+status,2+status,0+pclath+cstack]
 11670  107C  3000               	movlw	0
 11671  107D  00F0               	movwf	nrf_csn@mode
 11672  107E  00F1               	movwf	nrf_csn@mode+1
 11673  107F  319F  27C6  3190   	fcall	_nrf_csn
 11674                           
 11675                           ;RF24.c: 175: status = spi_fast_shift( 0xE1 );
 11676  1082  30E1               	movlw	225
 11677  1083  3190  2000  3190   	fcall	_spi_fast_shift
 11678  1086  00F2               	movwf	??_nrf_flush_tx
 11679  1087  0872               	movf	??_nrf_flush_tx,w
 11680  1088  00F3               	movwf	nrf_flush_tx@status
 11681                           
 11682                           ;RF24.c: 176: nrf_csn(1);
 11683  1089  3001               	movlw	1
 11684  108A  00F0               	movwf	nrf_csn@mode
 11685  108B  3000               	movlw	0
 11686  108C  00F1               	movwf	nrf_csn@mode+1
 11687  108D  319F  27C6         	fcall	_nrf_csn
 11688  108F  0008               	return
 11689  1090                     __end_of_nrf_flush_tx:	
 11690                           ;RF24.c: 178: return status;
 11691                           ;	Return value of _nrf_flush_tx is never used
 11692                           
 11693                           
 11694                           	psect	text48
 11695  1068                     __ptext48:	
 11696 ;; *************** function _nrf_flush_rx *****************
 11697 ;; Defined at:
 11698 ;;		line 157 in file "nRF_lib/RF24.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  status          1    3[COMMON] unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      unsigned char 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0, pclath, cstack
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;Total ram usage:        2 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    1
 11719 ;; This function calls:
 11720 ;;		_nrf_csn
 11721 ;;		_spi_fast_shift
 11722 ;; This function is called by:
 11723 ;;		_nrf_begin
 11724 ;;		_nrf_startListening
 11725 ;;		_nrf_stopListening
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           
 11730                           ;psect for function _nrf_flush_rx
 11731  1068                     _nrf_flush_rx:	
 11732                           
 11733                           ;RF24.c: 159: uint8_t status;
 11734                           ;RF24.c: 161: nrf_csn(0);
 11735                           
 11736                           ;incstack = 0
 11737                           ; Regs used in _nrf_flush_rx: [wreg+status,2+status,0+pclath+cstack]
 11738  1068  3000               	movlw	0
 11739  1069  00F0               	movwf	nrf_csn@mode
 11740  106A  00F1               	movwf	nrf_csn@mode+1
 11741  106B  319F  27C6  3190   	fcall	_nrf_csn
 11742                           
 11743                           ;RF24.c: 162: status = spi_fast_shift( 0xE2 );
 11744  106E  30E2               	movlw	226
 11745  106F  3190  2000  3190   	fcall	_spi_fast_shift
 11746  1072  00F2               	movwf	??_nrf_flush_rx
 11747  1073  0872               	movf	??_nrf_flush_rx,w
 11748  1074  00F3               	movwf	nrf_flush_rx@status
 11749                           
 11750                           ;RF24.c: 163: nrf_csn(1);
 11751  1075  3001               	movlw	1
 11752  1076  00F0               	movwf	nrf_csn@mode
 11753  1077  3000               	movlw	0
 11754  1078  00F1               	movwf	nrf_csn@mode+1
 11755  1079  319F  27C6         	fcall	_nrf_csn
 11756  107B  0008               	return
 11757  107C                     __end_of_nrf_flush_rx:	
 11758                           ;RF24.c: 165: return status;
 11759                           ;	Return value of _nrf_flush_rx is never used
 11760                           
 11761                           
 11762                           	psect	text49
 11763  1FCD                     __ptext49:	
 11764 ;; *************** function _nrf_ce *****************
 11765 ;; Defined at:
 11766 ;;		line 34 in file "nRF_lib/RF24.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;  level           2    0[COMMON] int 
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;		None
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      void 
 11773 ;; Registers used:
 11774 ;;		wreg, status,0
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;Total ram usage:        2 bytes
 11785 ;; Hardware stack levels used:    1
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_nrf_begin
 11790 ;;		_nrf_startListening
 11791 ;;		_nrf_stopListening
 11792 ;;		_nrf_startWrite
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function _nrf_ce
 11798  1FCD                     _nrf_ce:	
 11799                           
 11800                           ;RF24.c: 37: LATCbits.LATC6 = level;
 11801                           
 11802                           ;incstack = 0
 11803                           ; Regs used in _nrf_ce: [wreg+status,0]
 11804  1FCD  0C70               	rrf	nrf_ce@level,w
 11805  1FCE  0022               	movlb	2	; select bank2
 11806  1FCF  1C03               	skipc
 11807  1FD0  130E               	bcf	14,6	;volatile
 11808  1FD1  1803               	skipnc
 11809  1FD2  170E               	bsf	14,6	;volatile
 11810  1FD3  0008               	return
 11811  1FD4                     __end_of_nrf_ce:	
 11812                           
 11813                           	psect	text50
 11814  12E0                     __ptext50:	
 11815 ;; *************** function _nrf_available *****************
 11816 ;; Defined at:
 11817 ;;		line 615 in file "nRF_lib/RF24.c"
 11818 ;; Parameters:    Size  Location     Type
 11819 ;;  pipe_num        1    wreg     PTR unsigned char 
 11820 ;;		 -> main@nRF_pipe_reading(5), 
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;  pipe_num        1   11[COMMON] PTR unsigned char 
 11823 ;;		 -> main@nRF_pipe_reading(5), 
 11824 ;;  status          1   12[COMMON] unsigned char 
 11825 ;;  result          1   10[COMMON] unsigned char 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      unsigned char 
 11828 ;; Registers used:
 11829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;Total ram usage:        4 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    2
 11842 ;; This function calls:
 11843 ;;		_nrf_get_status
 11844 ;;		_nrf_write_register
 11845 ;; This function is called by:
 11846 ;;		_main
 11847 ;; This function uses a non-reentrant model
 11848 ;;
 11849                           
 11850                           
 11851                           ;psect for function _nrf_available
 11852  12E0                     _nrf_available:	
 11853                           
 11854                           ;incstack = 0
 11855                           ; Regs used in _nrf_available: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11856                           ;nrf_available@pipe_num stored from wreg
 11857  12E0  00FB               	movwf	nrf_available@pipe_num
 11858                           
 11859                           ;RF24.c: 617: uint8_t status = nrf_get_status();
 11860  12E1  3190  2090  3192   	fcall	_nrf_get_status
 11861  12E4  00F9               	movwf	??_nrf_available
 11862  12E5  0879               	movf	??_nrf_available,w
 11863  12E6  00FC               	movwf	nrf_available@status
 11864                           
 11865                           ;RF24.c: 622: bool result = ( status & (1<<(6)) );
 11866  12E7  087C               	movf	nrf_available@status,w
 11867  12E8  3940               	andlw	64
 11868  12E9  00F9               	movwf	??_nrf_available
 11869  12EA  0879               	movf	??_nrf_available,w
 11870  12EB  00FA               	movwf	nrf_available@result
 11871                           
 11872                           ;RF24.c: 624: if (result)
 11873  12EC  087A               	movf	nrf_available@result,w
 11874  12ED  1903               	btfsc	3,2
 11875  12EE  2B0B               	goto	l4864
 11876                           
 11877                           ;RF24.c: 625: {
 11878                           ;RF24.c: 627: if ( pipe_num )
 11879  12EF  087B               	movf	nrf_available@pipe_num,w
 11880  12F0  1903               	btfsc	3,2
 11881  12F1  2AFA               	goto	l4858
 11882                           
 11883                           ;RF24.c: 628: *pipe_num = ( status >> 1 ) & 0b00000111;
 11884  12F2  367C               	lsrf	nrf_available@status,w
 11885  12F3  3907               	andlw	7
 11886  12F4  00F9               	movwf	??_nrf_available
 11887  12F5  087B               	movf	nrf_available@pipe_num,w
 11888  12F6  0086               	movwf	6
 11889  12F7  0187               	clrf	7
 11890  12F8  0879               	movf	??_nrf_available,w
 11891  12F9  0081               	movwf	1
 11892  12FA                     l4858:	
 11893                           
 11894                           ;RF24.c: 635: nrf_write_register(0x07,(1<<(6)) );
 11895  12FA  3040               	movlw	64
 11896  12FB  00F9               	movwf	??_nrf_available
 11897  12FC  0879               	movf	??_nrf_available,w
 11898  12FD  00F5               	movwf	nrf_write_register@value
 11899  12FE  3007               	movlw	7
 11900  12FF  3191  2196  3192   	fcall	_nrf_write_register
 11901                           
 11902                           ;RF24.c: 638: if ( status & (1<<(5)) )
 11903  1302  1EFC               	btfss	nrf_available@status,5
 11904  1303  2B0B               	goto	l4864
 11905                           
 11906                           ;RF24.c: 639: {
 11907                           ;RF24.c: 640: nrf_write_register(0x07,(1<<(5)));
 11908  1304  3020               	movlw	32
 11909  1305  00F9               	movwf	??_nrf_available
 11910  1306  0879               	movf	??_nrf_available,w
 11911  1307  00F5               	movwf	nrf_write_register@value
 11912  1308  3007               	movlw	7
 11913  1309  3191  2196         	fcall	_nrf_write_register
 11914  130B                     l4864:	
 11915                           
 11916                           ;RF24.c: 641: }
 11917                           ;RF24.c: 642: }
 11918                           ;RF24.c: 644: return result;
 11919  130B  087A               	movf	nrf_available@result,w
 11920  130C  0008               	return
 11921  130D                     __end_of_nrf_available:	
 11922                           
 11923                           	psect	text51
 11924  1196                     __ptext51:	
 11925 ;; *************** function _nrf_write_register *****************
 11926 ;; Defined at:
 11927 ;;		line 86 in file "nRF_lib/RF24.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  reg             1    wreg     unsigned char 
 11930 ;;  value           1    5[COMMON] unsigned char 
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  reg             1    7[COMMON] unsigned char 
 11933 ;;  status          1    8[COMMON] unsigned char 
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  1    wreg      unsigned char 
 11936 ;; Registers used:
 11937 ;;		wreg, status,2, status,0, pclath, cstack
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11943 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;Total ram usage:        4 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    1
 11950 ;; This function calls:
 11951 ;;		_nrf_csn
 11952 ;;		_spi_fast_shift
 11953 ;; This function is called by:
 11954 ;;		_nrf_setChannel
 11955 ;;		_nrf_begin
 11956 ;;		_nrf_startListening
 11957 ;;		_nrf_powerDown
 11958 ;;		_nrf_powerUp
 11959 ;;		_nrf_startWrite
 11960 ;;		_nrf_available
 11961 ;;		_nrf_whatHappened
 11962 ;;		_nrf_openWritingPipe
 11963 ;;		_nrf_openReadingPipe
 11964 ;;		_nrf_enableDynamicPayloads
 11965 ;;		_nrf_setAutoAck_all
 11966 ;;		_nrf_setPALevel
 11967 ;;		_nrf_setDataRate
 11968 ;;		_nrf_setCRCLength
 11969 ;;		_nrf_setRetries
 11970 ;;		_nrf_enableAckPayload
 11971 ;;		_nrf_setAutoAck
 11972 ;;		_nrf_disableCRC
 11973 ;; This function uses a non-reentrant model
 11974 ;;
 11975                           
 11976                           
 11977                           ;psect for function _nrf_write_register
 11978  1196                     _nrf_write_register:	
 11979                           
 11980                           ;incstack = 0
 11981                           ; Regs used in _nrf_write_register: [wreg+status,2+status,0+pclath+cstack]
 11982                           ;nrf_write_register@reg stored from wreg
 11983  1196  00F7               	movwf	nrf_write_register@reg
 11984                           
 11985                           ;RF24.c: 88: uint8_t status;
 11986                           ;RF24.c: 95: nrf_csn(0);
 11987  1197  3000               	movlw	0
 11988  1198  00F0               	movwf	nrf_csn@mode
 11989  1199  00F1               	movwf	nrf_csn@mode+1
 11990  119A  319F  27C6  3191   	fcall	_nrf_csn
 11991                           
 11992                           ;RF24.c: 96: status = spi_fast_shift( 0x20 | ( 0x1F & reg ) );
 11993  119D  0877               	movf	nrf_write_register@reg,w
 11994  119E  391F               	andlw	31
 11995  119F  3820               	iorlw	32
 11996  11A0  3190  2000  3191   	fcall	_spi_fast_shift
 11997  11A3  00F6               	movwf	??_nrf_write_register
 11998  11A4  0876               	movf	??_nrf_write_register,w
 11999  11A5  00F8               	movwf	nrf_write_register@status
 12000                           
 12001                           ;RF24.c: 97: spi_fast_shift(value);
 12002  11A6  0875               	movf	nrf_write_register@value,w
 12003  11A7  3190  2000  3191   	fcall	_spi_fast_shift
 12004                           
 12005                           ;RF24.c: 98: nrf_csn(1);
 12006  11AA  3001               	movlw	1
 12007  11AB  00F0               	movwf	nrf_csn@mode
 12008  11AC  3000               	movlw	0
 12009  11AD  00F1               	movwf	nrf_csn@mode+1
 12010  11AE  319F  27C6         	fcall	_nrf_csn
 12011                           
 12012                           ;RF24.c: 100: return status;
 12013  11B0  0878               	movf	nrf_write_register@status,w
 12014  11B1  0008               	return
 12015  11B2                     __end_of_nrf_write_register:	
 12016                           
 12017                           	psect	text52
 12018  1090                     __ptext52:	
 12019 ;; *************** function _nrf_get_status *****************
 12020 ;; Defined at:
 12021 ;;		line 183 in file "nRF_lib/RF24.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;		None
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  status          1    3[COMMON] unsigned char 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      unsigned char 
 12028 ;; Registers used:
 12029 ;;		wreg, status,2, status,0, pclath, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;Total ram usage:        2 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:    1
 12042 ;; This function calls:
 12043 ;;		_nrf_csn
 12044 ;;		_spi_fast_shift
 12045 ;; This function is called by:
 12046 ;;		_nrf_available
 12047 ;;		_nrf_printDetails
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           
 12052                           ;psect for function _nrf_get_status
 12053  1090                     _nrf_get_status:	
 12054                           
 12055                           ;RF24.c: 185: uint8_t status;
 12056                           ;RF24.c: 187: nrf_csn(0);
 12057                           
 12058                           ;incstack = 0
 12059                           ; Regs used in _nrf_get_status: [wreg+status,2+status,0+pclath+cstack]
 12060  1090  3000               	movlw	0
 12061  1091  00F0               	movwf	nrf_csn@mode
 12062  1092  00F1               	movwf	nrf_csn@mode+1
 12063  1093  319F  27C6  3190   	fcall	_nrf_csn
 12064                           
 12065                           ;RF24.c: 188: status = spi_fast_shift( 0xFF );
 12066  1096  30FF               	movlw	255
 12067  1097  3190  2000  3190   	fcall	_spi_fast_shift
 12068  109A  00F2               	movwf	??_nrf_get_status
 12069  109B  0872               	movf	??_nrf_get_status,w
 12070  109C  00F3               	movwf	nrf_get_status@status
 12071                           
 12072                           ;RF24.c: 189: nrf_csn(1);
 12073  109D  3001               	movlw	1
 12074  109E  00F0               	movwf	nrf_csn@mode
 12075  109F  3000               	movlw	0
 12076  10A0  00F1               	movwf	nrf_csn@mode+1
 12077  10A1  319F  27C6         	fcall	_nrf_csn
 12078                           
 12079                           ;RF24.c: 191: return status;
 12080  10A3  0873               	movf	nrf_get_status@status,w
 12081  10A4  0008               	return
 12082  10A5                     __end_of_nrf_get_status:	
 12083                           
 12084                           	psect	text53
 12085  1000                     __ptext53:	
 12086 ;; *************** function _spi_fast_shift *****************
 12087 ;; Defined at:
 12088 ;;		line 66 in file "spi.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  data            1    wreg     unsigned char 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;  data            1    0[COMMON] unsigned char 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      unsigned char 
 12095 ;; Registers used:
 12096 ;;		wreg
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;Total ram usage:        1 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; This function calls:
 12109 ;;		Nothing
 12110 ;; This function is called by:
 12111 ;;		_nrf_read_register_len
 12112 ;;		_nrf_read_register
 12113 ;;		_nrf_write_register_len
 12114 ;;		_nrf_write_register
 12115 ;;		_nrf_write_payload
 12116 ;;		_nrf_read_payload
 12117 ;;		_nrf_flush_rx
 12118 ;;		_nrf_flush_tx
 12119 ;;		_nrf_get_status
 12120 ;;		_nrf_getDynamicPayloadSize
 12121 ;;		_nrf_toggle_features
 12122 ;;		_nrf_writeAckPayload
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function _spi_fast_shift
 12128  1000                     _spi_fast_shift:	
 12129                           
 12130                           ;incstack = 0
 12131                           ; Regs used in _spi_fast_shift: [wreg]
 12132                           ;spi_fast_shift@data stored from wreg
 12133  1000  00F0               	movwf	spi_fast_shift@data
 12134                           
 12135                           ;spi.c: 67: SSP1BUF = data;
 12136  1001  0870               	movf	spi_fast_shift@data,w
 12137  1002  0024               	movlb	4	; select bank4
 12138  1003  0091               	movwf	17	;volatile
 12139  1004                     l865:	
 12140                           ;spi.c: 68: while( !PIR1bits.SSP1IF );
 12141                           
 12142  1004  0020               	movlb	0	; select bank0
 12143  1005  1D91               	btfss	17,3	;volatile
 12144  1006  2804               	goto	l865
 12145                           
 12146                           ;spi.c: 69: PIR1bits.SSP1IF = 0;
 12147  1007  1191               	bcf	17,3	;volatile
 12148                           
 12149                           ;spi.c: 70: return SSP1BUF;
 12150  1008  0024               	movlb	4	; select bank4
 12151  1009  0811               	movf	17,w	;volatile
 12152  100A  0008               	return
 12153  100B                     __end_of_spi_fast_shift:	
 12154                           
 12155                           	psect	text54
 12156  1FC6                     __ptext54:	
 12157 ;; *************** function _nrf_csn *****************
 12158 ;; Defined at:
 12159 ;;		line 17 in file "nRF_lib/RF24.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  mode            2    0[COMMON] int 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;		None
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  1    wreg      void 
 12166 ;; Registers used:
 12167 ;;		wreg, status,0
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;Total ram usage:        2 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; This function calls:
 12180 ;;		Nothing
 12181 ;; This function is called by:
 12182 ;;		_nrf_read_register_len
 12183 ;;		_nrf_read_register
 12184 ;;		_nrf_write_register_len
 12185 ;;		_nrf_write_register
 12186 ;;		_nrf_write_payload
 12187 ;;		_nrf_read_payload
 12188 ;;		_nrf_flush_rx
 12189 ;;		_nrf_flush_tx
 12190 ;;		_nrf_get_status
 12191 ;;		_nrf_begin
 12192 ;;		_nrf_getDynamicPayloadSize
 12193 ;;		_nrf_toggle_features
 12194 ;;		_nrf_writeAckPayload
 12195 ;; This function uses a non-reentrant model
 12196 ;;
 12197                           
 12198                           
 12199                           ;psect for function _nrf_csn
 12200  1FC6                     _nrf_csn:	
 12201                           
 12202                           ;RF24.c: 29: LATCbits.LATC3 = mode;
 12203                           
 12204                           ;incstack = 0
 12205                           ; Regs used in _nrf_csn: [wreg+status,0]
 12206  1FC6  0C70               	rrf	nrf_csn@mode,w
 12207  1FC7  0022               	movlb	2	; select bank2
 12208  1FC8  1C03               	skipc
 12209  1FC9  118E               	bcf	14,3	;volatile
 12210  1FCA  1803               	skipnc
 12211  1FCB  158E               	bsf	14,3	;volatile
 12212  1FCC  0008               	return
 12213  1FCD                     __end_of_nrf_csn:	
 12214                           
 12215                           	psect	text55
 12216  10FC                     __ptext55:	
 12217 ;; *************** function _i2c_init *****************
 12218 ;; Defined at:
 12219 ;;		line 8 in file "i2cbysk.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;		None
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;		None
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  1    wreg      void 
 12226 ;; Registers used:
 12227 ;;		wreg, status,2
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12237 ;;Total ram usage:        0 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; This function calls:
 12240 ;;		Nothing
 12241 ;; This function is called by:
 12242 ;;		_main
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           
 12247                           ;psect for function _i2c_init
 12248  10FC                     _i2c_init:	
 12249                           
 12250                           ;i2cbysk.c: 10: ANSELB = 0x50;
 12251                           
 12252                           ;incstack = 0
 12253                           ; Regs used in _i2c_init: [wreg+status,2]
 12254  10FC  3050               	movlw	80
 12255  10FD  0023               	movlb	3	; select bank3
 12256  10FE  008D               	movwf	13	;volatile
 12257                           
 12258                           ;i2cbysk.c: 11: WPUB = 0x00;
 12259  10FF  0024               	movlb	4	; select bank4
 12260  1100  018D               	clrf	13	;volatile
 12261                           
 12262                           ;i2cbysk.c: 13: LATBbits.LATB5 = 0;
 12263  1101  0022               	movlb	2	; select bank2
 12264  1102  128D               	bcf	13,5	;volatile
 12265                           
 12266                           ;i2cbysk.c: 14: LATBbits.LATB7 = 0;
 12267  1103  138D               	bcf	13,7	;volatile
 12268                           
 12269                           ;i2cbysk.c: 15: TRISBbits.TRISB5 = 1;
 12270  1104  0021               	movlb	1	; select bank1
 12271  1105  168D               	bsf	13,5	;volatile
 12272                           
 12273                           ;i2cbysk.c: 16: TRISBbits.TRISB7 = 1;
 12274  1106  178D               	bsf	13,7	;volatile
 12275                           
 12276                           ;i2cbysk.c: 20: SSP2STAT = 0x80;
 12277  1107  3080               	movlw	128
 12278  1108  0024               	movlb	4	; select bank4
 12279  1109  009C               	movwf	28	;volatile
 12280                           
 12281                           ;i2cbysk.c: 22: SSP2CON1 = 0x28;
 12282  110A  3028               	movlw	40
 12283  110B  009D               	movwf	29	;volatile
 12284                           
 12285                           ;i2cbysk.c: 24: SSP2CON3 = 0x08;
 12286  110C  3008               	movlw	8
 12287  110D  009F               	movwf	31	;volatile
 12288                           
 12289                           ;i2cbysk.c: 26: SSP2ADD = 0x4F;
 12290  110E  304F               	movlw	79
 12291  110F  009A               	movwf	26	;volatile
 12292                           
 12293                           ;i2cbysk.c: 30: PIR4bits.SSP2IF = 0;
 12294  1110  0020               	movlb	0	; select bank0
 12295  1111  1014               	bcf	20,0	;volatile
 12296  1112  0008               	return
 12297  1113                     __end_of_i2c_init:	
 12298                           
 12299                           	psect	text56
 12300  1FD4                     __ptext56:	
 12301 ;; *************** function _Timer1_Setup *****************
 12302 ;; Defined at:
 12303 ;;		line 94 in file "deviceconfig.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		wreg, status,2, status,0
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12321 ;;Total ram usage:        0 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_main
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           
 12331                           ;psect for function _Timer1_Setup
 12332  1FD4                     _Timer1_Setup:	
 12333                           
 12334                           ;deviceconfig.c: 96: T1CONbits.TMR1CS = 0b01;
 12335                           
 12336                           ;incstack = 0
 12337                           ; Regs used in _Timer1_Setup: [wreg+status,2+status,0]
 12338  1FD4  0020               	movlb	0	; select bank0
 12339  1FD5  0818               	movf	24,w	;volatile
 12340  1FD6  393F               	andlw	-193
 12341  1FD7  3840               	iorlw	64
 12342  1FD8  0098               	movwf	24	;volatile
 12343                           
 12344                           ;deviceconfig.c: 97: T1CONbits.TMR1ON = 1;
 12345  1FD9  1418               	bsf	24,0	;volatile
 12346                           
 12347                           ;deviceconfig.c: 100: INTCONbits.PEIE = 1;
 12348  1FDA  170B               	bsf	11,6	;volatile
 12349                           
 12350                           ;deviceconfig.c: 101: PIE1bits.TMR1IE = 1;
 12351  1FDB  0021               	movlb	1	; select bank1
 12352  1FDC  1411               	bsf	17,0	;volatile
 12353  1FDD  0008               	return
 12354  1FDE                     __end_of_Timer1_Setup:	
 12355                           
 12356                           	psect	text57
 12357  11EE                     __ptext57:	
 12358 ;; *************** function _StatusLED *****************
 12359 ;; Defined at:
 12360 ;;		line 112 in file "deviceconfig.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  status          1    wreg     unsigned char 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  status          1    0[COMMON] unsigned char 
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;Total ram usage:        1 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_main
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           
 12388                           ;psect for function _StatusLED
 12389  11EE                     _StatusLED:	
 12390                           
 12391                           ;incstack = 0
 12392                           ; Regs used in _StatusLED: [wreg-fsr0h+status,2+status,0]
 12393                           ;StatusLED@status stored from wreg
 12394  11EE  00F0               	movwf	StatusLED@status
 12395                           
 12396                           ;deviceconfig.c: 114: switch(status) {
 12397  11EF  2A09               	goto	l4946
 12398  11F0                     l578:	
 12399                           ;deviceconfig.c: 115: case 0:
 12400                           
 12401                           
 12402                           ;deviceconfig.c: 116: LATCbits.LATC2 = 0;
 12403  11F0  0022               	movlb	2	; select bank2
 12404  11F1  110E               	bcf	14,2	;volatile
 12405                           
 12406                           ;deviceconfig.c: 117: LATCbits.LATC0 = 0;
 12407  11F2  100E               	bcf	14,0	;volatile
 12408                           
 12409                           ;deviceconfig.c: 118: LATCbits.LATC1 = 0;
 12410  11F3  108E               	bcf	14,1	;volatile
 12411                           
 12412                           ;deviceconfig.c: 119: break;
 12413  11F4  0008               	return
 12414  11F5                     l580:	
 12415                           ;deviceconfig.c: 121: case 1:
 12416                           
 12417                           
 12418                           ;deviceconfig.c: 122: LATCbits.LATC2 = 0;
 12419  11F5  0022               	movlb	2	; select bank2
 12420  11F6  110E               	bcf	14,2	;volatile
 12421                           
 12422                           ;deviceconfig.c: 123: LATCbits.LATC0 = 1;
 12423  11F7  140E               	bsf	14,0	;volatile
 12424                           
 12425                           ;deviceconfig.c: 124: LATCbits.LATC1 = 0;
 12426  11F8  108E               	bcf	14,1	;volatile
 12427                           
 12428                           ;deviceconfig.c: 125: break;
 12429  11F9  0008               	return
 12430  11FA                     l581:	
 12431                           ;deviceconfig.c: 127: case 2:
 12432                           
 12433                           
 12434                           ;deviceconfig.c: 128: LATCbits.LATC2 = 0;
 12435  11FA  0022               	movlb	2	; select bank2
 12436  11FB  110E               	bcf	14,2	;volatile
 12437                           
 12438                           ;deviceconfig.c: 129: LATCbits.LATC0 = 1;
 12439  11FC  140E               	bsf	14,0	;volatile
 12440                           
 12441                           ;deviceconfig.c: 130: LATCbits.LATC1 = 1;
 12442  11FD  148E               	bsf	14,1	;volatile
 12443                           
 12444                           ;deviceconfig.c: 131: break;
 12445  11FE  0008               	return
 12446  11FF                     l582:	
 12447                           ;deviceconfig.c: 133: case 3:
 12448                           
 12449                           
 12450                           ;deviceconfig.c: 134: LATCbits.LATC2 = 1;
 12451  11FF  0022               	movlb	2	; select bank2
 12452  1200  150E               	bsf	14,2	;volatile
 12453                           
 12454                           ;deviceconfig.c: 135: LATCbits.LATC0 = 1;
 12455  1201  140E               	bsf	14,0	;volatile
 12456                           
 12457                           ;deviceconfig.c: 136: LATCbits.LATC1 = 0;
 12458  1202  108E               	bcf	14,1	;volatile
 12459                           
 12460                           ;deviceconfig.c: 137: break;
 12461  1203  0008               	return
 12462  1204                     l583:	
 12463                           ;deviceconfig.c: 139: case 4:
 12464                           
 12465                           
 12466                           ;deviceconfig.c: 140: LATCbits.LATC2 = 1;
 12467  1204  0022               	movlb	2	; select bank2
 12468  1205  150E               	bsf	14,2	;volatile
 12469                           
 12470                           ;deviceconfig.c: 141: LATCbits.LATC0 = 1;
 12471  1206  140E               	bsf	14,0	;volatile
 12472                           
 12473                           ;deviceconfig.c: 142: LATCbits.LATC1 = 1;
 12474  1207  148E               	bsf	14,1	;volatile
 12475                           
 12476                           ;deviceconfig.c: 147: }
 12477                           
 12478                           ;deviceconfig.c: 146: break;
 12479                           
 12480                           ;deviceconfig.c: 145: default:
 12481                           
 12482                           ;deviceconfig.c: 143: break;
 12483  1208  0008               	return
 12484  1209                     l4946:	
 12485  1209  0870               	movf	StatusLED@status,w
 12486                           
 12487                           ; Switch size 1, requested type "space"
 12488                           ; Number of cases is 5, Range of values is 0 to 4
 12489                           ; switch strategies available:
 12490                           ; Name         Instructions Cycles
 12491                           ; direct_byte           16     6 (fixed)
 12492                           ; simple_byte           16     9 (average)
 12493                           ; jumptable            260     6 (fixed)
 12494                           ;	Chosen strategy is direct_byte
 12495  120A  0084               	movwf	4
 12496  120B  3005               	movlw	5
 12497  120C  0204               	subwf	4,w
 12498  120D  1803               	skipnc
 12499  120E  0008               	return
 12500  120F  3198               	movlp	high S5398
 12501  1210  3504               	lslf	4,w
 12502  1211  3E00               	addlw	low S5398
 12503  1212  0082               	movwf	2
 12504  1213  0008               	return
 12505  1214                     __end_of_StatusLED:	
 12506                           
 12507                           	psect	swtext1
 12508  1800                     __pswtext1:	
 12509  1800                     S5398:	
 12510  1800  3191  29F0         	ljmp	l578
 12511  1802  3191  29F5         	ljmp	l580
 12512  1804  3191  29FA         	ljmp	l581
 12513  1806  3191  29FF         	ljmp	l582
 12514  1808  3192  2A04         	ljmp	l583
 12515                           
 12516                           	psect	text58
 12517  123A                     __ptext58:	
 12518 ;; *************** function _Device_SetUp *****************
 12519 ;; Defined at:
 12520 ;;		line 3 in file "deviceconfig.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;		None
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;		None
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      void 
 12527 ;; Registers used:
 12528 ;;		wreg, status,2, status,0
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;Total ram usage:        0 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_main
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           
 12548                           ;psect for function _Device_SetUp
 12549  123A                     _Device_SetUp:	
 12550                           
 12551                           ;deviceconfig.c: 7: OSCCONbits.SPLLEN = 1;
 12552                           
 12553                           ;incstack = 0
 12554                           ; Regs used in _Device_SetUp: [wreg+status,2+status,0]
 12555  123A  0021               	movlb	1	; select bank1
 12556  123B  1799               	bsf	25,7	;volatile
 12557                           
 12558                           ;deviceconfig.c: 8: OSCCONbits.IRCF = 0b1110;
 12559  123C  0819               	movf	25,w	;volatile
 12560  123D  3987               	andlw	-121
 12561  123E  3870               	iorlw	112
 12562  123F  0099               	movwf	25	;volatile
 12563                           
 12564                           ;deviceconfig.c: 9: OSCCONbits.SCS = 0b00;
 12565  1240  30FC               	movlw	-4
 12566  1241  0599               	andwf	25,f	;volatile
 12567  1242                     l547:	
 12568                           ;deviceconfig.c: 12: while(!OSCSTATbits.HFIOFR);
 12569                           
 12570  1242  1E1A               	btfss	26,4	;volatile
 12571  1243  2A42               	goto	l547
 12572  1244                     l550:	
 12573                           ;deviceconfig.c: 13: while(!OSCSTATbits.HFIOFS);
 12574                           
 12575  1244  1C1A               	btfss	26,0	;volatile
 12576  1245  2A44               	goto	l550
 12577  1246                     l553:	
 12578                           ;deviceconfig.c: 14: while(!OSCSTATbits.PLLR);
 12579                           
 12580  1246  1F1A               	btfss	26,6	;volatile
 12581  1247  2A46               	goto	l553
 12582                           
 12583                           ;deviceconfig.c: 17: ANSELCbits.ANSC1 = 0;
 12584  1248  0023               	movlb	3	; select bank3
 12585  1249  108E               	bcf	14,1	;volatile
 12586                           
 12587                           ;deviceconfig.c: 18: ANSELCbits.ANSC0 = 0;
 12588  124A  100E               	bcf	14,0	;volatile
 12589                           
 12590                           ;deviceconfig.c: 19: ANSELCbits.ANSC2 = 0;
 12591  124B  110E               	bcf	14,2	;volatile
 12592                           
 12593                           ;deviceconfig.c: 21: TRISCbits.TRISC2 = 0;
 12594  124C  0021               	movlb	1	; select bank1
 12595  124D  110E               	bcf	14,2	;volatile
 12596                           
 12597                           ;deviceconfig.c: 22: TRISCbits.TRISC0 = 0;
 12598  124E  100E               	bcf	14,0	;volatile
 12599                           
 12600                           ;deviceconfig.c: 23: TRISCbits.TRISC1 = 0;
 12601  124F  108E               	bcf	14,1	;volatile
 12602                           
 12603                           ;deviceconfig.c: 25: LATCbits.LATC2 = LATCbits.LATC0 = LATCbits.LATC1 = 1;
 12604  1250  0022               	movlb	2	; select bank2
 12605  1251  148E               	bsf	14,1	;volatile
 12606  1252  1C8E               	btfss	14,1	;volatile
 12607  1253  2A57               	goto	u5910
 12608  1254  0022               	movlb	2	; select bank2
 12609  1255  140E               	bsf	14,0	;volatile
 12610  1256  2A59               	goto	u5924
 12611  1257                     u5910:	
 12612  1257  0022               	movlb	2	; select bank2
 12613  1258  100E               	bcf	14,0	;volatile
 12614  1259                     u5924:	
 12615  1259  1C0E               	btfss	14,0	;volatile
 12616  125A  2A5E               	goto	u5920
 12617  125B  0022               	movlb	2	; select bank2
 12618  125C  150E               	bsf	14,2	;volatile
 12619  125D  0008               	return
 12620  125E                     u5920:	
 12621  125E  0022               	movlb	2	; select bank2
 12622  125F  110E               	bcf	14,2	;volatile
 12623  1260  0008               	return
 12624  1261                     __end_of_Device_SetUp:	
 12625                           
 12626                           	psect	text59
 12627  133B                     __ptext59:	
 12628 ;; *************** function _Device_Initialize *****************
 12629 ;; Defined at:
 12630 ;;		line 151 in file "deviceconfig.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;		None
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1    wreg      void 
 12637 ;; Registers used:
 12638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;Total ram usage:        3 bytes
 12649 ;; Hardware stack levels used:    1
 12650 ;; Hardware stack levels required when called:    2
 12651 ;; This function calls:
 12652 ;;		_UARTSetup
 12653 ;;		_UART_Debug
 12654 ;;		_putch
 12655 ;; This function is called by:
 12656 ;;		_main
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           
 12661                           ;psect for function _Device_Initialize
 12662  133B                     _Device_Initialize:	
 12663                           
 12664                           ;deviceconfig.c: 153: UARTSetup(57600);
 12665                           
 12666                           ;incstack = 0
 12667                           ; Regs used in _Device_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12668  133B  3000               	movlw	0
 12669  133C  0020               	movlb	0	; select bank0
 12670  133D  00A6               	movwf	UARTSetup@baudrate
 12671  133E  30E1               	movlw	225
 12672  133F  00A7               	movwf	UARTSetup@baudrate+1
 12673  1340  3195  25BC  3193   	fcall	_UARTSetup
 12674                           
 12675                           ;deviceconfig.c: 154: _delay((unsigned long)((100)*(32000000/4000.0)));
 12676  1343  3005               	movlw	5
 12677  1344  00FD               	movwf	??_Device_Initialize+2
 12678  1345  300F               	movlw	15
 12679  1346  00FC               	movwf	??_Device_Initialize+1
 12680  1347  30F4               	movlw	244
 12681  1348  00FB               	movwf	??_Device_Initialize
 12682  1349                     u6487:	
 12683  1349  0BFB               	decfsz	??_Device_Initialize,f
 12684  134A  2B49               	goto	u6487
 12685  134B  0BFC               	decfsz	??_Device_Initialize+1,f
 12686  134C  2B49               	goto	u6487
 12687  134D  0BFD               	decfsz	??_Device_Initialize+2,f
 12688  134E  2B49               	goto	u6487
 12689                           
 12690                           ;deviceconfig.c: 155: putch(27);
 12691  134F  301B               	movlw	27
 12692  1350  00FB               	movwf	??_Device_Initialize
 12693  1351  087B               	movf	??_Device_Initialize,w
 12694  1352  00F0               	movwf	putch@data
 12695  1353  319F  27B4  3193   	fcall	_putch
 12696                           
 12697                           ;deviceconfig.c: 156: UART_Debug("UART IS ON\n");
 12698  1356  3049               	movlw	low (STR_43| (0+32768))
 12699  1357  00F1               	movwf	UART_Debug@str
 12700  1358  308A               	movlw	high (STR_43| (0+32768))
 12701  1359  00F2               	movwf	UART_Debug@str+1
 12702  135A  3190  20E5  3193   	fcall	_UART_Debug
 12703                           
 12704                           ;deviceconfig.c: 157: _delay((unsigned long)((500)*(32000000/4000.0)));
 12705  135D  3015               	movlw	21
 12706  135E  00FD               	movwf	??_Device_Initialize+2
 12707  135F  304B               	movlw	75
 12708  1360  00FC               	movwf	??_Device_Initialize+1
 12709  1361  30D1               	movlw	209
 12710  1362  00FB               	movwf	??_Device_Initialize
 12711  1363                     u6497:	
 12712  1363  0BFB               	decfsz	??_Device_Initialize,f
 12713  1364  2B63               	goto	u6497
 12714  1365  0BFC               	decfsz	??_Device_Initialize+1,f
 12715  1366  2B63               	goto	u6497
 12716  1367  0BFD               	decfsz	??_Device_Initialize+2,f
 12717  1368  2B63               	goto	u6497
 12718  1369  0000               	nop
 12719  136A  0008               	return
 12720  136B                     __end_of_Device_Initialize:	
 12721                           
 12722                           	psect	text60
 12723  10E5                     __ptext60:	
 12724 ;; *************** function _UART_Debug *****************
 12725 ;; Defined at:
 12726 ;;		line 58 in file "uarttools.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  str             2    1[COMMON] PTR const unsigned char 
 12729 ;;		 -> STR_43(12), STR_42(14), STR_41(18), STR_37(19), 
 12730 ;;		 -> STR_36(24), STR_35(15), STR_34(19), STR_33(22), 
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;		None
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  1    wreg      void 
 12735 ;; Registers used:
 12736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;Total ram usage:        3 bytes
 12747 ;; Hardware stack levels used:    1
 12748 ;; Hardware stack levels required when called:    1
 12749 ;; This function calls:
 12750 ;;		_putch
 12751 ;; This function is called by:
 12752 ;;		_main
 12753 ;;		_Device_Initialize
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757                           
 12758                           ;psect for function _UART_Debug
 12759  10E5                     _UART_Debug:	
 12760  10E5                     l4226:	
 12761                           ;uarttools.c: 60: while(*str) {
 12762                           
 12763                           ;incstack = 0
 12764                           ; Regs used in _UART_Debug: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12765                           
 12766  10E5  0871               	movf	UART_Debug@str,w
 12767  10E6  0084               	movwf	4
 12768  10E7  0872               	movf	UART_Debug@str+1,w
 12769  10E8  0085               	movwf	5
 12770  10E9  0012               	moviw fsr0++
 12771  10EA  1903               	btfsc	3,2
 12772  10EB  0008               	return
 12773                           
 12774                           ;uarttools.c: 61: putch(*str);
 12775  10EC  0871               	movf	UART_Debug@str,w
 12776  10ED  0084               	movwf	4
 12777  10EE  0872               	movf	UART_Debug@str+1,w
 12778  10EF  0085               	movwf	5
 12779  10F0  0800               	movf	0,w	;code access
 12780  10F1  00F3               	movwf	??_UART_Debug
 12781  10F2  0873               	movf	??_UART_Debug,w
 12782  10F3  00F0               	movwf	putch@data
 12783  10F4  319F  27B4  3190   	fcall	_putch
 12784                           
 12785                           ;uarttools.c: 62: *str++;
 12786  10F7  3001               	movlw	1
 12787  10F8  07F1               	addwf	UART_Debug@str,f
 12788  10F9  3000               	movlw	0
 12789  10FA  3DF2               	addwfc	UART_Debug@str+1,f
 12790  10FB  28E5               	goto	l4226
 12791  10FC                     __end_of_UART_Debug:	
 12792                           
 12793                           	psect	text61
 12794  1FB4                     __ptext61:	
 12795 ;; *************** function _putch *****************
 12796 ;; Defined at:
 12797 ;;		line 106 in file "deviceconfig.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  data            1    0[COMMON] unsigned char 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;		None
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1    wreg      void 
 12804 ;; Registers used:
 12805 ;;		wreg
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12811 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;Total ram usage:        1 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; This function calls:
 12818 ;;		Nothing
 12819 ;; This function is called by:
 12820 ;;		_Device_Initialize
 12821 ;;		_UART_Debug
 12822 ;;		_printf
 12823 ;;		_UART_SendDouble
 12824 ;;		_UART_SendInteger
 12825 ;;		_UART_NewLine
 12826 ;;		_UART_Write
 12827 ;;		_uart_puts
 12828 ;;		_UART_SendHex8
 12829 ;;		_UART_SendHex16
 12830 ;;		_UART_SendHex32
 12831 ;;		__doprnt
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           
 12836                           ;psect for function _putch
 12837  1FB4                     _putch:	
 12838  1FB4                     l571:	
 12839                           ;deviceconfig.c: 107: while(TXSTAbits.TRMT != 1);
 12840                           
 12841                           ;incstack = 0
 12842                           ; Regs used in _putch: [wreg]
 12843                           
 12844  1FB4  0023               	movlb	3	; select bank3
 12845  1FB5  1C9E               	btfss	30,1	;volatile
 12846  1FB6  2FB4               	goto	l571
 12847                           
 12848                           ;deviceconfig.c: 108: TXREG = data;
 12849  1FB7  0870               	movf	putch@data,w
 12850  1FB8  009A               	movwf	26	;volatile
 12851  1FB9  0008               	return
 12852  1FBA                     __end_of_putch:	
 12853                           
 12854                           	psect	text62
 12855  15BC                     __ptext62:	
 12856 ;; *************** function _UARTSetup *****************
 12857 ;; Defined at:
 12858 ;;		line 46 in file "deviceconfig.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;  baudrate        2    6[BANK0 ] unsigned int 
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;  baud            2   12[BANK0 ] unsigned int 
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1    wreg      void 
 12865 ;; Registers used:
 12866 ;;		wreg, status,2, status,0, pclath, cstack
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;Total ram usage:       10 bytes
 12877 ;; Hardware stack levels used:    1
 12878 ;; Hardware stack levels required when called:    1
 12879 ;; This function calls:
 12880 ;;		___aldiv
 12881 ;; This function is called by:
 12882 ;;		_Device_Initialize
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886                           
 12887                           ;psect for function _UARTSetup
 12888  15BC                     _UARTSetup:	
 12889                           
 12890                           ;deviceconfig.c: 53: APFCON0bits.RXDTSEL = 1;
 12891                           
 12892                           ;incstack = 0
 12893                           ; Regs used in _UARTSetup: [wreg+status,2+status,0+pclath+cstack]
 12894  15BC  0022               	movlb	2	; select bank2
 12895  15BD  179D               	bsf	29,7	;volatile
 12896                           
 12897                           ;deviceconfig.c: 54: APFCON0bits.TXCKSEL = 1;
 12898  15BE  151D               	bsf	29,2	;volatile
 12899                           
 12900                           ;deviceconfig.c: 57: TRISCbits.TRISC5 = 1;
 12901  15BF  0021               	movlb	1	; select bank1
 12902  15C0  168E               	bsf	14,5	;volatile
 12903                           
 12904                           ;deviceconfig.c: 58: TRISCbits.TRISC4 = 0;
 12905  15C1  120E               	bcf	14,4	;volatile
 12906                           
 12907                           ;deviceconfig.c: 59: LATCbits.LATC4 = 1;
 12908  15C2  0022               	movlb	2	; select bank2
 12909  15C3  160E               	bsf	14,4	;volatile
 12910                           
 12911                           ;deviceconfig.c: 62: BAUDCONbits.BRG16 = 1;
 12912  15C4  0023               	movlb	3	; select bank3
 12913  15C5  159F               	bsf	31,3	;volatile
 12914                           
 12915                           ;deviceconfig.c: 63: uint16_t baud = (( (32000000 / baudrate) / 4 ) - 1);
 12916  15C6  0020               	movlb	0	; select bank0
 12917  15C7  0826               	movf	UARTSetup@baudrate,w
 12918  15C8  00F0               	movwf	___aldiv@divisor
 12919  15C9  0827               	movf	UARTSetup@baudrate+1,w
 12920  15CA  00F1               	movwf	___aldiv@divisor+1
 12921  15CB  01F2               	clrf	___aldiv@divisor+2
 12922  15CC  01F3               	clrf	___aldiv@divisor+3
 12923  15CD  3001               	movlw	1
 12924  15CE  00F7               	movwf	___aldiv@dividend+3
 12925  15CF  30E8               	movlw	232
 12926  15D0  00F6               	movwf	___aldiv@dividend+2
 12927  15D1  3048               	movlw	72
 12928  15D2  00F5               	movwf	___aldiv@dividend+1
 12929  15D3  3000               	movlw	0
 12930  15D4  00F4               	movwf	___aldiv@dividend
 12931  15D5  3180  2004  3195   	fcall	___aldiv
 12932  15D8  0873               	movf	?___aldiv+3,w
 12933  15D9  0020               	movlb	0	; select bank0
 12934  15DA  00AB               	movwf	_UARTSetup$2069+3
 12935  15DB  0872               	movf	?___aldiv+2,w
 12936  15DC  00AA               	movwf	_UARTSetup$2069+2
 12937  15DD  0871               	movf	?___aldiv+1,w
 12938  15DE  00A9               	movwf	_UARTSetup$2069+1
 12939  15DF  0870               	movf	?___aldiv,w
 12940  15E0  00A8               	movwf	_UARTSetup$2069
 12941                           
 12942                           ;deviceconfig.c: 63: uint16_t baud = (( (32000000 / baudrate) / 4 ) - 1);
 12943  15E1  3000               	movlw	0
 12944  15E2  00F3               	movwf	___aldiv@divisor+3
 12945  15E3  3000               	movlw	0
 12946  15E4  00F2               	movwf	___aldiv@divisor+2
 12947  15E5  3000               	movlw	0
 12948  15E6  00F1               	movwf	___aldiv@divisor+1
 12949  15E7  3004               	movlw	4
 12950  15E8  00F0               	movwf	___aldiv@divisor
 12951  15E9  082B               	movf	_UARTSetup$2069+3,w
 12952  15EA  00F7               	movwf	___aldiv@dividend+3
 12953  15EB  082A               	movf	_UARTSetup$2069+2,w
 12954  15EC  00F6               	movwf	___aldiv@dividend+2
 12955  15ED  0829               	movf	_UARTSetup$2069+1,w
 12956  15EE  00F5               	movwf	___aldiv@dividend+1
 12957  15EF  0828               	movf	_UARTSetup$2069,w
 12958  15F0  00F4               	movwf	___aldiv@dividend
 12959  15F1  3180  2004  3195   	fcall	___aldiv
 12960  15F4  0870               	movf	?___aldiv,w
 12961  15F5  3EFF               	addlw	255
 12962  15F6  0020               	movlb	0	; select bank0
 12963  15F7  00AC               	movwf	UARTSetup@baud
 12964  15F8  30FF               	movlw	255
 12965  15F9  3D71               	addwfc	?___aldiv+1,w
 12966  15FA  00AD               	movwf	UARTSetup@baud+1
 12967                           
 12968                           ;deviceconfig.c: 64: SPBRGL = (baud & 0xFF);
 12969  15FB  082C               	movf	UARTSetup@baud,w
 12970  15FC  0023               	movlb	3	; select bank3
 12971  15FD  009B               	movwf	27	;volatile
 12972                           
 12973                           ;deviceconfig.c: 65: SPBRGH = (baud >> 8);
 12974  15FE  0020               	movlb	0	; select bank0
 12975  15FF  082D               	movf	UARTSetup@baud+1,w
 12976  1600  0023               	movlb	3	; select bank3
 12977  1601  009C               	movwf	28	;volatile
 12978                           
 12979                           ;deviceconfig.c: 68: TXSTAbits.BRGH = 1;
 12980  1602  151E               	bsf	30,2	;volatile
 12981                           
 12982                           ;deviceconfig.c: 69: TXSTAbits.TXEN = 1;
 12983  1603  169E               	bsf	30,5	;volatile
 12984                           
 12985                           ;deviceconfig.c: 70: RCSTAbits.CREN = 1;
 12986  1604  161D               	bsf	29,4	;volatile
 12987                           
 12988                           ;deviceconfig.c: 71: RCSTAbits.SPEN = 1;
 12989  1605  179D               	bsf	29,7	;volatile
 12990                           
 12991                           ;deviceconfig.c: 73: _delay((unsigned long)((10)*(32000000/4000.0)));
 12992  1606  3068               	movlw	104
 12993  1607  00FA               	movwf	??_UARTSetup+1
 12994  1608  30E4               	movlw	228
 12995  1609  00F9               	movwf	??_UARTSetup
 12996  160A                     u6507:	
 12997  160A  0BF9               	decfsz	??_UARTSetup,f
 12998  160B  2E0A               	goto	u6507
 12999  160C  0BFA               	decfsz	??_UARTSetup+1,f
 13000  160D  2E0A               	goto	u6507
 13001  160E  0000               	nop
 13002  160F  0008               	return
 13003  1610                     __end_of_UARTSetup:	
 13004                           
 13005                           	psect	text63
 13006  0004                     __ptext63:	
 13007 ;; *************** function ___aldiv *****************
 13008 ;; Defined at:
 13009 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 13010 ;; Parameters:    Size  Location     Type
 13011 ;;  divisor         4    0[COMMON] long 
 13012 ;;  dividend        4    4[COMMON] long 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;  quotient        4    2[BANK0 ] long 
 13015 ;;  sign            1    1[BANK0 ] unsigned char 
 13016 ;;  counter         1    0[BANK0 ] unsigned char 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  4    0[COMMON] long 
 13019 ;; Registers used:
 13020 ;;		wreg, status,2, status,0
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;Total ram usage:       15 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; This function calls:
 13033 ;;		Nothing
 13034 ;; This function is called by:
 13035 ;;		_UARTSetup
 13036 ;; This function uses a non-reentrant model
 13037 ;;
 13038                           
 13039                           
 13040                           ;psect for function ___aldiv
 13041  0004                     ___aldiv:	
 13042                           
 13043                           ;incstack = 0
 13044                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 13045  0004  0020               	movlb	0	; select bank0
 13046  0005  01A1               	clrf	___aldiv@sign
 13047  0006  1FF3               	btfss	___aldiv@divisor+3,7
 13048  0007  2815               	goto	l1304
 13049  0008  09F0               	comf	___aldiv@divisor,f
 13050  0009  09F1               	comf	___aldiv@divisor+1,f
 13051  000A  09F2               	comf	___aldiv@divisor+2,f
 13052  000B  09F3               	comf	___aldiv@divisor+3,f
 13053  000C  0AF0               	incf	___aldiv@divisor,f
 13054  000D  1903               	skipnz
 13055  000E  0AF1               	incf	___aldiv@divisor+1,f
 13056  000F  1903               	skipnz
 13057  0010  0AF2               	incf	___aldiv@divisor+2,f
 13058  0011  1903               	skipnz
 13059  0012  0AF3               	incf	___aldiv@divisor+3,f
 13060  0013  01A1               	clrf	___aldiv@sign
 13061  0014  0AA1               	incf	___aldiv@sign,f
 13062  0015                     l1304:	
 13063  0015  1FF7               	btfss	___aldiv@dividend+3,7
 13064  0016  2826               	goto	l3770
 13065  0017  09F4               	comf	___aldiv@dividend,f
 13066  0018  09F5               	comf	___aldiv@dividend+1,f
 13067  0019  09F6               	comf	___aldiv@dividend+2,f
 13068  001A  09F7               	comf	___aldiv@dividend+3,f
 13069  001B  0AF4               	incf	___aldiv@dividend,f
 13070  001C  1903               	skipnz
 13071  001D  0AF5               	incf	___aldiv@dividend+1,f
 13072  001E  1903               	skipnz
 13073  001F  0AF6               	incf	___aldiv@dividend+2,f
 13074  0020  1903               	skipnz
 13075  0021  0AF7               	incf	___aldiv@dividend+3,f
 13076  0022  3001               	movlw	1
 13077  0023  00F8               	movwf	??___aldiv
 13078  0024  0878               	movf	??___aldiv,w
 13079  0025  06A1               	xorwf	___aldiv@sign,f
 13080  0026                     l3770:	
 13081  0026  3000               	movlw	0
 13082  0027  00A5               	movwf	___aldiv@quotient+3
 13083  0028  3000               	movlw	0
 13084  0029  00A4               	movwf	___aldiv@quotient+2
 13085  002A  3000               	movlw	0
 13086  002B  00A3               	movwf	___aldiv@quotient+1
 13087  002C  3000               	movlw	0
 13088  002D  00A2               	movwf	___aldiv@quotient
 13089  002E  0873               	movf	___aldiv@divisor+3,w
 13090  002F  0472               	iorwf	___aldiv@divisor+2,w
 13091  0030  0471               	iorwf	___aldiv@divisor+1,w
 13092  0031  0470               	iorwf	___aldiv@divisor,w
 13093  0032  1903               	skipnz
 13094  0033  286F               	goto	l3792
 13095  0034  01A0               	clrf	___aldiv@counter
 13096  0035  0AA0               	incf	___aldiv@counter,f
 13097  0036                     l3778:	
 13098  0036  1BF3               	btfsc	___aldiv@divisor+3,7
 13099  0037  2844               	goto	l3780
 13100  0038  3001               	movlw	1
 13101  0039                     u3875:	
 13102  0039  35F0               	lslf	___aldiv@divisor,f
 13103  003A  0DF1               	rlf	___aldiv@divisor+1,f
 13104  003B  0DF2               	rlf	___aldiv@divisor+2,f
 13105  003C  0DF3               	rlf	___aldiv@divisor+3,f
 13106  003D  0B89               	decfsz	9,f
 13107  003E  2839               	goto	u3875
 13108  003F  3001               	movlw	1
 13109  0040  00F8               	movwf	??___aldiv
 13110  0041  0878               	movf	??___aldiv,w
 13111  0042  07A0               	addwf	___aldiv@counter,f
 13112  0043  2836               	goto	l3778
 13113  0044                     l3780:	
 13114  0044  3001               	movlw	1
 13115  0045                     u3895:	
 13116  0045  35A2               	lslf	___aldiv@quotient,f
 13117  0046  0DA3               	rlf	___aldiv@quotient+1,f
 13118  0047  0DA4               	rlf	___aldiv@quotient+2,f
 13119  0048  0DA5               	rlf	___aldiv@quotient+3,f
 13120  0049  0B89               	decfsz	9,f
 13121  004A  2845               	goto	u3895
 13122  004B  0873               	movf	___aldiv@divisor+3,w
 13123  004C  0277               	subwf	___aldiv@dividend+3,w
 13124  004D  1D03               	skipz
 13125  004E  2859               	goto	u3905
 13126  004F  0872               	movf	___aldiv@divisor+2,w
 13127  0050  0276               	subwf	___aldiv@dividend+2,w
 13128  0051  1D03               	skipz
 13129  0052  2859               	goto	u3905
 13130  0053  0871               	movf	___aldiv@divisor+1,w
 13131  0054  0275               	subwf	___aldiv@dividend+1,w
 13132  0055  1D03               	skipz
 13133  0056  2859               	goto	u3905
 13134  0057  0870               	movf	___aldiv@divisor,w
 13135  0058  0274               	subwf	___aldiv@dividend,w
 13136  0059                     u3905:	
 13137  0059  1C03               	skipc
 13138  005A  2864               	goto	l3788
 13139  005B  0870               	movf	___aldiv@divisor,w
 13140  005C  02F4               	subwf	___aldiv@dividend,f
 13141  005D  0871               	movf	___aldiv@divisor+1,w
 13142  005E  3BF5               	subwfb	___aldiv@dividend+1,f
 13143  005F  0872               	movf	___aldiv@divisor+2,w
 13144  0060  3BF6               	subwfb	___aldiv@dividend+2,f
 13145  0061  0873               	movf	___aldiv@divisor+3,w
 13146  0062  3BF7               	subwfb	___aldiv@dividend+3,f
 13147  0063  1422               	bsf	___aldiv@quotient,0
 13148  0064                     l3788:	
 13149  0064  3001               	movlw	1
 13150  0065                     u3915:	
 13151  0065  36F3               	lsrf	___aldiv@divisor+3,f
 13152  0066  0CF2               	rrf	___aldiv@divisor+2,f
 13153  0067  0CF1               	rrf	___aldiv@divisor+1,f
 13154  0068  0CF0               	rrf	___aldiv@divisor,f
 13155  0069  0B89               	decfsz	9,f
 13156  006A  2865               	goto	u3915
 13157  006B  3001               	movlw	1
 13158  006C  02A0               	subwf	___aldiv@counter,f
 13159  006D  1D03               	btfss	3,2
 13160  006E  2844               	goto	l3780
 13161  006F                     l3792:	
 13162  006F  0821               	movf	___aldiv@sign,w
 13163  0070  1903               	btfsc	3,2
 13164  0071  287D               	goto	l3796
 13165  0072  09A2               	comf	___aldiv@quotient,f
 13166  0073  09A3               	comf	___aldiv@quotient+1,f
 13167  0074  09A4               	comf	___aldiv@quotient+2,f
 13168  0075  09A5               	comf	___aldiv@quotient+3,f
 13169  0076  0AA2               	incf	___aldiv@quotient,f
 13170  0077  1903               	skipnz
 13171  0078  0AA3               	incf	___aldiv@quotient+1,f
 13172  0079  1903               	skipnz
 13173  007A  0AA4               	incf	___aldiv@quotient+2,f
 13174  007B  1903               	skipnz
 13175  007C  0AA5               	incf	___aldiv@quotient+3,f
 13176  007D                     l3796:	
 13177  007D  0825               	movf	___aldiv@quotient+3,w
 13178  007E  00F3               	movwf	?___aldiv+3
 13179  007F  0824               	movf	___aldiv@quotient+2,w
 13180  0080  00F2               	movwf	?___aldiv+2
 13181  0081  0823               	movf	___aldiv@quotient+1,w
 13182  0082  00F1               	movwf	?___aldiv+1
 13183  0083  0822               	movf	___aldiv@quotient,w
 13184  0084  00F0               	movwf	?___aldiv
 13185  0085  0008               	return
 13186  0086                     __end_of___aldiv:	
 13187  007E                     btemp	set	126	;btemp
 13188  007E                     wtemp	set	126
 13189  007E                     wtemp0	set	126
 13190  0080                     wtemp1	set	128
 13191  0082                     wtemp2	set	130
 13192  0084                     wtemp3	set	132
 13193  0086                     wtemp4	set	134
 13194  0088                     wtemp5	set	136
 13195  007F                     wtemp6	set	127
 13196  007E                     ttemp	set	126
 13197  007E                     ttemp0	set	126
 13198  0081                     ttemp1	set	129
 13199  0084                     ttemp2	set	132
 13200  0087                     ttemp3	set	135
 13201  007F                     ttemp4	set	127
 13202  007E                     ltemp	set	126
 13203  007E                     ltemp0	set	126
 13204  0082                     ltemp1	set	130
 13205  0086                     ltemp2	set	134
 13206  0080                     ltemp3	set	128


Data Sizes:
    Strings     594
    Constant    168
    Data        10
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     20      50
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    nrf_write_payload@buf	PTR unsigned char  size(1) Largest target is 32
		 -> sendPayload(BANK2[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_39(CODE[24]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 32
		 -> sendPayload(BANK2[32]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), sendPayload(BANK2[32]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_40(CODE[19]), STR_38(CODE[20]), STR_32(CODE[10]), STR_31(CODE[9]), 
		 -> STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[16]), STR_27(CODE[8]), 
		 -> STR_26(CODE[7]), STR_25(CODE[9]), STR_24(CODE[17]), STR_23(CODE[8]), 
		 -> STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[14]), STR_9(CODE[3]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[8]), STR_5(CODE[3]), 
		 -> STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[42]), STR_1(CODE[79]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), sendPayload(BANK2[32]), 

    _doprnt$1473	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_52(CODE[17]), STR_51(CODE[17]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_50(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> NULL(NULL[0]), STR_19(CODE[14]), STR_18(CODE[7]), STR_17(CODE[9]), 
		 -> STR_16(CODE[6]), STR_15(CODE[10]), STR_14(CODE[6]), STR_13(CODE[11]), 
		 -> STR_12(CODE[8]), STR_11(CODE[13]), STR_10(CODE[13]), sendPayload(BANK2[32]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_40(CODE[19]), STR_39(CODE[24]), STR_38(CODE[20]), STR_32(CODE[10]), 
		 -> STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[16]), 
		 -> STR_27(CODE[8]), STR_26(CODE[7]), STR_25(CODE[9]), STR_24(CODE[17]), 
		 -> STR_23(CODE[8]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[14]), 
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[8]), 
		 -> STR_5(CODE[3]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[42]), 
		 -> STR_1(CODE[79]), 

    S1418__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1418__prbuf$ptr	PTR unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), sendPayload(BANK2[32]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), sendPayload(BANK2[32]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK0[3]), printf@pb(BANK0[3]), 

    UART_Debug@str	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_43(CODE[12]), STR_42(CODE[14]), STR_41(CODE[18]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[19]), STR_33(CODE[22]), 

    I2C1_ReadFrame@i2c1ReadPointer	PTR unsigned char  size(1) Largest target is 2
		 -> si7021_ReadTemperature@readData(BANK0[2]), si7021_ReadHumidity@readData(BANK0[2]), 

    nrf_openReadingPipe@address	PTR unsigned char  size(1) Largest target is 5
		 -> main@nRF_pipe_reading(BANK1[5]), 

    nrf_openWritingPipe@address	PTR unsigned char  size(1) Largest target is 5
		 -> main@nRF_pipe_writing(BANK1[5]), 

    nrf_whatHappened@rx_ready	PTR unsigned char  size(1) Largest target is 1
		 -> ack_payload_available(BANK1[1]), 

    nrf_whatHappened@tx_fail	PTR unsigned char  size(1) Largest target is 1
		 -> nrf_write@tx_fail(BANK0[1]), 

    nrf_whatHappened@tx_ok	PTR unsigned char  size(1) Largest target is 1
		 -> nrf_write@tx_ok(BANK0[1]), 

    nrf_read@buf	PTR void  size(1) Largest target is 32
		 -> receivePayload(BANK2[32]), 

    nrf_available@pipe_num	PTR unsigned char  size(1) Largest target is 5
		 -> main@nRF_pipe_reading(BANK1[5]), 

    nrf_startWrite@buf	PTR unsigned char  size(1) Largest target is 32
		 -> sendPayload(BANK2[32]), 

    nrf_write@buf	PTR unsigned char  size(1) Largest target is 32
		 -> sendPayload(BANK2[32]), 

    rf24_pa_dbm_e_str_P	const PTR const unsigned char [4] size(2) Largest target is 8
		 -> rf24_pa_dbm_e_str_3(CODE[8]), rf24_pa_dbm_e_str_2(CODE[7]), rf24_pa_dbm_e_str_1(CODE[7]), rf24_pa_dbm_e_str_0(CODE[7]), 

    rf24_crclength_e_str_P	const PTR const unsigned char [3] size(2) Largest target is 9
		 -> rf24_crclength_e_str_2(CODE[8]), rf24_crclength_e_str_1(CODE[7]), rf24_crclength_e_str_0(CODE[9]), 

    rf24_model_e_str_P	const PTR const unsigned char [2] size(2) Largest target is 10
		 -> rf24_model_e_str_1(CODE[10]), rf24_model_e_str_0(CODE[9]), 

    rf24_datarate_e_str_P	const PTR const unsigned char [3] size(2) Largest target is 8
		 -> rf24_datarate_e_str_2(CODE[8]), rf24_datarate_e_str_1(CODE[6]), rf24_datarate_e_str_0(CODE[6]), 

    nrf_read_payload@buf	PTR unsigned char  size(1) Largest target is 32
		 -> receivePayload(BANK2[32]), 

    nrf_write_register_len@buf	PTR const unsigned char  size(1) Largest target is 5
		 -> main@nRF_pipe_reading(BANK1[5]), main@nRF_pipe_writing(BANK1[5]), pipe0_reading_address(BANK1[5]), 

    nrf_read_register_len@buf	PTR unsigned char  size(1) Largest target is 5
		 -> nrf_write@observe_tx(BANK0[1]), nrf_print_address_register@buffer(COMMON[5]), 


Critical Paths under _main in COMMON

    _main->_Device_Initialize
    _main->_nrf_openWritingPipe
    _main->_nrf_setChannel
    _main->_nrf_setRetries
    _sb_readTemperature->___lwmod
    _si7021_ReadTemperature->___lwtoft
    _sb_readHumidity->___lwmod
    _si7021_ReadHumidity->___lwtoft
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _nrf_whatHappened->_nrf_write_register
    _nrf_startWrite->_nrf_write_payload
    _nrf_write_payload->_nrf_csn
    _nrf_read_register_len->_nrf_csn
    _nrf_powerDown->_nrf_write_register
    _nrf_getDynamicPayloadSize->_nrf_csn
    _nrf_stopListening->_nrf_flush_rx
    _nrf_stopListening->_nrf_flush_tx
    _nrf_startListening->_nrf_write_register
    _nrf_setRetries->_nrf_write_register
    _nrf_setAutoAck_all->_nrf_write_register
    _nrf_read->_nrf_read_payload
    _nrf_read_payload->_nrf_csn
    _nrf_powerUp->_nrf_write_register
    _nrf_openWritingPipe->_nrf_write_register
    _nrf_openReadingPipe->_nrf_write_register
    _nrf_write_register_len->_nrf_csn
    _nrf_enableDynamicPayloads->_nrf_write_register
    _nrf_toggle_features->_nrf_csn
    _nrf_begin->_nrf_setChannel
    _nrf_setPALevel->_nrf_write_register
    _nrf_setDataRate->_nrf_write_register
    _nrf_setChannel->_nrf_write_register
    _nrf_setCRCLength->_nrf_write_register
    _nrf_read_register->_nrf_csn
    _nrf_flush_tx->_nrf_csn
    _nrf_flush_rx->_nrf_csn
    _nrf_available->_nrf_write_register
    _nrf_write_register->_nrf_read_register
    _nrf_get_status->_nrf_csn
    _Device_Initialize->_UARTSetup
    _UART_Debug->_putch
    _UARTSetup->___aldiv

Critical Paths under _main in BANK0

    _main->_sb_readHumidity
    _main->_sb_readTemperature
    _sprintf->__doprnt
    _sb_readTemperature->___fttol
    _si7021_ReadTemperature->___ftadd
    _sb_readHumidity->___fttol
    _si7021_ReadHumidity->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    ___fttol->_si7021_ReadHumidity
    ___fttol->_si7021_ReadTemperature
    _printf->__doprnt
    _nrf_write->_nrf_startWrite
    _Device_Initialize->_UARTSetup
    _UARTSetup->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  198625
                                              0 BANK1     20    20      0
                  _Device_Initialize
                       _Device_SetUp
                          _StatusLED
                       _Timer1_Setup
                         _UART_Debug
                           _i2c_init
                      _nrf_available
                          _nrf_begin
          _nrf_enableDynamicPayloads
          _nrf_getDynamicPayloadSize
                _nrf_openReadingPipe
                _nrf_openWritingPipe
                        _nrf_powerUp
                           _nrf_read
                 _nrf_setAutoAck_all
                   _nrf_setCRCLength
                     _nrf_setChannel
                    _nrf_setDataRate
                     _nrf_setPALevel
                     _nrf_setRetries
                 _nrf_startListening
                  _nrf_stopListening
                          _nrf_write
                             _printf
                    _sb_readHumidity
                 _sb_readTemperature
                           _spi_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18     6     12   10955
                                             31 BANK0     18     6     12
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sb_readTemperature                                   6     6      0   18769
                                             74 BANK0      6     6      0
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
             _si7021_ReadTemperature
 ---------------------------------------------------------------------------------
 (2) _si7021_ReadTemperature                              15    12      3   11636
                                             45 BANK0     15    12      3
                     _I2C1_ReadFrame
                     _I2C1_WriteByte
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _sb_readHumidity                                      6     6      0   18769
                                             74 BANK0      6     6      0
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                _si7021_ReadHumidity
 ---------------------------------------------------------------------------------
 (2) _si7021_ReadHumidity                                 15    12      3   11636
                                             45 BANK0     15    12      3
                     _I2C1_ReadFrame
                     _I2C1_WriteByte
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2220
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2908
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2606
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3268
                                             32 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _I2C1_WriteByte                                       2     1      1     172
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C1_ReadFrame                                       4     2      2     346
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     380
                                             60 BANK0     14    10      4
                            ___ftmul (ARG)
                _si7021_ReadHumidity (ARG)
             _si7021_ReadTemperature (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              19     5     14   12341
                                             31 BANK0     19     5     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             35    32      3   10616
                                              0 BANK0     31    28      3
                   Absolute function *
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1823
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1954
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     156
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _nrf_write                                           15    14      1   22399
                                              3 BANK0     15    14      1
                       _nrf_flush_tx
          _nrf_getDynamicPayloadSize
                      _nrf_powerDown
              _nrf_read_register_len
                     _nrf_startWrite
                   _nrf_whatHappened
 ---------------------------------------------------------------------------------
 (2) _nrf_whatHappened                                     6     4      2    3858
                                              9 COMMON     4     2      2
                                              0 BANK0      2     2      0
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf_startWrite                                       3     2      1    7673
                                              0 BANK0      3     2      1
                             _nrf_ce
                  _nrf_read_register
                  _nrf_write_payload
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf_write_payload                                   12    11      1    1937
                                              2 COMMON    12    11      1
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (2) _nrf_read_register_len                                5     3      2    1990
                                              2 COMMON     5     3      2
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (2) _nrf_powerDown                                        1     1      0    5256
                                              9 COMMON     1     1      0
                  _nrf_read_register
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf_getDynamicPayloadSize                            2     2      0    1668
                                              2 COMMON     2     2      0
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (1) _nrf_stopListening                                    0     0      0    3644
                             _nrf_ce
                       _nrf_flush_rx
                       _nrf_flush_tx
 ---------------------------------------------------------------------------------
 (1) _nrf_startListening                                   2     2      0   11258
                                              9 COMMON     2     2      0
                             _nrf_ce
                       _nrf_flush_rx
                       _nrf_flush_tx
                  _nrf_read_register
                 _nrf_write_register
             _nrf_write_register_len
 ---------------------------------------------------------------------------------
 (1) _nrf_setRetries                                       5     4      1    3675
                                              9 COMMON     5     4      1
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_setAutoAck_all                                   2     2      0    3589
                                              9 COMMON     2     2      0
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_read                                             3     2      1    3778
                                              0 BANK0      3     2      1
                   _nrf_read_payload
                  _nrf_read_register
 ---------------------------------------------------------------------------------
 (2) _nrf_read_payload                                    12    11      1    1951
                                              2 COMMON    12    11      1
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (1) _nrf_powerUp                                          1     1      0    5256
                                              9 COMMON     1     1      0
                  _nrf_read_register
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_openWritingPipe                                  5     5      0    6023
                                              9 COMMON     5     5      0
                 _nrf_write_register
             _nrf_write_register_len
 ---------------------------------------------------------------------------------
 (1) _nrf_openReadingPipe                                  4     3      1    7986
                                              9 COMMON     4     3      1
                  _nrf_read_register
                 _nrf_write_register
             _nrf_write_register_len
 ---------------------------------------------------------------------------------
 (2) _nrf_write_register_len                               5     3      2    2358
                                              2 COMMON     5     3      2
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (1) _nrf_enableDynamicPayloads                            1     1      0    6900
                                              9 COMMON     1     1      0
                  _nrf_read_register
                _nrf_toggle_features
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf_toggle_features                                  0     0      0    1644
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (1) _nrf_begin                                            2     2      0   28560
                                              0 BANK0      2     2      0
                             _nrf_ce
                            _nrf_csn
                       _nrf_flush_rx
                       _nrf_flush_tx
                   _nrf_setCRCLength
                     _nrf_setChannel
                    _nrf_setDataRate
                     _nrf_setPALevel
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_setPALevel                                       3     3      0    5394
                                              9 COMMON     3     3      0
                  _nrf_read_register
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_setDataRate                                      4     4      0    5372
                                              9 COMMON     4     4      0
                  _nrf_read_register
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_setChannel                                       5     5      0    3635
                                              9 COMMON     5     5      0
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (1) _nrf_setCRCLength                                     3     3      0    5326
                                              9 COMMON     3     3      0
                  _nrf_read_register
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf_read_register                                    3     3      0    1689
                                              2 COMMON     3     3      0
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (2) _nrf_flush_tx                                         2     2      0    1651
                                              2 COMMON     2     2      0
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (2) _nrf_flush_rx                                         2     2      0    1651
                                              2 COMMON     2     2      0
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (3) _nrf_ce                                               2     0      2     342
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _nrf_available                                        4     4      0    5420
                                              9 COMMON     4     4      0
                     _nrf_get_status
                 _nrf_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf_write_register                                   4     3      1    3567
                                              5 COMMON     4     3      1
                            _nrf_csn
                  _nrf_read_register (ARG)
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (2) _nrf_get_status                                       2     2      0    1667
                                              2 COMMON     2     2      0
                            _nrf_csn
                     _spi_fast_shift
 ---------------------------------------------------------------------------------
 (4) _spi_fast_shift                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nrf_csn                                              2     0      2    1622
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StatusLED                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Device_SetUp                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Device_Initialize                                    3     3      0    5211
                                             11 COMMON     3     3      0
                          _UARTSetup
                         _UART_Debug
                              _putch
 ---------------------------------------------------------------------------------
 (1) _UART_Debug                                           3     1      2    2529
                                              1 COMMON     3     1      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1    1972
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _UARTSetup                                           10     8      2     710
                                              9 COMMON     2     2      0
                                              6 BANK0      8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     556
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Device_Initialize
     _UARTSetup
       ___aldiv
     _UART_Debug
       _putch
     _putch
   _Device_SetUp
   _StatusLED
   _Timer1_Setup
   _UART_Debug
     _putch
   _i2c_init
   _nrf_available
     _nrf_get_status
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_begin
     _nrf_ce
     _nrf_csn
     _nrf_flush_rx
       _nrf_csn
       _spi_fast_shift
     _nrf_flush_tx
       _nrf_csn
       _spi_fast_shift
     _nrf_setCRCLength
       _nrf_read_register
         _nrf_csn
         _spi_fast_shift
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
     _nrf_setChannel
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
     _nrf_setDataRate
       _nrf_read_register
         _nrf_csn
         _spi_fast_shift
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
     _nrf_setPALevel
       _nrf_read_register
         _nrf_csn
         _spi_fast_shift
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_enableDynamicPayloads
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_toggle_features
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_getDynamicPayloadSize
     _nrf_csn
     _spi_fast_shift
   _nrf_openReadingPipe
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
     _nrf_write_register_len
       _nrf_csn
       _spi_fast_shift
   _nrf_openWritingPipe
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
     _nrf_write_register_len
       _nrf_csn
       _spi_fast_shift
   _nrf_powerUp
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_read
     _nrf_read_payload
       _nrf_csn
       _spi_fast_shift
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
   _nrf_setAutoAck_all
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_setCRCLength
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_setChannel
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_setDataRate
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_setPALevel
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_setRetries
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
   _nrf_startListening
     _nrf_ce
     _nrf_flush_rx
       _nrf_csn
       _spi_fast_shift
     _nrf_flush_tx
       _nrf_csn
       _spi_fast_shift
     _nrf_read_register
       _nrf_csn
       _spi_fast_shift
     _nrf_write_register
       _nrf_csn
       _nrf_read_register (ARG)
         _nrf_csn
         _spi_fast_shift
       _spi_fast_shift (ARG)
     _nrf_write_register_len
       _nrf_csn
       _spi_fast_shift
   _nrf_stopListening
     _nrf_ce
     _nrf_flush_rx
       _nrf_csn
       _spi_fast_shift
     _nrf_flush_tx
       _nrf_csn
       _spi_fast_shift
   _nrf_write
     _nrf_flush_tx
       _nrf_csn
       _spi_fast_shift
     _nrf_getDynamicPayloadSize
       _nrf_csn
       _spi_fast_shift
     _nrf_powerDown
       _nrf_read_register
         _nrf_csn
         _spi_fast_shift
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
     _nrf_read_register_len
       _nrf_csn
       _spi_fast_shift
     _nrf_startWrite
       _nrf_ce
       _nrf_read_register
         _nrf_csn
         _spi_fast_shift
       _nrf_write_payload
         _nrf_csn
         _spi_fast_shift
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
     _nrf_whatHappened
       _nrf_write_register
         _nrf_csn
         _nrf_read_register (ARG)
           _nrf_csn
           _spi_fast_shift
         _spi_fast_shift (ARG)
   _printf
     __doprnt
       Absolute function(Fake) *
       ___bmul *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _sb_readHumidity
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _si7021_ReadHumidity (ARG)
         _I2C1_ReadFrame
         _I2C1_WriteByte
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
       _si7021_ReadTemperature (ARG)
         _I2C1_ReadFrame
         _I2C1_WriteByte
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _si7021_ReadHumidity
       _I2C1_ReadFrame
       _I2C1_WriteByte
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _sb_readTemperature
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _si7021_ReadHumidity (ARG)
         _I2C1_ReadFrame
         _I2C1_WriteByte
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
       _si7021_ReadTemperature (ARG)
         _I2C1_ReadFrame
         _I2C1_WriteByte
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _si7021_ReadTemperature
       _I2C1_ReadFrame
       _I2C1_WriteByte
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _spi_init
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___bmul *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      32       7       62.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Dec 17 13:12:40 2016

                                          pc 0002                               ___bmul@product 0072  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0072  
                               ___ftadd@exp1 004C                                 ___ftadd@exp2 004B  
                                __CFG_LVP$ON 0000                                 ___ftadd@sign 004A  
                                        l242 16C5                                          l371 1171  
                                        l550 1244                                          l702 0B32  
                                        l703 0B33                                          l704 0B34  
                                        l553 1246                                          l289 138D  
                                        l571 1FB4                                          l547 1242  
                                        l580 11F5                                          l581 11FA  
                                        l709 0B42                                          l582 11FF  
                                        l583 1204                                          l751 13AB  
                                        l681 0AFF                                          l761 13BF  
                                        l578 11F0                                          l690 0B0F  
                                        l762 13BC                                          l691 0B12  
                                        l755 13B1                                          l747 13A1  
                                        l692 0B17                                          l685 0B0A  
                                        l765 13C4                                          l694 0B1B  
                                        l766 13C6                                          l758 13B6  
                                        l865 1004                                          l698 0B1E  
                                        l699 0B20                      __size_of_nrf_setPALevel 002E  
                                        l994 01C2                                          l996 01C4  
                                        l997 01C6                                          l998 01C8  
                               __CFG_CPD$OFF 0000                   __end_of_child_payload_size 082C  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                          nrf_available@result 007A  
                     nrf_setCRCLength@config 007B                          nrf_available@status 007C  
                    __size_of_nrf_setChannel 001E                                         S5398 1800  
                        nrf_write@observe_tx 002F                       nrf_setCRCLength@length 007A  
                               ___ftdiv@cntr 003A                                 ___ftdiv@sign 003F  
                                       l1000 01DF                                         l1022 028B  
                                       l1023 028C                                         l1120 0645  
                                       l1017 0289                                         l1134 06E4  
                                       l1304 0015                                         l1064 0426  
                                       l1410 1761                                         l1091 05BE  
                                       l1059 0404                                         l1068 0448  
                                       l1501 0CB4                                         l1088 053A  
                                       l1249 1183                                         l1417 1774  
                                       l1441 0125                                         l4002 12D2  
                                       l1418 177C                                         l1099 05A4  
                                       l4022 1298                                         l4006 12DB  
                                       l4040 1282                                         l4024 12AC  
                                       l4108 11C1                                         l4124 1323  
                                       l4134 132F                                         l4038 1271  
                                       l4070 171F                                         l4054 16F3  
                                       l4310 01F2                                         l4302 01CD  
                                       l4152 13E3                                         l4128 1328  
                                       l4136 1333                                         l4072 1723  
                                       l4056 16F5                                         l4048 16D5  
                                       l4400 0350                                         l4226 10E5  
                                       l4410 0383                                         l4306 01E5  
                                       l4180 1173                                         l4164 13FD  
                                       l4156 13EA                                         l4068 1707  
                                       l4412 038F                                         l4404 0364  
                                       l4420 039D                                         l4324 023A  
                                       l4166 13FF                                         l4158 13EB  
                                       l4510 04F9                                         l4502 04D8  
                                       l4422 03CA                                         l4342 0262  
                                       l4318 0221                                         l3710 13B4  
                                       l3640 1637                                         l3632 1617  
                                       l4432 03EC                                         l4416 0398  
                                       l4408 0377                                         l4352 02A2  
                                       l4336 0261                                         l4344 0286  
                                       l3704 13A8                                         l4602 065B  
                                       l4514 0515                                         l4434 03F8  
                                       l4370 02D6                                         l4346 028E  
                                       l4290 01BD                                         l3810 00B5  
                                       l3652 1649                                         l4612 0690  
                                       l4532 0550                                         l4524 0538  
                                       l4516 0518                                         l4508 04F6  
                                       l4364 02C7                                         l4356 02A4  
                                       l3580 173E                                         l3654 165C  
                                       l3638 1635                                         l3734 117D  
                                       l4622 06B4                                         l4606 066E  
                                       l4542 0574                                         l4390 0329  
                                       l4374 02D9                                         l4382 0300  
                                       l4358 02B2                                         l4286 01A9  
                                       l3590 1766                                         l3582 1748  
                                       l3806 00AE                                         l3656 1660  
                                       l3752 104C                                         l3728 1031  
                                       l4632 06D3                                         l4616 0693  
                                       l4552 0593                                         l4536 0553  
                                       l4472 046A                                         l4384 030C  
                                       l4368 02D4                                         l3672 0B06  
                                       l3592 176E                                         l3584 174D  
                                       l3576 1737                                         l3840 0104  
                                       l3816 00C4                                         l3904 0D55  
                                       l5272 0F9D                                         l5248 0F17  
                                       l3770 0026                                         l4626 06C7  
                                       l4546 0587                                         l4482 0492  
                                       l4474 0479                                         l4378 02ED  
                                       l4298 01C9                                         l4722 0CAB  
                                       l4714 0C90                                         l3834 00F1  
                                       l3780 0044                                         l3748 1046  
                                       l4652 0733                                         l4644 06EE  
                                       l4660 0762                                         l4572 05EA  
                                       l4396 0343                                         l4724 0CB7  
                                       l4716 0C9E                                         l3852 0137  
                                       l3836 00FB                                         l3828 00DE  
                                       l3940 0DE7                                         l3924 0DA4  
                                       l5284 0FB5                                         l4910 103F  
                                       l4646 0711                                         l4662 0771  
                                       l4638 06E8                                         l4582 0609  
                                       l4670 0798                                         l4558 05A8  
                                       l4574 05F0                                         l4494 04C2  
                                       l4478 0486                                         l3694 0B3D  
                                       l3846 0117                                         l3838 0100  
                                       l3918 0D8E                                         l5286 0FD7  
                                       l3792 006F                                         l4656 0744  
                                       l4568 05D7                                         l4496 04C5  
                                       l4488 04A4                                         l4728 0CC5  
                                       l3856 0149                                         l3848 0121  
                                       l3952 0E03                                         l3936 0DDF  
                                       l3778 0036                                         l4682 07D5  
                                       l4674 07AD                                         l4666 0785  
                                       l4594 0643                                         l4586 061C  
                                       l4578 05F5                                         l3866 0164  
                                       l3882 0CFB                                         l3796 007D  
                                       l3788 0064                                         l4836 16A8  
                                       l4828 1680                                         l3980 145B  
                                       l3972 143D                                         l4588 0625  
                                       l4684 017E                                         l3876 0CE5  
                                       l3948 0DFB                                         l3974 1449  
                                       l4678 07C2                                         l4686 07DF  
                                       l4864 130B                                         l4880 14C6  
                                       l3984 1464                                         l4696 0C60  
                                       l3896 0D3C                                         l4946 1209  
                                       l4858 12FA                                         l3996 12BA  
                                       l4798 159C                                         l4894 17C4  
                                       l3998 12C6                                         l4888 17B3  
                                       STR_1 08A8                                         STR_2 08F7  
                           ??_I2C1_ReadFrame 0072                                         STR_3 0AA1  
                                       STR_4 0AC1                                         STR_7 0AF6  
                                       u3315 1743                                         u4035 00DF  
                                       u4125 0118                                         u4205 0D1D  
                                       u5015 0463                                         u3335 175C  
                                       u4215 0D3D                                         u4065 00F2  
                                       u4225 0D4C                                         u4305 0DE8  
                                       u3355 1769                                         u4235 0D56  
                                       u4315 0DEE                                         u6100 0EDB  
                                       u4405 144A                                         u5125 04EE  
                                       u6110 0EE9                                         u4415 1454  
                                       u5135 0508                                         u4095 0105  
                                       u4425 145C                                         u4345 0E04  
                                       u3395 1783                                         u4195 0D0D  
                                       u4355 0E0A                                         u4275 0DB0  
                                       u3805 1189                                         u5085 04B5  
                                       u4285 0DC0                                         u4455 12BD  
                                       u3905 0059                                         u4385 1440  
                                       u3915 0065                                         u4475 12CC  
                                       u5515 0C67                                         u4485 12D3  
                                       u4805 02C0                                         u6317 0E3E  
                                       u4815 02CD                                         u6407 0FDE  
                                       u6327 0E56                                         u5465 07AB  
                                       u5545 0C91                                         u6417 0FF4  
                                       u6337 0E68                                         u3875 0039  
                                       u6507 160A                                         u3795 1184  
                                       u6427 0BDF                                         u6347 0E96  
                                       u6437 0B60                                         u6357 0F10  
                                       u5910 1257                                         u3895 0045  
                                       u6447 1414                                         u5575 0CAC  
                                       u6367 0F25                                         u5920 125E  
                                       u6457 142C                                         u6377 0F82  
                                       u6467 1498                                         u4955 041F  
                                       u6387 0FB0                                         u5924 1259  
                                       u5844 17F2                                         u6477 1580  
                                       u5845 17F1                                         u6397 0FD1  
                                       u6487 1349                                         u6497 1363  
                                       u4985 0441                                         u5875 10C2  
                                       _WPUB 020D                                 __CFG_WRT$OFF 0000  
                              __CFG_FCMEN$ON 0000                                         _main 0E2B  
                               ___ftpack@arg 0070                                 ___ftpack@exp 0073  
                                       fsr0h 0005                                         fsr1h 0007  
                                       fsr0l 0004                                         indf0 0000  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                      __size_of_nrf_setRetries 0015  
                              __CFG_BOREN$ON 0000                                         ltemp 007E  
                                       start 0002                                         ttemp 007E  
                                       wtemp 007E                            ___bmul@multiplier 0073  
                              __CFG_MCLRE$ON 0000                                 ___ftmul@cntr 002E  
                       __end_of_Device_SetUp 1261                     ??_si7021_ReadTemperature 0050  
                   __end_of_nrf_setCRCLength 117B                                 ___ftmul@sign 002F  
                   __size_of_nrf_setDataRate 0034                                 ___fttol@exp1 0069  
                               ___fttol@lval 0065              __size_of_nrf_write_register_len 0028  
                            __end_of___aldiv 0086                                        ?_main 0070  
 __end_ofnrf_setPayloadSize@max_payload_size 084B           nrf_setPayloadSize@max_payload_size 084A  
                            __end_of___ftadd 017C                                        STR_10 0A2F  
                                      STR_11 0A3C                                        STR_12 0AA9  
                                      STR_20 0A13                                        STR_21 0AEA  
                                      STR_13 0A55                                        STR_22 0AF0  
                                      STR_14 0ADE                                        STR_30 0A86  
                                      STR_23 0AB1                                        STR_31 0A74  
                                      STR_15 0A6A                                        STR_16 0AE4  
                                      STR_32 0A60                                        STR_24 09D5  
                                      STR_40 098E                                        STR_25 0A98  
                                      STR_17 0A8F                                        STR_41 09A1  
                                      STR_33 0951                                __CFG_WDTE$OFF 0000  
                                      STR_26 0AD7                                        STR_18 0AD0  
                                      STR_50 0AC9                                        STR_42 0A05  
                                      STR_34 097B                                        STR_51 09C4  
                                      STR_27 0AB9                                        STR_43 0A49  
                                      STR_19 0A21                                        STR_35 09F6  
                                      STR_28 09E6                                        STR_44 09C4  
                                      STR_52 09B3                                        STR_36 0921  
                                      STR_37 097B                                        STR_29 0A7D  
                                      STR_38 0967                                        STR_39 0939  
                            __end_of___ftdiv 0D77                              __end_of___ftmul 0E2B  
                            __end_of___fttol 0CCE                              __end_of___lwdiv 1469  
                            __end_of___lwmod 12E0                  ??_nrf_getDynamicPayloadSize 0072  
                                ?_UART_Debug 0071                              __end_of__doprnt 07E2  
                                      _TXREG 019A                             _nrf_whatHappened 1214  
                         __size_of_UARTSetup 0054                     __end_of_nrf_read_payload 172F  
                            __end_of_dpowers 0816                        __end_of_nrf_available 130D  
                            __end_of_isdigit 1033                                ___ftpack@sign 0074  
                                      _putch 1FB4                                        main@i 00C7  
                            __end_of_nrf_csn 1FCD                      __size_of_nrf_startWrite 0034  
                                      pclath 000A                             ??_I2C1_WriteByte 0071  
                                      ltemp0 007E                                        ltemp1 0082  
                                      ltemp2 0086                                        ltemp3 0080  
                   __size_of_sb_readHumidity 004B                                        ttemp0 007E  
                                      ttemp1 0081                                        ttemp2 0084  
                                      ttemp3 0087                                        ttemp4 007F  
                                      status 0003                                        wtemp0 007E  
                                      wtemp1 0080                                        wtemp2 0082  
                                      wtemp3 0084                                        wtemp4 0086  
                                      wtemp5 0088                                        wtemp6 007F  
                            __end_of_sprintf 11EE                        nrf_available@pipe_num 007B  
                            __initialization 07E2                                 __end_of_main 1000  
                     _rf24_crclength_e_str_0 0856                       _rf24_crclength_e_str_1 0880  
                     _rf24_crclength_e_str_2 0868                       _rf24_crclength_e_str_P 0838  
                           __end_of_i2c_init 1113                               _si7021_tempDec 00AB  
                        _nrf_openWritingPipe 149E                               _si7021_tempNum 00AC  
                       nrf_write_payload@buf 0076                                       ??_main 00B4  
                       nrf_write_payload@len 0072                                ___fttol@sign1 0064  
                             __CFG_PLLEN$OFF 0000                            _child_pipe_enable 0832  
                         spi_fast_shift@data 0070                               _nrf_get_status 1090  
                      __end_of_nrf_powerDown 1017                             ??_spi_fast_shift 0070  
                                     ?_putch 0070                                       _ANSELB 018D  
                           __end_of___ftpack 1793                       _nrf_write_register_len 1261  
                               ?_nrf_powerUp 0070                         ?_nrf_openWritingPipe 0070  
                           __end_of___lwtoft 1068                                       _SPBRGH 019C  
                                     _SPBRGL 019B                           _sb_readTemperature 1520  
                  _nrf_getDynamicPayloadSize 112B                               __CFG_PWRTE$OFF 0000  
                               __doprnt$1464 0027                                 __doprnt$1473 002F  
                               __doprnt$1465 0029                                 __doprnt$1466 002B  
                               __doprnt$1467 002D                          __size_of_UART_Debug 0017  
                        ?_sb_readTemperature 0070                                       ___bmul 1044  
                          __end_of_UARTSetup 1610              __size_of_si7021_ReadTemperature 007F  
               __size_of_nrf_toggle_features 0015                                    ??___aldiv 0078  
                         nrf_flush_rx@status 0073                                       ___wmul 117B  
                        nrf_read_payload@buf 007B                          nrf_read_payload@len 0072  
                                  ??___ftadd 0046                               __CFG_STVREN$ON 0000  
                                  ??___ftdiv 0036                                    ??___ftmul 0026  
                                  ??___fttol 0060                                    ??___lwdiv 0074  
                                  ??___lwmod 007C                  __end_of_rf24_pa_dbm_e_str_0 088E  
                __end_of_rf24_pa_dbm_e_str_1 0895                  __end_of_rf24_pa_dbm_e_str_2 089C  
                __end_of_rf24_pa_dbm_e_str_3 0880                  __end_of_rf24_pa_dbm_e_str_P 0826  
                       nrf_setDataRate@speed 007B                                    ??__doprnt 0023  
                       nrf_setDataRate@setup 007C                           nrf_flush_tx@status 0073  
                                     _nrf_ce 1FCD                                 __doprnt@flag 003C  
                                     _printf 10CF                  __size_of_nrf_setAutoAck_all 0011  
                  __end_of_child_pipe_enable 0838                            ??_nrf_setDataRate 0079  
                             _nrf_setPALevel 130D                                 __doprnt@prec 0038  
             I2C1_ReadFrame@i2c1SlaveAddress 0073                        ___ftmul@f3_as_product 002B  
                             nrf_write@tx_ok 0031                             __end_of_nrf_read 1025  
                                  ??_isdigit 0070                           _ack_payload_length 00A5  
                     __end_of_nrf_get_status 10A5                                    ??_nrf_csn 0072  
                    nrf_write_payload@status 0075                               _nrf_setChannel 11B2  
                           __end_of_spi_init 112B                         ??_sb_readTemperature 006A  
                    ??_nrf_read_register_len 0074                           __size_of_StatusLED 0026  
                                  ??_sprintf 004B                        ??_nrf_openWritingPipe 0079  
                    __end_of__initialization 07FD                               _nrf_setRetries 10BA  
                                 ___ftadd@f1 0040                                   ___ftadd@f2 0043  
                      __size_of_Device_SetUp 0027                      nrf_write_register@value 0075  
                                 ___ftdiv@f1 0033                                   ___ftdiv@f2 0030  
                                 ___ftdiv@f3 003B                       sb_readTemperature@temp 006E  
                        ___bmul@multiplicand 0070                                   ___ftmul@f1 0020  
                                 ___ftmul@f2 0023                                   ___fttol@f1 005C  
                          ??_sb_readHumidity 006A                               __pcstackCOMMON 0070  
               nrf_write_register_len@status 0075                                 __pidataBANK1 1FDE  
                     __end_of_nrf_setPALevel 133B                            nrf_startWrite@buf 0022  
                          nrf_startWrite@len 0020                                __end_of_putch 1FBA  
                 __end_of_nrf_write_register 11B2                                   ___lwtoft@c 0078  
                     __end_of_nrf_setChannel 11D0                              _si7021_humidDec 00A9  
                  si7021_ReadHumidity@result 0055                  __size_of_nrf_startListening 0035  
                            _si7021_humidNum 00AA                               _OPTION_REGbits 0095  
               __size_of_si7021_ReadHumidity 007F                              ?_nrf_get_status 0070  
                     _si7021_ReadTemperature 0BC8                  __end_of_nrf_openReadingPipe 1800  
                               _Device_SetUp 123A                                   __doprnt@ap 0022  
                                 __doprnt@cp 0032                                   __doprnt@pb 003E  
                                    ??_putch 0071                               _nrf_startWrite 1401  
            nrf_getDynamicPayloadSize@result 0073                       __end_of_nrf_setRetries 10CF  
                                 __pbssBANK1 00A0                                   __pbssBANK2 0120  
                      nrf_write_register@reg 0077                   ?_nrf_enableDynamicPayloads 0070  
                                  ?_i2c_init 0070                           _child_payload_size 0826  
                                nrf_ce@level 0070                  si7021_ReadHumidity@readData 005A  
                              ?_Timer1_Setup 0070                                   _child_pipe 082C  
                   __end_of_nrf_whatHappened 123A                                ?_nrf_flush_rx 0070  
                              ?_nrf_flush_tx 0070                                   __pmaintext 0E2B  
              si7021_ReadTemperature@rawTemp 0058                          nrf_setPALevel@level 007B  
                                    ?___bmul 0070                          nrf_setPALevel@setup 007A  
                          ?_nrf_setCRCLength 0070                                      ?___wmul 0070  
                         __size_of_nrf_begin 0051                            __end_of_StatusLED 1214  
                   nrf_whatHappened@rx_ready 007A                              ?_nrf_setPALevel 0070  
                         ??_nrf_setCRCLength 0079                           __size_of_nrf_write 0061  
                                    ?_nrf_ce 0070                                    ?___ftpack 0070  
                                    ?_printf 003F                                  nrf_csn@mode 0070  
                                  ?___lwtoft 0078                              ?_nrf_setChannel 0070  
                               ??_UART_Debug 0073                                  nrf_read@buf 0022  
                                nrf_read@len 0020                       __end_of_nrf_startWrite 1435  
                                    _SSP2ADD 021A                                      _SSP1BUF 0211  
                                    _SSP2BUF 0219                      nrf_read_register@result 0074  
                          ?_nrf_read_payload 0072                         sb_readHumidity@humid 006E  
                            ?_nrf_setRetries 0079                         _sb_readHumidity$2071 006B  
                         ??_nrf_read_payload 0073                                   ??_i2c_init 0070  
                    _nrf_openWritingPipe$347 007B                         __size_of_nrf_powerUp 000C  
                          UARTSetup@baudrate 0026                               ??_Timer1_Setup 0070  
                                  ?_nrf_read 0020                               ??_nrf_flush_rx 0072  
                             ??_nrf_flush_tx 0072                           __end_of_UART_Debug 10FC  
                                    ___aldiv 0004                              __size_of___bmul 0011  
                                  ?_spi_init 0070                                      ___ftadd 0086  
                                    ___ftdiv 0CCE                              __size_of___wmul 001B  
                                    ___ftmul 0D77                                      ___fttol 0C47  
         __size_of_nrf_getDynamicPayloadSize 001A                                      ___lwdiv 1435  
                                    ___lwmod 12B4                                      __doprnt 017C  
                                 ??___ftpack 0075                              __size_of_nrf_ce 0007  
                      nrf_whatHappened@tx_ok 0020                                      __ptext1 11D0  
                                    __ptext2 1113                                      __ptext3 1520  
                                    __ptext4 0BC8                                      __ptext5 14D5  
                                    __ptext6 0B49                                      __ptext7 1055  
                                    __ptext8 0D77                                      __ptext9 0CCE  
                            __size_of_printf 0016                         nrf_read_register@reg 0073  
                                 ??___lwtoft 007B                               _UARTSetup$2069 0028  
                          __end_of_hexpowers 081E                                    _T1CONbits 0018  
                                    _dpowers 080C                        nrf_setDataRate@result 007A  
                        nrf_setRetries@delay 007D                                      _isdigit 1025  
                        nrf_setRetries@count 0079                             ___aldiv@dividend 0074  
                                    _nrf_csn 1FC6                      ?_nrf_write_register_len 0072  
                            ?_nrf_startWrite 0020                          _nrf_toggle_features 10A5  
                                    main@len 00C6                                      _sprintf 11D0  
                 nrf_openReadingPipe@address 0079                                      clrloop0 1FBB  
                              __doprnt@width 0039                            __end_of_nrf_begin 15BC  
                            nrf_write@result 002E                         end_of_initialization 07FD  
                          __end_of_octpowers 080C                              nrf_write@status 002C  
                       nrf_get_status@status 0073                            __end_of_nrf_write 16CD  
                                    init_ram 1FC0                                      initloop 1FC1  
             __end_of_rf24_crclength_e_str_0 085F               __end_of_rf24_crclength_e_str_1 0887  
             __end_of_rf24_crclength_e_str_2 0870               __end_of_rf24_crclength_e_str_P 083E  
                                 ??_nrf_read 0021                              _nrf_setDataRate 13CD  
                  nrf_write_payload@data_len 007D                      __size_of_I2C1_ReadFrame 004F  
                                  _RCSTAbits 019D                                      printf@f 003F  
                       ?_nrf_toggle_features 0070                             ___aldiv@quotient 0022  
                                 ??_spi_init 0070                                 __pstringtext 0800  
                     __size_of_nrf_available 002D                __end_of_rf24_datarate_e_str_0 08A2  
              __end_of_rf24_datarate_e_str_1 08A8                __end_of_rf24_datarate_e_str_2 0878  
              __end_of_rf24_datarate_e_str_P 0844                                    _UARTSetup 15BC  
          __end_of_nrf_getDynamicPayloadSize 1145                   __end_of_rf24_model_e_str_0 0868  
                 __end_of_rf24_model_e_str_1 0856                   __end_of_rf24_model_e_str_P 0848  
             __end_of_nrf_write_register_len 1289                             __CFG_FOSC$INTOSC 0000  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
             __size_of_nrf_read_register_len 002B                __end_of_nrf_read_register_len 12B4  
                            _sb_readHumidity 14D5                     nrf_write_register@status 0078  
                                ___ftdiv@exp 003E                                    _TXSTAbits 019E  
                        _si7021_ReadHumidity 0B49                   nrf_write_payload@blank_len 007B  
                                ___ftmul@exp 002A                        ??_nrf_toggle_features 0072  
                    __size_of_I2C1_WriteByte 0031                              StatusLED@status 0070  
                 __end_of_nrf_setAutoAck_all 1044                               __end_of___bmul 1055  
                             __end_of___wmul 1196                       __size_of_nrf_powerDown 000C  
                                _BAUDCONbits 019F                             ??_nrf_get_status 0072  
                                 ?_UARTSetup 0026                               __end_of_nrf_ce 1FD4  
                    ?_si7021_ReadTemperature 004D                        _pipe0_reading_address 00AE  
                             __end_of_printf 10E5                         ?_si7021_ReadHumidity 004D  
                       __end_of_Timer1_Setup 1FDE                          start_initialization 07E2  
                __end_of_nrf_openWritingPipe 14D5                         __end_of_nrf_flush_rx 107C  
                       __end_of_nrf_flush_tx 1090                  __size_of_sb_readTemperature 004B  
                      _nrf_write_payload$190 0077                        _nrf_write_payload$192 0079  
                         _nrf_write_register 1196                            _nrf_stopListening 1FF4  
                              _nrf_available 12E0                      __end_of_nrf_setDataRate 1401  
                         ?_nrf_stopListening 0070                  ??_nrf_enableDynamicPayloads 0079  
                     I2C1_WriteByte@i2c1Data 0070                          ?_nrf_write_register 0075  
                          __size_of_i2c_init 0017                     nrf_read_payload@data_len 007D  
                                _APFCON0bits 011D                             ??_nrf_setPALevel 0079  
                        ??_nrf_stopListening 0074                      __size_of_spi_fast_shift 000B  
                          ?_nrf_whatHappened 0079                                     ??___bmul 0071  
                                   ??___wmul 0074                   nrf_openWritingPipe@address 007D  
                                __doprnt@idx 0031                                  __doprnt@len 0034  
                                __doprnt@val 0036                           ??_nrf_whatHappened 007B  
                           ??_nrf_setChannel 0079                                  __pdataBANK1 00C8  
                                   ??_nrf_ce 0072                   __end_of_nrf_startListening 149E  
             __end_of_si7021_ReadTemperature 0C47                                     ??_printf 004D  
                                  _StatusLED 11EE                         ??_nrf_write_register 0076  
                      ??_si7021_ReadHumidity 0050                            __size_of___ftpack 0064  
                    __end_of_sb_readHumidity 1520                             ??_nrf_setRetries 007A  
                                  ___latbits 0002                            __size_of___lwtoft 0013  
                              UART_Debug@str 0071                                __pcstackBANK0 0020  
                              __pcstackBANK1 00B4                    __end_of_nrf_stopListening 2000  
              I2C1_ReadFrame@i2c1FrameLength 0071                    __size_of_nrf_setCRCLength 001B  
                               _isdigit$1659 0070                               ?_nrf_available 0070  
                              _nrf_powerDown 100B                                    __doprnt@c 003B  
                                  __doprnt@f 0020                 __size_of_nrf_openReadingPipe 006D  
             si7021_ReadTemperature@readData 005A                    nrf_setChannel@max_channel 0849  
                     nrf_read_payload@status 0075                    nrf_write_register_len@buf 0072  
                  nrf_write_register_len@len 0073                    nrf_write_register_len@reg 0076  
                           ___lwdiv@dividend 0072                            _Device_Initialize 133B  
                             _I2C1_ReadFrame 0AFA                 si7021_ReadTemperature@result 0055  
                  __size_of_nrf_read_payload 0062                      nrf_whatHappened@tx_fail 0079  
                                   ?___aldiv 0070                            __size_of_nrf_read 000E  
                         ?_Device_Initialize 0070                                     ?___ftadd 0040  
                                   ?___ftdiv 0030                                     ?___ftmul 0020  
                                   ?___fttol 005C                                     ?___lwdiv 0070  
                                   ?___lwmod 0078                                     ?__doprnt 0020  
                  _nrf_enableDynamicPayloads 136B                        nrf_setChannel@channel 007D  
                          __size_of_spi_init 0018                                  ??_UARTSetup 0079  
                                  __pswtext1 1800               si7021_ReadHumidity@rawHumidity 0058  
                                 ?_StatusLED 0070                             ??_nrf_startWrite 0021  
                        ??_Device_Initialize 007B                                     ?_isdigit 0070  
                                   ?_nrf_csn 0070                                    _hexpowers 0816  
                           ___lwdiv@quotient 0075                I2C1_ReadFrame@i2c1ReadPointer 0070  
                                   ?_sprintf 003F                               ?_nrf_powerDown 0070  
                              ??_nrf_powerUp 0079                               __size_of_putch 0006  
                         _nrf_setChannel$242 007B                                UARTSetup@baud 002C  
                                  _p_variant 00A7                             ?_nrf_setDataRate 0070  
                            ___aldiv@divisor 0070                              ___aldiv@counter 0020  
                             ___wmul@product 0074                                     _LATBbits 010D  
                                   _LATCbits 010E                                    _nrf_begin 156B  
                  __end_of_Device_Initialize 136B                                    clear_ram0 1FBA  
                                  _octpowers 0800                                   _I2C1_STATE 00A4  
                     __end_of_I2C1_ReadFrame 0B49                                     _PIE1bits 0091  
                                  _nrf_write 166C                                     _PIR1bits 0011  
                                   _PIR2bits 0012                                     _PIR4bits 0014  
                             _I2C1_WriteByte 139C                                    main@F3477 00C8  
                                  main@F3479 00CD                                     _SSP2CON1 021D  
                                   _SSP2CON3 021F                                    _wide_band 00AD  
                          _nrf_read_register 1145                                     _SSP2STAT 021C  
                      __size_of_Timer1_Setup 000A                           ?_nrf_read_register 0070  
                      __size_of_nrf_flush_rx 0014                        __size_of_nrf_flush_tx 0014  
                          ___wmul@multiplier 0070                          ??_nrf_read_register 0072  
                           ?_sb_readHumidity 0070                              ??_nrf_available 0079  
                 __size_of_nrf_stopListening 000C                           __end_of_child_pipe 0832  
                         _rf24_model_e_str_0 085F                           _rf24_model_e_str_1 084C  
                         _rf24_model_e_str_P 0844                                     _i2c_init 10FC  
                  nrf_read_payload@blank_len 007A                            _nrf_write_payload 1610  
                         nrf_write_payload@i 007C                                   ?_nrf_begin 0070  
                   nrf_read_register_len@buf 0072                     nrf_read_register_len@len 0073  
                            ?_I2C1_ReadFrame 0070                     nrf_read_register_len@reg 0075  
                               _payload_size 00A8                       __end_of_I2C1_WriteByte 13CD  
                        __end_of_nrf_powerUp 1FF4                           ?_nrf_write_payload 0072  
                        _rf24_pa_dbm_e_str_0 0887                          _rf24_pa_dbm_e_str_1 088E  
                        _rf24_pa_dbm_e_str_2 0895                          _rf24_pa_dbm_e_str_3 0878  
                                 ?_nrf_write 0023                          _rf24_pa_dbm_e_str_P 081E  
                               _Timer1_Setup 1FD4                               _spi_fast_shift 1000  
                  __end_of_nrf_read_register 1160                                 _nrf_flush_rx 1068  
                               _nrf_flush_tx 107C                            nrf_read_payload@i 007C  
                      _ack_payload_available 00B3                                 nrf_write@buf 002D  
                               nrf_write@len 0023                  si7021_ReadTemperature@F3477 00A2  
                           __size_of___aldiv 0082                          ??_nrf_write_payload 0073  
                           __size_of___ftadd 00F6                             __size_of___ftdiv 00A9  
                           __size_of___ftmul 00B4                             __size_of___fttol 0087  
                           __size_of___lwdiv 0034                             __size_of___lwmod 002C  
                                   ___ftpack 172F                             __size_of__doprnt 0666  
             I2C1_WriteByte@i2c1SlaveAddress 0071                        _rf24_datarate_e_str_0 089C  
                      _rf24_datarate_e_str_1 08A2                        _rf24_datarate_e_str_2 0870  
                                ??_StatusLED 0070                        _rf24_datarate_e_str_P 083E  
                                   ___lwtoft 1055                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                   ?_nrf_getDynamicPayloadSize 0070  
                   si7021_ReadHumidity@F3471 00A0                             __size_of_isdigit 000E  
                            ___lwdiv@divisor 0070                             _nrf_setCRCLength 1160  
                            ??_nrf_powerDown 0079                                ?_Device_SetUp 0070  
                         _nrf_setAutoAck_all 1033                             __size_of_nrf_csn 0007  
                            ___lwdiv@counter 0077                       nrf_whatHappened@status 0021  
                                   __ptext10 0086                                     __ptext11 172F  
                                   __ptext20 1435                                     __ptext12 139C  
                                   __ptext21 1044                                     __ptext13 0AFA  
                                   __ptext30 1469                                     __ptext22 166C  
                                   __ptext14 0C47                                     __ptext31 10BA  
                                   __ptext23 1214                                     __ptext15 10CF  
                                   __ptext40 10A5                                     __ptext32 1033  
                                   __ptext24 1401                                     __ptext16 017C  
                                   __ptext41 156B                                     __ptext33 1017  
                                   __ptext25 1610                                     __ptext17 1025  
                                   __ptext50 12E0                                     __ptext42 130D  
                                   __ptext34 16CD                                     __ptext26 1289  
                                   __ptext18 117B                                     __ptext51 1196  
                                   __ptext43 13CD                                     __ptext35 1FE8  
                                   __ptext27 100B                                     __ptext19 12B4  
                                   __ptext60 10E5                                     __ptext52 1090  
                                   __ptext44 11B2                                     __ptext36 149E  
                                   __ptext28 112B                                     __ptext61 1FB4  
                                   __ptext53 1000                                     __ptext45 1160  
                                   __ptext37 1793                                     __ptext29 1FF4  
                                   __ptext62 15BC                                     __ptext54 1FC6  
                                   __ptext46 1145                                     __ptext38 1261  
                                   __ptext63 0004                                     __ptext55 10FC  
                                   __ptext47 107C                                     __ptext39 136B  
                                   __ptext56 1FD4                                     __ptext48 1068  
                                   __ptext57 11EE                                     __ptext49 1FCD  
                                   __ptext58 123A                                     __ptext59 133B  
                               _SSP1CON1bits 0215                     _dynamic_payloads_enabled 00A6  
                               _SSP2CON2bits 021E                             __size_of_sprintf 001E  
                  __end_of_nrf_write_payload 166C                         main@nRF_pipe_reading 00C1  
                        ?_nrf_setAutoAck_all 0070                  __end_of_nrf_toggle_features 10BA  
                              __size_of_main 01D5                        _nrf_read_register_len 1289  
                     __end_of_spi_fast_shift 100B                   __size_of_Device_Initialize 0030  
                            ?_I2C1_WriteByte 0070                                     _nrf_read 1017  
                       main@nRF_pipe_writing 00BC                               _receivePayload 0120  
                           _nrf_read_payload 16CD                                     _spi_init 1113  
                               _SSP1STATbits 0214                         ??_nrf_setAutoAck_all 0079  
                nrf_read_register_len@status 0076                                 _SSP2STATbits 021C  
                           nrf_write@timeout 0028                          _nrf_openReadingPipe 1793  
                                _OSCSTATbits 009A                             nrf_write@tx_fail 0030  
                                _sendPayload 0140                                    putch@data 0070  
                 __end_of_sb_readTemperature 156B                                   _INTCONbits 000B  
__end_ofnrf_writeAckPayload@max_payload_size 084C          nrf_writeAckPayload@max_payload_size 084B  
__end_ofnrf_openWritingPipe@max_payload_size 0849          nrf_openWritingPipe@max_payload_size 0848  
                             ??_Device_SetUp 0070                    __size_of_nrf_whatHappened 0026  
         __size_of_nrf_enableDynamicPayloads 0031                                     isdigit@c 0071  
                         _nrf_startListening 1469                         _nrf_read_payload$201 0078  
                       _nrf_read_payload$199 0076                                  _nrf_powerUp 1FE8  
                                  sprintf@ap 004D                                    sprintf@pb 004E  
                                  sprintf@wh 004C                 __size_of_nrf_openWritingPipe 0037  
                   nrf_openReadingPipe@child 007C                             ___lwmod@dividend 007A  
                       ?_nrf_openReadingPipe 0079                                  ??_nrf_begin 0020  
                          __CFG_CLKOUTEN$OFF 0000                              ?_spi_fast_shift 0070  
                        ?_nrf_startListening 0070                                  ??_nrf_write 0024  
                                 _OSCCONbits 0099                   __size_of_nrf_read_register 001B  
                                   printf@ap 004E                                     printf@pb 004F  
                __end_of_si7021_ReadHumidity 0BC8                     ??_nrf_write_register_len 0074  
          __end_ofnrf_setChannel@max_channel 084A                                     sprintf@f 003F  
                __size_of_nrf_write_register 001C                      _sb_readTemperature$2070 006B  
                       ??_nrf_startListening 0079                                   _UART_Debug 10E5  
                            ___lwmod@divisor 0078                              ___lwmod@counter 007D  
                               ___aldiv@sign 0021                      __size_of_nrf_get_status 0015  
          __end_of_nrf_enableDynamicPayloads 139C                   __size_of_nrf_write_payload 005C  
                     ?_nrf_read_register_len 0072                        ??_nrf_openReadingPipe 007A  
                   nrf_setAutoAck_all@enable 007A  
